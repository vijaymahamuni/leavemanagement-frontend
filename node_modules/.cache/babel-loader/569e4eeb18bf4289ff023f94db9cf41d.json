{"ast":null,"code":"import _objectSpread from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Project\\\\Front_end\\\\src\\\\new_chat\\\\new_chatingroom.js\";\nimport React from \"react\";\nimport \"./newChat.css\";\nimport userImg from \"./Vijay_YNM.jpg\";\nimport VinuImg from \"./Vinu.jpg\";\nimport Tlogo from \"./Vijay_logo.jpg\";\nimport Jaya from \"./jayaprakash.jpeg\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport SendIcon from '@mui/icons-material/Send';\nimport classNames from \"classnames\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useEffect, useState } from 'react';\nimport firebase from 'firebase/compat/app';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport AddIcon from '@mui/icons-material/Add';\nimport 'firebase/compat/firestore';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { Link, Outlet, useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { v4 as uuidv4 } from 'uuid';\nimport defaultchatRoomimg from \"./default_chtappimg2.png\";\nimport Tigmalog from \"./TigmaVj.jpg\";\nfunction ChatingApp() {\n  var _this = this;\n  var Profileid = localStorage.getItem(\"proid\", Profileid);\n  var generatedID = uuidv4();\n  var ChatViewid = Profileid;\n  // let tosend_userid='10';\n\n  var Docu_ChatViewid;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setmessage = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    text = _useState4[0],\n    setText = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chatBlocklist = _useState6[0],\n    setChatblocklist = _useState6[1];\n  var timestamp = firebase.firestore.Timestamp.now();\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    chatblock = _useState8[0],\n    setChatblock = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    ticketChatList = _useState10[0],\n    setTicketChatList = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    sendTo_userid = _useState12[0],\n    setsendTo_userid = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    default_loading = _useState14[0],\n    setdefault_loading = _useState14[1];\n  useEffect(function () {\n    // setsendTo_userid(tosend_userid)\n\n    axios.get(\"http://localhost:5000/Chating_employeelist\").then(function (res) {\n      var ticketChatList = res.data.data;\n      setTicketChatList(ticketChatList);\n    }).catch(function (error) {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  useEffect(function () {\n    if (ticketChatList.length > 0) {\n      setChatblock(ticketChatList);\n    }\n  }, [ticketChatList]);\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    existingConversations = _useState16[0],\n    setExistingConversations = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    newUserChatID = _useState18[0],\n    setNewUserChatID = _useState18[1];\n  var sendMessage = function sendMessage() {\n    var db = firebase.firestore();\n    var collectionName = 'chats';\n    var subcollectionName = 'SubChat';\n    var data = {\n      text: text,\n      createdAt: timestamp,\n      from_uid: Profileid,\n      to_uid: sendmsgId\n    };\n    if (text.trim() !== '') {\n      // Use newUserChatID after it's set in the condition\n      var mainDocRef = db.collection(collectionName).doc(newUserChatID);\n      mainDocRef.set(data).then(function () {\n        // Once the main document is successfully updated, add the message to the subcollection\n        mainDocRef.collection(subcollectionName).add(data).then(function () {\n          // Message sent successfully\n        }).catch(function (error) {\n          // Handle error\n        });\n      }).catch(function (error) {\n        console.error('Error writing main document: ', error);\n      });\n      setText('');\n\n      // To immediately update the message state, you can manually add the sent message to the message state.\n      setmessage(function (prevMessages) {\n        return [].concat(_toConsumableArray(prevMessages), [data]);\n      });\n    }\n  };\n  var chatListItems = searchInput ? searchResults.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatItem\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\" + item.id,\n      className: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      onClick: function onClick() {\n        return chatblock_process(item.id, item.firstname);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, item.firstname)));\n  }) : chatblock.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatItem\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\" + item.id,\n      className: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      onClick: function onClick() {\n        return chatblock_process(item.id, item.firstname);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, item.firstname)));\n  });\n  var handleKeyPress = function handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedChatMessages = _useState20[0],\n    setSelectedChatMessages = _useState20[1];\n  useEffect(function () {\n    var unsubscribe = firebase.firestore().collection('chats').orderBy('createdAt').get().then(function (querySnapshot) {\n      var allChats = [];\n      querySnapshot.forEach(function (doc) {\n        allChats.push(_objectSpread({\n          id: doc.id\n        }, doc.data()));\n      });\n      setmessage(allChats);\n      setExistingConversations(allChats);\n    }).catch(function (error) {\n      console.error('Error getting documents: ', error);\n    });\n  }, []);\n  var Profilename = localStorage.getItem(\"profileName\", Profilename);\n  var _useState21 = useState(ChatViewid),\n    _useState22 = _slicedToArray(_useState21, 2),\n    ticketid = _useState22[0],\n    setTicketid = _useState22[1];\n  var _useState23 = useState(Profilename),\n    _useState24 = _slicedToArray(_useState23, 2),\n    chatuser_name = _useState24[0],\n    setChatuser_name = _useState24[1];\n  var _useState25 = useState(''),\n    _useState26 = _slicedToArray(_useState25, 2),\n    sendmsgId = _useState26[0],\n    setSendmsgId = _useState26[1];\n  var chatblock_process = function chatblock_process(id, firstname) {\n    // Update state variables directly\n    setdefault_loading(true);\n    setChatuser_name(firstname);\n    setActiveUser(id);\n    var convtStrId = id.toString();\n    setSendmsgId(convtStrId);\n    var existingChat = existingConversations.find(function (chat) {\n      return chat.from_uid === Profileid && chat.to_uid === convtStrId || chat.from_uid === convtStrId && chat.to_uid === Profileid;\n    });\n\n    // Initialize newUserChatID with the existing chat ID or a new one\n    var newUserChatID = existingChat ? existingChat.id : uuidv4();\n    setNewUserChatID(newUserChatID);\n    setsendTo_userid(convtStrId);\n    var duplicate_docid = id.toString();\n    setTicketid(duplicate_docid);\n\n    // Fetch and display messages for the selected chat\n    fetchMessagesForChat(newUserChatID);\n  };\n  var fetchMessagesForChat = function fetchMessagesForChat(chatID) {\n    var unsubscribe = firebase.firestore().collection('chats').doc(chatID).collection('SubChat').orderBy('createdAt').onSnapshot(function (snapshot) {\n      var messages = snapshot.docs.map(function (doc) {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n      setmessage(messages);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  };\n  var prevDate = null;\n  var _useState27 = useState(''),\n    _useState28 = _slicedToArray(_useState27, 2),\n    searchInput = _useState28[0],\n    setSearchInput = _useState28[1];\n  var _useState29 = useState([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    searchResults = _useState30[0],\n    setSearchResults = _useState30[1];\n  var handleSearch = function handleSearch(query) {\n    setSearchInput(query);\n\n    // Perform search logic (e.g., filter chatblock based on the query)\n    var results = chatblock.filter(function (item) {\n      return item.firstname.toLowerCase().includes(query.toLowerCase());\n    });\n    setSearchResults(results);\n  };\n  var _useState31 = useState(null),\n    _useState32 = _slicedToArray(_useState31, 2),\n    activeUser = _useState32[0],\n    setActiveUser = _useState32[1];\n  function formatDate(formattedDate) {\n    var today = new Date();\n    var yesterday = new Date(today);\n    yesterday.setDate(today.getDate() - 1);\n    var lastWeek = new Date(today);\n    lastWeek.setDate(today.getDate() - 7);\n    var date1 = new Date(formattedDate);\n    var date2 = new Date(today);\n    var date3 = new Date(yesterday);\n    var resultDateformat = '';\n    if (date1 === date2) {\n      resultDateformat = 'Today';\n    } else if (date1 === date3) {\n      resultDateformat = 'Yesterday';\n    }\n    console.log(\"Changed date format for demo printed\", resultDateformat);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatroom-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"backButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    className: \"backicon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, \"Chat\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search or start new chat\",\n    value: searchInput,\n    onChange: function onChange(e) {\n      return handleSearch(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SearchIcon, {\n    className: \"Search_icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, ticketChatList.filter(function (item) {\n    return item.firstname.toLowerCase().includes(searchInput.toLowerCase());\n  }).map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"chatItem\", {\n        active: item.id === activeUser\n      }),\n      key: index,\n      onClick: function onClick() {\n        return chatblock_process(item.id, item.firstname);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\".concat(item.id),\n      className: \"cover\",\n      alt: \"Profile of \".concat(item.firstname),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 19\n      }\n    }, item.firstname)));\n  }))), default_loading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://localhost:5000/images/\" + ticketid,\n    className: \"cover\",\n    alt: \"Chat User\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chatName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, chatuser_name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, \"Online\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMessages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  }, message.map(function (message, index) {\n    var messageDate = message.createdAt.toDate();\n    var formattedDate = messageDate.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n    var formattedDate_demo = formatDate(messageDate);\n    var formattedTime = messageDate.toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n    var lowercaseTime = formattedTime.replace(/\\s/g, '').toLowerCase();\n    var showDate = prevDate !== formattedDate;\n    prevDate = formattedDate;\n    var isSentByCurrentUser = message.from_uid === Profileid && message.to_uid === sendTo_userid;\n    var isReceivedByCurrentUser = message.from_uid === sendTo_userid && message.to_uid === Profileid;\n\n    //  8===8 && 10===10\n    if (isSentByCurrentUser || isReceivedByCurrentUser) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 9\n        }\n      }, showDate && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"messageDate_show\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 24\n        }\n      }, formattedDate), /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"message \".concat(isSentByCurrentUser ? 'sent' : 'received'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"chat_msgstl\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 2\n        }\n      }, message.text, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"chating_time\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 7\n        }\n      }, lowercaseTime))));\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onKeyDown: handleKeyPress,\n    onChange: function onChange(e) {\n      return setText(e.target.value);\n    },\n    placeholder: \"Type a message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SendIcon, {\n    className: \"sendIcon\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatRoom_loadingimg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: defaultchatRoomimg,\n    className: \"imgdeafult-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"company-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 5\n    }\n  }, \"Welcome to Tigma Technology Chat\")))));\n}\nexport default ChatingApp;","map":{"version":3,"names":["React","userImg","VinuImg","Tlogo","Jaya","SearchIcon","SendIcon","classNames","ArrowBackIcon","useEffect","useState","firebase","Button","axios","AddIcon","Scrollbars","Link","Outlet","useNavigate","useParams","useLocation","v4","uuidv4","defaultchatRoomimg","Tigmalog","ChatingApp","_this","Profileid","localStorage","getItem","generatedID","ChatViewid","Docu_ChatViewid","_useState","_useState2","_slicedToArray","message","setmessage","_useState3","_useState4","text","setText","_useState5","_useState6","chatBlocklist","setChatblocklist","timestamp","firestore","Timestamp","now","_useState7","_useState8","chatblock","setChatblock","_useState9","_useState10","ticketChatList","setTicketChatList","_useState11","_useState12","sendTo_userid","setsendTo_userid","_useState13","_useState14","default_loading","setdefault_loading","get","then","res","data","catch","error","console","length","_useState15","_useState16","existingConversations","setExistingConversations","_useState17","_useState18","newUserChatID","setNewUserChatID","sendMessage","db","collectionName","subcollectionName","createdAt","from_uid","to_uid","sendmsgId","trim","mainDocRef","collection","doc","set","add","prevMessages","concat","_toConsumableArray","chatListItems","searchInput","searchResults","map","item","index","createElement","className","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","id","onClick","chatblock_process","firstname","handleKeyPress","event","_useState19","_useState20","selectedChatMessages","setSelectedChatMessages","unsubscribe","orderBy","querySnapshot","allChats","forEach","push","_objectSpread","Profilename","_useState21","_useState22","ticketid","setTicketid","_useState23","_useState24","chatuser_name","setChatuser_name","_useState25","_useState26","setSendmsgId","setActiveUser","convtStrId","toString","existingChat","find","chat","duplicate_docid","fetchMessagesForChat","chatID","onSnapshot","snapshot","messages","docs","prevDate","_useState27","_useState28","setSearchInput","_useState29","_useState30","setSearchResults","handleSearch","query","results","filter","toLowerCase","includes","_useState31","_useState32","activeUser","formatDate","formattedDate","today","Date","yesterday","setDate","getDate","lastWeek","date1","date2","date3","resultDateformat","log","type","placeholder","value","onChange","e","target","active","alt","Fragment","messageDate","toDate","toLocaleDateString","year","month","day","formattedDate_demo","formattedTime","toLocaleTimeString","hour","minute","lowercaseTime","replace","showDate","isSentByCurrentUser","isReceivedByCurrentUser","onKeyDown","class"],"sources":["C:/Project/Front_end/src/new_chat/new_chatingroom.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./newChat.css\";\r\nimport userImg from \"./Vijay_YNM.jpg\";\r\nimport VinuImg from \"./Vinu.jpg\";\r\nimport Tlogo from \"./Vijay_logo.jpg\";\r\nimport Jaya from \"./jayaprakash.jpeg\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport classNames from \"classnames\"; \r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { useEffect, useState } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from \"axios\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport 'firebase/compat/firestore';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { Link, Outlet, useNavigate, useParams,useLocation } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport defaultchatRoomimg from \"./default_chtappimg2.png\";\r\nimport Tigmalog from \"./TigmaVj.jpg\";\r\nfunction ChatingApp(){\r\n  let Profileid=localStorage.getItem(\"proid\",Profileid)\r\n  const generatedID = uuidv4();\r\n  var ChatViewid=Profileid;\r\n  // let tosend_userid='10';\r\n  \r\n  var Docu_ChatViewid;\r\n\r\n  const[message,setmessage]=useState([])\r\n  const [text, setText] = useState('');\r\n  const [chatBlocklist,setChatblocklist]=useState([])\r\n  const timestamp = firebase.firestore.Timestamp.now();\r\n  const [chatblock, setChatblock] = useState([]);\r\n  const [ticketChatList, setTicketChatList] = useState([]);\r\n  const [sendTo_userid, setsendTo_userid] = useState('');\r\n  const [default_loading, setdefault_loading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // setsendTo_userid(tosend_userid)\r\n\r\n    axios.get(`http://localhost:5000/Chating_employeelist`)\r\n      .then((res) => {\r\n        const ticketChatList = res.data.data;\r\n        setTicketChatList(ticketChatList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, []); \r\n  \r\n  useEffect(() => {\r\n  if (ticketChatList.length > 0) {\r\n      setChatblock(ticketChatList);\r\n    }\r\n  }, [ticketChatList]);\r\n\r\n  const [existingConversations, setExistingConversations] = useState([]);\r\n  const [newUserChatID, setNewUserChatID] = useState(null);\r\n  const sendMessage = () => {\r\n    const db = firebase.firestore();\r\n    const collectionName = 'chats';\r\n    const subcollectionName = 'SubChat';\r\n    const data = {\r\n      text,\r\n      createdAt: timestamp,\r\n      from_uid: Profileid,\r\n      to_uid: sendmsgId,\r\n    };\r\n  \r\n    if (text.trim() !== '') {\r\n      // Use newUserChatID after it's set in the condition\r\n      const mainDocRef = db.collection(collectionName).doc(newUserChatID);\r\n  \r\n      mainDocRef\r\n        .set(data)\r\n        .then(() => {\r\n          // Once the main document is successfully updated, add the message to the subcollection\r\n          mainDocRef\r\n            .collection(subcollectionName)\r\n            .add(data)\r\n            .then(() => {\r\n              // Message sent successfully\r\n            })\r\n            .catch((error) => {\r\n              // Handle error\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error writing main document: ', error);\r\n        });\r\n  \r\n      setText('');\r\n  \r\n      // To immediately update the message state, you can manually add the sent message to the message state.\r\n      setmessage((prevMessages) => [...prevMessages, data]);\r\n    }\r\n  };\r\n  \r\n\r\n\r\nconst chatListItems = searchInput\r\n  ? searchResults.map((item, index) => (\r\n    <div className=\"chatItem\" key={index}>\r\n    <div className=\"imgbx\">\r\n      <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\r\n    </div>\r\n    <div className=\"chatInfo\">\r\n      <p className=\"chatName\" onClick={()=>chatblock_process(item.id,item.firstname)}>{item.firstname}</p>\r\n    </div>\r\n  </div>\r\n  \r\n    )): chatblock.map((item, index) => (\r\n    <div className=\"chatItem\" key={index}>\r\n    <div className=\"imgbx\">\r\n      <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\r\n    </div>\r\n    <div className=\"chatInfo\">\r\n      <p className=\"chatName\" onClick={()=>chatblock_process(item.id,item.firstname)}>{item.firstname}</p>\r\n      </div>\r\n  </div>\r\n    ));\r\nconst handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\nconst [selectedChatMessages, setSelectedChatMessages] = useState([]);\r\n\r\nuseEffect(() => {\r\n  const unsubscribe =firebase.firestore().collection('chats')\r\n  .orderBy('createdAt')\r\n  .get()\r\n  .then((querySnapshot) => {\r\n    const allChats = [];\r\n    querySnapshot.forEach((doc) => {\r\n      allChats.push({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      });\r\n    });\r\n    setmessage(allChats);\r\n    setExistingConversations(allChats)\r\n    \r\n  })\r\n  .catch((error) => {\r\n    console.error('Error getting documents: ', error);\r\n  });\r\n  \r\n  }, []);\r\n\r\n\r\nlet Profilename=localStorage.getItem(\"profileName\",Profilename);\r\n\r\nconst [ticketid, setTicketid] = useState(ChatViewid);\r\nconst [chatuser_name,setChatuser_name] = useState(Profilename);\r\nconst [sendmsgId,setSendmsgId ] = useState('');\r\n\r\nconst chatblock_process = (id, firstname) => {\r\n  // Update state variables directly\r\n  setdefault_loading(true)\r\n  setChatuser_name(firstname);\r\n  setActiveUser(id);\r\n  const convtStrId = id.toString();\r\n  setSendmsgId(convtStrId);\r\n\r\n  const existingChat = existingConversations.find(\r\n    (chat) =>\r\n      (chat.from_uid === Profileid && chat.to_uid === convtStrId) ||\r\n      (chat.from_uid === convtStrId && chat.to_uid === Profileid)\r\n  );\r\n\r\n  // Initialize newUserChatID with the existing chat ID or a new one\r\n  const newUserChatID = existingChat ? existingChat.id : uuidv4();\r\n  setNewUserChatID(newUserChatID);\r\n\r\n  setsendTo_userid(convtStrId);\r\n\r\n  const duplicate_docid = id.toString();\r\n  setTicketid(duplicate_docid);\r\n\r\n  // Fetch and display messages for the selected chat\r\n  fetchMessagesForChat(newUserChatID);\r\n};\r\n\r\nconst fetchMessagesForChat = (chatID) => {\r\n  const unsubscribe = firebase.firestore().collection('chats').doc(chatID).collection('SubChat')\r\n  .orderBy('createdAt')\r\n  .onSnapshot(snapshot => {\r\n    const messages = snapshot.docs.map(doc => ({\r\n      id: doc.id,\r\n      ...doc.data(),\r\n    }));\r\n    setmessage(messages);\r\n  });\r\n\r\nreturn () => unsubscribe();\r\n};\r\n\r\nlet prevDate = null;  \r\nconst [searchInput, setSearchInput] = useState('');\r\nconst [searchResults, setSearchResults] = useState([]);\r\nconst handleSearch = (query) => {\r\n  setSearchInput(query);\r\n\r\n  // Perform search logic (e.g., filter chatblock based on the query)\r\n  const results = chatblock.filter((item) =>\r\n    item.firstname.toLowerCase().includes(query.toLowerCase())\r\n  );\r\n  setSearchResults(results);\r\n};\r\n\r\nconst [activeUser, setActiveUser] = useState(null);\r\n\r\nfunction formatDate(formattedDate) {\r\n  const today = new Date();\r\n  const yesterday = new Date(today);\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const lastWeek = new Date(today);\r\n  lastWeek.setDate(today.getDate() - 7);\r\n  const date1 = new Date(formattedDate);\r\n  const date2 = new Date(today);\r\n  const date3 =new Date(yesterday)\r\n  let resultDateformat='';\r\n  if (date1 === date2) {\r\n    resultDateformat='Today';\r\n  } else if (date1 === date3){\r\n    resultDateformat= 'Yesterday';\r\n  } \r\n  console.log(\"Changed date format for demo printed\",resultDateformat);\r\n\r\n\r\n}\r\n  return(\r\n    <div className=\"chatroom-container\">\r\n          <div className=\"left-side\">\r\n          <div className=\"header\">\r\n         \r\n          <div className=\"backButton\">\r\n          <ArrowBackIcon className=\"backicon\" />\r\n          <div className=\"chat_heading\">\r\n            <p>Chat</p>\r\n            </div>\r\n        </div>\r\n           \r\n\r\n          </div>\r\n\r\n      \r\n          <div className=\"search-chat\">\r\n            <div>\r\n              <input\r\n      type=\"text\"\r\n      placeholder=\"Search or start new chat\"\r\n      value={searchInput}\r\n      onChange={(e) => handleSearch(e.target.value)}\r\n    />\r\n              <SearchIcon className=\"Search_icon\"/>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n\r\n          <div className=\"chatList\">\r\n          {ticketChatList\r\n            .filter(item =>\r\n              item.firstname.toLowerCase().includes(searchInput.toLowerCase())\r\n            )\r\n            .map((item, index) => (\r\n                   <div\r\n      className={classNames(\"chatItem\", { active: item.id === activeUser })}\r\n      key={index}\r\n      onClick={() => chatblock_process(item.id, item.firstname)}\r\n    >\r\n                <div className=\"imgbx\">\r\n                  <img src={`http://localhost:5000/images/${item.id}`} className=\"cover\" alt={`Profile of ${item.firstname}`} />\r\n                </div>\r\n                <div className=\"chatInfo\">\r\n                  <p className=\"chatName\" >{item.firstname}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n          </div>\r\n         {default_loading ?(<>\r\n\r\n          <div className=\"right-side\">\r\n          <div className=\"chatHeader\">\r\n          <div className=\"userImage\">\r\n            <img src={\"http://localhost:5000/images/\"+ ticketid}  className=\"cover\" alt=\"Chat User\" />\r\n          </div>\r\n          <div className=\"userInfo\">\r\n            <p className=\"chatName\">{chatuser_name}</p>\r\n            <p className=\"status\">Online</p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"chatMessages\">\r\n  {message.map((message, index) => {\r\n    const messageDate = message.createdAt.toDate();\r\n    const formattedDate = messageDate.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n    });\r\n    const formattedDate_demo = formatDate(messageDate);\r\n    \r\n    \r\n    \r\n    const formattedTime = messageDate.toLocaleTimeString('en-US', {\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n    });\r\n    const lowercaseTime = formattedTime.replace(/\\s/g, '').toLowerCase();\r\n    const showDate = prevDate !== formattedDate;\r\n    prevDate = formattedDate;\r\n\r\n    \r\n\r\n    const isSentByCurrentUser = message.from_uid === Profileid && message.to_uid === sendTo_userid;\r\n    const isReceivedByCurrentUser = message.from_uid === sendTo_userid && message.to_uid === Profileid;\r\n \r\n\r\n\r\n                                                 //  8===8 && 10===10\r\n    if (isSentByCurrentUser || isReceivedByCurrentUser) {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          {showDate && <p className=\"messageDate_show\">{formattedDate}</p>}\r\n          <div\r\n            key={index}\r\n            className={`message ${isSentByCurrentUser ? 'sent' : 'received'}`}\r\n          >\r\n <p className=\"chat_msgstl\">\r\n      {message.text}\r\n      <span className=\"chating_time\">{lowercaseTime}</span>\r\n    </p>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  })}\r\n</div>\r\n\r\n\r\n\r\n        \r\n<div className=\"messageInput\">\r\n          <input type=\"text\"  value={text} onKeyDown={handleKeyPress} onChange={e => setText(e.target.value)} placeholder=\"Type a message...\" />\r\n          <SendIcon className=\"sendIcon\"  onClick={sendMessage} />\r\n</div>\r\n         \r\n</div> \r\n         \r\n         </>):(<>\r\n         \r\n          <div className=\"chatRoom_loadingimg\">\r\n  <div>\r\n  <img src={defaultchatRoomimg} className=\"imgdeafult-chat\"/>\r\n </div>\r\n {/* <div>\r\n  <img src={Tigmalog} className=\"imgdeafult-logo\"/>\r\n </div> */}\r\n  <div class=\"company-info\">\r\n    <h2>Welcome to Tigma Technology Chat</h2>\r\n</div>\r\n</div>\r\n         \r\n         </>)}\r\n         \r\n\r\n</div>\r\n  )\r\n}\r\nexport default ChatingApp;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}