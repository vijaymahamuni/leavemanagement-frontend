{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback } from 'react';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types';\nimport Search from '@rsuite/icons/legacy/Search';\nimport { useClassNames } from '../utils';\nvar SearchBar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'picker-search-bar' : _props$classPrefix,\n    value = props.value,\n    children = props.children,\n    className = props.className,\n    placeholder = props.placeholder,\n    inputRef = props.inputRef,\n    onChange = props.onChange,\n    rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"value\", \"children\", \"className\", \"placeholder\", \"inputRef\", \"onChange\"]);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge,\n    prefix = _useClassNames.prefix;\n  var classes = merge(className, withClassPrefix());\n  var handleChange = useCallback(function (event) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(get(event, 'target.value'), event);\n  }, [onChange]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"searchbox\"\n  }, rest, {\n    ref: ref,\n    className: classes\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: prefix('input'),\n    value: value,\n    onChange: handleChange,\n    placeholder: placeholder,\n    ref: inputRef\n  }), /*#__PURE__*/React.createElement(Search, {\n    className: prefix('search-icon')\n  }), children);\n});\nSearchBar.displayName = 'SearchBar';\nSearchBar.propTypes = {\n  as: PropTypes.elementType,\n  classPrefix: PropTypes.string,\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  onChange: PropTypes.func\n};\nexport default SearchBar;","map":null,"metadata":{},"sourceType":"module"}