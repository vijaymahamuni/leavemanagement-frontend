{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { subDays, startOfDay, endOfDay } from '../utils/dateUtils';\nexport function getDefaultRanges(value) {\n  var today = new Date();\n  /**\n   * If it is an array type, it returns the default shortcut key suitable for DateRangePicker Toolbar,\n   * otherwise it returns the default shortcut key suitable for DatePicker Toolbar\n   */\n\n  if (value instanceof Array) {\n    return [{\n      label: 'today',\n      value: [startOfDay(today), endOfDay(today)]\n    }, {\n      label: 'yesterday',\n      value: [startOfDay(subDays(today, 1)), endOfDay(subDays(today, 1))]\n    }, {\n      label: 'last7Days',\n      value: [startOfDay(subDays(today, 6)), endOfDay(today)]\n    }];\n  }\n  return [{\n    label: 'today',\n    value: today\n  }, {\n    label: 'yesterday',\n    value: subDays(today, 1)\n  }];\n}\nvar generateRangesIterator = function generateRangesIterator(_ref) {\n  var calendarDate = _ref.calendarDate;\n  return function (_ref2) {\n    var value = _ref2.value,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"value\"]);\n    return _extends({\n      value: typeof value === 'function' ? value(calendarDate) : value\n    }, rest);\n  };\n};\n/**\n * get Toolbar ranges from Toolbar props\n * @param ranges\n * @param calendarDate\n */\n\nexport var getRanges = function getRanges(_ref3) {\n  var ranges = _ref3.ranges,\n    calendarDate = _ref3.calendarDate;\n  return typeof ranges === 'undefined' ? getDefaultRanges(calendarDate) : ranges.map(generateRangesIterator({\n    calendarDate: calendarDate\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}