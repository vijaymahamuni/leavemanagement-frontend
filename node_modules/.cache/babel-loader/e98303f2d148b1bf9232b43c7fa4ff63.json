{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _ = require(\"lodash\");\nvar xmlq = require(\"./xmlq\");\nvar Style = require(\"./Style\");\n\n/**\n * Standard number format codes\n * Taken from http://polymathprogrammer.com/2011/02/15/built-in-styles-for-excel-open-xml/\n * @private\n */\nvar STANDARD_CODES = {\n  0: 'General',\n  1: '0',\n  2: '0.00',\n  3: '#,##0',\n  4: '#,##0.00',\n  9: '0%',\n  10: '0.00%',\n  11: '0.00E+00',\n  12: '# ?/?',\n  13: '# ??/??',\n  14: 'mm-dd-yy',\n  15: 'd-mmm-yy',\n  16: 'd-mmm',\n  17: 'mmm-yy',\n  18: 'h:mm AM/PM',\n  19: 'h:mm:ss AM/PM',\n  20: 'h:mm',\n  21: 'h:mm:ss',\n  22: 'm/d/yy h:mm',\n  37: '#,##0 ;(#,##0)',\n  38: '#,##0 ;[Red](#,##0)',\n  39: '#,##0.00;(#,##0.00)',\n  40: '#,##0.00;[Red](#,##0.00)',\n  45: 'mm:ss',\n  46: '[h]:mm:ss',\n  47: 'mmss.0',\n  48: '##0.0E+0',\n  49: '@'\n};\n\n/**\n * The starting ID for custom number formats. The first 163 indexes are reserved.\n * @private\n */\nvar STARTING_CUSTOM_NUMBER_FORMAT_ID = 164;\n\n/**\n * A style sheet.\n * @ignore\n */\nvar StyleSheet = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of _StyleSheet.\n   * @param {string} node - The style sheet node\n   */\n  function StyleSheet(node) {\n    _classCallCheck(this, StyleSheet);\n    this._init(node);\n    this._cacheNumberFormats();\n  }\n\n  /**\n   * Create a style.\n   * @param {number} [sourceId] - The source style ID to copy, if provided.\n   * @returns {Style} The style.\n   */\n  _createClass(StyleSheet, [{\n    key: \"createStyle\",\n    value: function createStyle(sourceId) {\n      var fontNode, fillNode, borderNode, xfNode;\n      if (sourceId >= 0) {\n        var sourceXfNode = this._cellXfsNode.children[sourceId];\n        xfNode = _.cloneDeep(sourceXfNode);\n        if (sourceXfNode.attributes.applyFont) {\n          var fontId = sourceXfNode.attributes.fontId;\n          fontNode = _.cloneDeep(this._fontsNode.children[fontId]);\n        }\n        if (sourceXfNode.attributes.applyFill) {\n          var fillId = sourceXfNode.attributes.fillId;\n          fillNode = _.cloneDeep(this._fillsNode.children[fillId]);\n        }\n        if (sourceXfNode.attributes.applyBorder) {\n          var borderId = sourceXfNode.attributes.borderId;\n          borderNode = _.cloneDeep(this._bordersNode.children[borderId]);\n        }\n      }\n      if (!fontNode) fontNode = {\n        name: \"font\",\n        attributes: {},\n        children: []\n      };\n      this._fontsNode.children.push(fontNode);\n      if (!fillNode) fillNode = {\n        name: \"fill\",\n        attributes: {},\n        children: []\n      };\n      this._fillsNode.children.push(fillNode);\n\n      // The border sides must be in order\n      if (!borderNode) borderNode = {\n        name: \"border\",\n        attributes: {},\n        children: []\n      };\n      borderNode.children = [xmlq.findChild(borderNode, \"left\") || {\n        name: \"left\",\n        attributes: {},\n        children: []\n      }, xmlq.findChild(borderNode, \"right\") || {\n        name: \"right\",\n        attributes: {},\n        children: []\n      }, xmlq.findChild(borderNode, \"top\") || {\n        name: \"top\",\n        attributes: {},\n        children: []\n      }, xmlq.findChild(borderNode, \"bottom\") || {\n        name: \"bottom\",\n        attributes: {},\n        children: []\n      }, xmlq.findChild(borderNode, \"diagonal\") || {\n        name: \"diagonal\",\n        attributes: {},\n        children: []\n      }];\n      this._bordersNode.children.push(borderNode);\n      if (!xfNode) xfNode = {\n        name: \"xf\",\n        attributes: {},\n        children: []\n      };\n      _.assign(xfNode.attributes, {\n        fontId: this._fontsNode.children.length - 1,\n        fillId: this._fillsNode.children.length - 1,\n        borderId: this._bordersNode.children.length - 1,\n        applyFont: 1,\n        applyFill: 1,\n        applyBorder: 1\n      });\n      this._cellXfsNode.children.push(xfNode);\n      return new Style(this, this._cellXfsNode.children.length - 1, xfNode, fontNode, fillNode, borderNode);\n    }\n    /**\n     * Get the number format code for a given ID.\n     * @param {number} id - The number format ID.\n     * @returns {string} The format code.\n     */\n  }, {\n    key: \"getNumberFormatCode\",\n    value: function getNumberFormatCode(id) {\n      return this._numberFormatCodesById[id];\n    }\n    /**\n     * Get the nuumber format ID for a given code.\n     * @param {string} code - The format code.\n     * @returns {number} The number format ID.\n     */\n  }, {\n    key: \"getNumberFormatId\",\n    value: function getNumberFormatId(code) {\n      var id = this._numberFormatIdsByCode[code];\n      if (id === undefined) {\n        id = this._nextNumFormatId++;\n        this._numberFormatCodesById[id] = code;\n        this._numberFormatIdsByCode[code] = id;\n        this._numFmtsNode.children.push({\n          name: 'numFmt',\n          attributes: {\n            numFmtId: id,\n            formatCode: code\n          }\n        });\n      }\n      return id;\n    }\n    /**\n     * Convert the style sheet to an XML object.\n     * @returns {{}} The XML form.\n     * @ignore\n     */\n  }, {\n    key: \"toXml\",\n    value: function toXml() {\n      return this._node;\n    }\n    /**\n     * Cache the number format codes\n     * @returns {undefined}\n     * @private\n     */\n  }, {\n    key: \"_cacheNumberFormats\",\n    value: function _cacheNumberFormats() {\n      var _this = this;\n      // Load the standard number format codes into the caches.\n      this._numberFormatCodesById = {};\n      this._numberFormatIdsByCode = {};\n      for (var id in STANDARD_CODES) {\n        if (!STANDARD_CODES.hasOwnProperty(id)) continue;\n        var code = STANDARD_CODES[id];\n        this._numberFormatCodesById[id] = code;\n        this._numberFormatIdsByCode[code] = parseInt(id);\n      }\n\n      // Set the next number format code.\n      this._nextNumFormatId = STARTING_CUSTOM_NUMBER_FORMAT_ID;\n\n      // If there are custom number formats, cache them all and update the next num as needed.\n      this._numFmtsNode.children.forEach(function (node) {\n        var id = node.attributes.numFmtId;\n        var code = node.attributes.formatCode;\n        _this._numberFormatCodesById[id] = code;\n        _this._numberFormatIdsByCode[code] = id;\n        if (id >= _this._nextNumFormatId) _this._nextNumFormatId = id + 1;\n      });\n    }\n    /**\n     * Initialize the style sheet node.\n     * @param {{}} [node] - The node\n     * @returns {undefined}\n     * @private\n     */\n  }, {\n    key: \"_init\",\n    value: function _init(node) {\n      this._node = node;\n\n      // Cache the refs to the collections.\n      this._numFmtsNode = xmlq.findChild(this._node, \"numFmts\");\n      this._fontsNode = xmlq.findChild(this._node, \"fonts\");\n      this._fillsNode = xmlq.findChild(this._node, \"fills\");\n      this._bordersNode = xmlq.findChild(this._node, \"borders\");\n      this._cellXfsNode = xmlq.findChild(this._node, \"cellXfs\");\n      if (!this._numFmtsNode) {\n        this._numFmtsNode = {\n          name: \"numFmts\",\n          attributes: {},\n          children: []\n        };\n\n        // Number formats need to be before the others.\n        xmlq.insertBefore(this._node, this._numFmtsNode, this._fontsNode);\n      }\n\n      // Remove the optional counts so we don't have to keep them up to date.\n      delete this._numFmtsNode.attributes.count;\n      delete this._fontsNode.attributes.count;\n      delete this._fillsNode.attributes.count;\n      delete this._bordersNode.attributes.count;\n      delete this._cellXfsNode.attributes.count;\n    }\n  }]);\n  return StyleSheet;\n}();\nmodule.exports = StyleSheet;\n\n/*\nxl/styles.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<styleSheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac x16r2\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\" xmlns:x16r2=\"http://schemas.microsoft.com/office/spreadsheetml/2015/02/main\">\n    <numFmts count=\"1\">\n        <numFmt numFmtId=\"164\" formatCode=\"#,##0_);[Red]\\(#,##0\\)\\)\"/>\n    </numFmts>\n    <fonts count=\"1\" x14ac:knownFonts=\"1\">\n        <font>\n            <sz val=\"11\"/>\n            <color theme=\"1\"/>\n            <name val=\"Calibri\"/>\n            <family val=\"2\"/>\n            <scheme val=\"minor\"/>\n        </font>\n    </fonts>\n    <fills count=\"11\">\n        <fill>\n            <patternFill patternType=\"none\"/>\n        </fill>\n        <fill>\n            <patternFill patternType=\"gray125\"/>\n        </fill>\n        <fill>\n            <patternFill patternType=\"solid\">\n                <fgColor rgb=\"FFC00000\"/>\n                <bgColor indexed=\"64\"/>\n            </patternFill>\n        </fill>\n        <fill>\n            <patternFill patternType=\"lightDown\">\n                <fgColor theme=\"4\"/>\n                <bgColor rgb=\"FFC00000\"/>\n            </patternFill>\n        </fill>\n        <fill>\n            <gradientFill degree=\"90\">\n                <stop position=\"0\">\n                    <color theme=\"0\"/>\n                </stop>\n                <stop position=\"1\">\n                    <color theme=\"4\"/>\n                </stop>\n            </gradientFill>\n        </fill>\n        <fill>\n            <gradientFill>\n                <stop position=\"0\">\n                    <color theme=\"0\"/>\n                </stop>\n                <stop position=\"1\">\n                    <color theme=\"4\"/>\n                </stop>\n            </gradientFill>\n        </fill>\n        <fill>\n            <gradientFill degree=\"45\">\n                <stop position=\"0\">\n                    <color theme=\"0\"/>\n                </stop>\n                <stop position=\"1\">\n                    <color theme=\"4\"/>\n                </stop>\n            </gradientFill>\n        </fill>\n        <fill>\n            <gradientFill degree=\"135\">\n                <stop position=\"0\">\n                    <color theme=\"0\"/>\n                </stop>\n                <stop position=\"1\">\n                    <color theme=\"4\"/>\n                </stop>\n            </gradientFill>\n        </fill>\n        <fill>\n            <gradientFill type=\"path\">\n                <stop position=\"0\">\n                    <color theme=\"0\"/>\n                </stop>\n                <stop position=\"1\">\n                    <color theme=\"4\"/>\n                </stop>\n            </gradientFill>\n        </fill>\n        <fill>\n            <gradientFill type=\"path\" left=\"0.5\" right=\"0.5\" top=\"0.5\" bottom=\"0.5\">\n                <stop position=\"0\">\n                    <color theme=\"0\"/>\n                </stop>\n                <stop position=\"1\">\n                    <color theme=\"4\"/>\n                </stop>\n            </gradientFill>\n        </fill>\n        <fill>\n            <gradientFill degree=\"270\">\n                <stop position=\"0\">\n                    <color theme=\"0\"/>\n                </stop>\n                <stop position=\"1\">\n                    <color theme=\"4\"/>\n                </stop>\n            </gradientFill>\n        </fill>\n    </fills>\n    <borders count=\"10\">\n        <border>\n            <left/>\n            <right/>\n            <top/>\n            <bottom/>\n            <diagonal/>\n        </border>\n        <border diagonalDown=\"1\">\n            <left/>\n            <right/>\n            <top/>\n            <bottom/>\n            <diagonal style=\"hair\">\n                <color auto=\"1\"/>\n            </diagonal>\n        </border>\n        <border diagonalDown=\"1\">\n            <left/>\n            <right/>\n            <top/>\n            <bottom/>\n            <diagonal style=\"dotted\">\n                <color auto=\"1\"/>\n            </diagonal>\n        </border>\n        <border diagonalDown=\"1\">\n            <left/>\n            <right/>\n            <top/>\n            <bottom/>\n            <diagonal style=\"dashDotDot\">\n                <color auto=\"1\"/>\n            </diagonal>\n        </border>\n        <border diagonalDown=\"1\">\n            <left/>\n            <right/>\n            <top/>\n            <bottom/>\n            <diagonal style=\"dashDot\">\n                <color auto=\"1\"/>\n            </diagonal>\n        </border>\n        <border diagonalDown=\"1\">\n            <left/>\n            <right/>\n            <top/>\n            <bottom/>\n            <diagonal style=\"dashed\">\n                <color auto=\"1\"/>\n            </diagonal>\n        </border>\n        <border diagonalUp=\"1\">\n            <left/>\n            <right/>\n            <top/>\n            <bottom/>\n            <diagonal style=\"mediumDashDotDot\">\n                <color auto=\"1\"/>\n            </diagonal>\n        </border>\n        <border diagonalUp=\"1\">\n            <left/>\n            <right/>\n            <top/>\n            <bottom/>\n            <diagonal style=\"slantDashDot\">\n                <color auto=\"1\"/>\n            </diagonal>\n        </border>\n        <border diagonalUp=\"1\">\n            <left/>\n            <right/>\n            <top/>\n            <bottom/>\n            <diagonal style=\"mediumDashDot\">\n                <color auto=\"1\"/>\n            </diagonal>\n        </border>\n        <border diagonalUp=\"1\">\n            <left/>\n            <right/>\n            <top/>\n            <bottom/>\n            <diagonal style=\"mediumDashed\">\n                <color auto=\"1\"/>\n            </diagonal>\n        </border>\n    </borders>\n    <cellStyleXfs count=\"1\">\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\"/>\n    </cellStyleXfs>\n    <cellXfs count=\"19\">\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"1\" xfId=\"0\" applyBorder=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"2\" xfId=\"0\" applyBorder=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"3\" xfId=\"0\" applyBorder=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"4\" xfId=\"0\" applyBorder=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"5\" xfId=\"0\" applyBorder=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"6\" xfId=\"0\" applyBorder=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"7\" xfId=\"0\" applyBorder=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"8\" xfId=\"0\" applyBorder=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"9\" xfId=\"0\" applyBorder=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"2\" borderId=\"0\" xfId=\"0\" applyFill=\"1\" applyBorder=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"3\" borderId=\"0\" xfId=\"0\" applyFill=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"4\" borderId=\"0\" xfId=\"0\" applyFill=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"5\" borderId=\"0\" xfId=\"0\" applyFill=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"6\" borderId=\"0\" xfId=\"0\" applyFill=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"7\" borderId=\"0\" xfId=\"0\" applyFill=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"8\" borderId=\"0\" xfId=\"0\" applyFill=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"9\" borderId=\"0\" xfId=\"0\" applyFill=\"1\"/>\n        <xf numFmtId=\"0\" fontId=\"0\" fillId=\"10\" borderId=\"0\" xfId=\"0\" applyFill=\"1\"/>\n    </cellXfs>\n    <cellStyles count=\"1\">\n        <cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/>\n    </cellStyles>\n    <dxfs count=\"0\"/>\n    <tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium2\" defaultPivotStyle=\"PivotStyleLight16\"/>\n    <extLst>\n        <ext uri=\"{EB79DEF2-80B8-43e5-95BD-54CBDDF9020C}\" xmlns:x14=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/main\">\n            <x14:slicerStyles defaultSlicerStyle=\"SlicerStyleLight1\"/>\n        </ext>\n        <ext uri=\"{9260A510-F301-46a8-8635-F512D64BE5F5}\" xmlns:x15=\"http://schemas.microsoft.com/office/spreadsheetml/2010/11/main\">\n            <x15:timelineStyles defaultTimelineStyle=\"TimeSlicerStyleLight1\"/>\n        </ext>\n    </extLst>\n</styleSheet>\n*/","map":null,"metadata":{},"sourceType":"script"}