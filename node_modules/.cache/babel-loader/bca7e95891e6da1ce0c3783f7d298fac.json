{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _ = require(\"lodash\");\n\n/**\n * The shared strings table.\n * @ignore\n */\nvar SharedStrings = /*#__PURE__*/function () {\n  /**\n   * Constructs a new instance of _SharedStrings.\n   * @param {{}} node - The node.\n   */\n  function SharedStrings(node) {\n    _classCallCheck(this, SharedStrings);\n    this._stringArray = [];\n    this._indexMap = {};\n    this._init(node);\n    this._cacheExistingSharedStrings();\n  }\n\n  /**\n   * Gets the index for a string\n   * @param {string|Array.<{}>} string - The string or rich text array.\n   * @returns {number} The index\n   */\n  _createClass(SharedStrings, [{\n    key: \"getIndexForString\",\n    value: function getIndexForString(string) {\n      // If the string is found in the cache, return the index.\n      var key = _.isArray(string) ? JSON.stringify(string) : string;\n      var index = this._indexMap[key];\n      if (index >= 0) return index;\n\n      // Otherwise, add it to the caches.\n      index = this._stringArray.length;\n      this._stringArray.push(string);\n      this._indexMap[key] = index;\n\n      // Append a new si node.\n      this._node.children.push({\n        name: \"si\",\n        children: _.isArray(string) ? string : [{\n          name: \"t\",\n          attributes: {\n            'xml:space': \"preserve\"\n          },\n          children: [string]\n        }]\n      });\n      return index;\n    }\n    /**\n     * Get the string for a given index\n     * @param {number} index - The index\n     * @returns {string} The string\n     */\n  }, {\n    key: \"getStringByIndex\",\n    value: function getStringByIndex(index) {\n      return this._stringArray[index];\n    }\n    /**\n     * Convert the collection to an XML object.\n     * @returns {{}} The XML object.\n     */\n  }, {\n    key: \"toXml\",\n    value: function toXml() {\n      return this._node;\n    }\n    /**\n     * Store any existing values in the caches.\n     * @private\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_cacheExistingSharedStrings\",\n    value: function _cacheExistingSharedStrings() {\n      var _this = this;\n      this._node.children.forEach(function (node, i) {\n        var content = node.children[0];\n        if (content.name === \"t\") {\n          var string = content.children[0];\n          _this._stringArray.push(string);\n          _this._indexMap[string] = i;\n        } else {\n          // TODO: Properly support rich text nodes in the future. For now just store the object as a placeholder.\n          _this._stringArray.push(node.children);\n          _this._indexMap[JSON.stringify(node.children)] = i;\n        }\n      });\n    }\n    /**\n     * Initialize the node.\n     * @param {{}} [node] - The shared strings node.\n     * @private\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_init\",\n    value: function _init(node) {\n      if (!node) node = {\n        name: \"sst\",\n        attributes: {\n          xmlns: \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"\n        },\n        children: []\n      };\n      this._node = node;\n      delete this._node.attributes.count;\n      delete this._node.attributes.uniqueCount;\n    }\n  }]);\n  return SharedStrings;\n}();\nmodule.exports = SharedStrings;\n\n/*\nxl/sharedStrings.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<sst xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" count=\"13\" uniqueCount=\"4\">\n\t<si>\n\t\t<t>Foo</t>\n\t</si>\n\t<si>\n\t\t<t>Bar</t>\n\t</si>\n\t<si>\n\t\t<t>Goo</t>\n\t</si>\n\t<si>\n\t\t<r>\n\t\t\t<t>s</t>\n\t\t</r><r>\n\t\t\t<rPr>\n\t\t\t\t<b/>\n\t\t\t\t<sz val=\"11\"/>\n\t\t\t\t<color theme=\"1\"/>\n\t\t\t\t<rFont val=\"Calibri\"/>\n\t\t\t\t<family val=\"2\"/>\n\t\t\t\t<scheme val=\"minor\"/>\n\t\t\t</rPr><t>d;</t>\n\t\t</r><r>\n\t\t\t<rPr>\n\t\t\t\t<sz val=\"11\"/>\n\t\t\t\t<color theme=\"1\"/>\n\t\t\t\t<rFont val=\"Calibri\"/>\n\t\t\t\t<family val=\"2\"/>\n\t\t\t\t<scheme val=\"minor\"/>\n\t\t\t</rPr><t>lfk;l</t>\n\t\t</r>\n\t</si>\n</sst>\n*/","map":null,"metadata":{},"sourceType":"script"}