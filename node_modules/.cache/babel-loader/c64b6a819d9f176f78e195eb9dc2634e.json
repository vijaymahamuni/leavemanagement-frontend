{"ast":null,"code":"import _objectSpread from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Project\\\\Front_end\\\\src\\\\new_chat\\\\new_chatingroom.js\";\nimport React from \"react\";\nimport \"./newChat.css\";\nimport userImg from \"./Vijay_YNM.jpg\";\nimport VinuImg from \"./Vinu.jpg\";\nimport Tlogo from \"./Vijay_logo.jpg\";\nimport Jaya from \"./jayaprakash.jpeg\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport SendIcon from '@mui/icons-material/Send';\nimport classNames from \"classnames\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useEffect, useState } from 'react';\nimport firebase from 'firebase/compat/app';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport AddIcon from '@mui/icons-material/Add';\nimport 'firebase/compat/firestore';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { Link, Outlet, useNavigate, useParams, useLocation } from \"react-router-dom\";\nfunction ChatingApp() {\n  var _this = this;\n  var Profileid = localStorage.getItem(\"proid\", Profileid);\n  var ChatViewid = Profileid;\n  var tosend_userid = '10';\n  var Docu_ChatViewid;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setmessage = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    text = _useState4[0],\n    setText = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chatBlocklist = _useState6[0],\n    setChatblocklist = _useState6[1];\n  var timestamp = firebase.firestore.Timestamp.now();\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    chatblock = _useState8[0],\n    setChatblock = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    ticketChatList = _useState10[0],\n    setTicketChatList = _useState10[1];\n  var _useState11 = useState(tosend_userid),\n    _useState12 = _slicedToArray(_useState11, 2),\n    sendTo_userid = _useState12[0],\n    setsendTo_userid = _useState12[1];\n  useEffect(function () {\n    setsendTo_userid(tosend_userid);\n    axios.get(\"http://localhost:5000/Chating_employeelist\").then(function (res) {\n      var ticketChatList = res.data.data;\n      setTicketChatList(ticketChatList);\n    }).catch(function (error) {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  useEffect(function () {\n    if (ticketChatList.length > 0) {\n      setChatblock(ticketChatList);\n    }\n  }, [ticketChatList]);\n  var sendMessage = function sendMessage() {\n    var db = firebase.firestore();\n    var collectionName = 'ChatApp';\n    var data = {\n      text: text,\n      createdAt: timestamp,\n      userid: sendTo_userid,\n      profileid: Profileid,\n      sendermsg_id: sendmsgId\n    };\n    var subcollectionName = 'SubChat';\n    if (text.trim() !== '') {\n      db.collection(collectionName).doc(ticketid).set(data).then(function () {\n        db.collection(collectionName).doc(ticketid).collection(subcollectionName).add(data).then(function () {}).catch(function (error) {});\n      }).catch(function (error) {\n        console.error(\"Error writing main document: \", error);\n      });\n      setText('');\n    }\n    ;\n  };\n  var chatListItems = searchInput ? searchResults.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatItem\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\" + item.id,\n      className: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      onClick: function onClick() {\n        return chatblock_process(item.id, item.firstname);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, item.firstname)));\n  }) : chatblock.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatItem\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\" + item.id,\n      className: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      onClick: function onClick() {\n        return chatblock_process(item.id, item.firstname);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, item.firstname)));\n  });\n  var handleKeyPress = function handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  useEffect(function () {\n    var unsubscribe = firebase.firestore().collection('ChatApp').doc(Profileid).collection('SubChat').orderBy('createdAt').onSnapshot(function (snapshot) {\n      var messages = snapshot.docs.map(function (doc) {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n      setmessage(messages);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  var Profilename = localStorage.getItem(\"profileName\", Profilename);\n  console.log(\"Current UserName\", Profilename);\n  var _useState13 = useState(ChatViewid),\n    _useState14 = _slicedToArray(_useState13, 2),\n    ticketid = _useState14[0],\n    setTicketid = _useState14[1];\n  var _useState15 = useState(Profilename),\n    _useState16 = _slicedToArray(_useState15, 2),\n    chatuser_name = _useState16[0],\n    setChatuser_name = _useState16[1];\n  var _useState17 = useState(Profileid),\n    _useState18 = _slicedToArray(_useState17, 2),\n    sendmsgId = _useState18[0],\n    setSendmsgId = _useState18[1];\n  var chatblock_process = function chatblock_process(id, firstname) {\n    Docu_ChatViewid = id;\n    ChatViewid = id;\n    setSendmsgId(id);\n    console.log(\"ChatViewId\", firstname);\n    setChatuser_name(firstname);\n    setActiveUser(id);\n    var duplicate_docid = ChatViewid.toString();\n    console.log(\"Duplicate Static docId\", typeof duplicate_docid);\n    setTicketid(duplicate_docid);\n    var unsubscribe = firebase.firestore().collection('ChatApp').doc(duplicate_docid).collection('SubChat').orderBy('createdAt').onSnapshot(function (snapshot) {\n      var messages = snapshot.docs.map(function (doc) {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n      setmessage(messages);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  };\n  var prevDate = null;\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    searchInput = _useState20[0],\n    setSearchInput = _useState20[1];\n  var _useState21 = useState([]),\n    _useState22 = _slicedToArray(_useState21, 2),\n    searchResults = _useState22[0],\n    setSearchResults = _useState22[1];\n  var handleSearch = function handleSearch(query) {\n    setSearchInput(query);\n\n    // Perform search logic (e.g., filter chatblock based on the query)\n    var results = chatblock.filter(function (item) {\n      return item.firstname.toLowerCase().includes(query.toLowerCase());\n    });\n    setSearchResults(results);\n    console.log(\"Search input query is \", results);\n  };\n  var _useState23 = useState(null),\n    _useState24 = _slicedToArray(_useState23, 2),\n    activeUser = _useState24[0],\n    setActiveUser = _useState24[1];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatroom-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"backButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    className: \"backicon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"Chat\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search or start new chat\",\n    value: searchInput,\n    onChange: function onChange(e) {\n      return handleSearch(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SearchIcon, {\n    className: \"Search_icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, ticketChatList.filter(function (item) {\n    return item.firstname.toLowerCase().includes(searchInput.toLowerCase());\n  }).map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"chatItem\", {\n        active: item.id === activeUser\n      }),\n      key: index,\n      onClick: function onClick() {\n        return chatblock_process(item.id, item.firstname);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\".concat(item.id),\n      className: \"cover\",\n      alt: \"Profile of \".concat(item.firstname),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, item.firstname)));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://localhost:5000/images/\" + ticketid,\n    className: \"cover\",\n    alt: \"Chat User\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chatName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, chatuser_name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, \"Online\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMessages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMessages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, message.map(function (message, index) {\n    var messageDate = message.createdAt.toDate();\n    var formattedDate = messageDate.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n    var formattedTime = messageDate.toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n    var showDate = prevDate !== formattedDate;\n    prevDate = formattedDate;\n    var isSameUser = message.profileid == Profileid || message.sendermsg_id == Profileid;\n    if (!isSameUser) {\n      return null; // Skip rendering if not the same user\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 5\n      }\n    }, showDate && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messageDate\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 18\n      }\n    }, formattedDate), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message \".concat(isSameUser ? 'sent' : 'received'),\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chat_msgstl\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 7\n      }\n    }, message.text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timeContainer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"time\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }\n    }, formattedTime))));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onKeyDown: handleKeyPress,\n    onChange: function onChange(e) {\n      return setText(e.target.value);\n    },\n    placeholder: \"Type a message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SendIcon, {\n    className: \"sendIcon\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }))));\n}\nexport default ChatingApp;","map":{"version":3,"names":["React","userImg","VinuImg","Tlogo","Jaya","SearchIcon","SendIcon","classNames","ArrowBackIcon","useEffect","useState","firebase","Button","axios","AddIcon","Scrollbars","Link","Outlet","useNavigate","useParams","useLocation","ChatingApp","_this","Profileid","localStorage","getItem","ChatViewid","tosend_userid","Docu_ChatViewid","_useState","_useState2","_slicedToArray","message","setmessage","_useState3","_useState4","text","setText","_useState5","_useState6","chatBlocklist","setChatblocklist","timestamp","firestore","Timestamp","now","_useState7","_useState8","chatblock","setChatblock","_useState9","_useState10","ticketChatList","setTicketChatList","_useState11","_useState12","sendTo_userid","setsendTo_userid","get","then","res","data","catch","error","console","length","sendMessage","db","collectionName","createdAt","userid","profileid","sendermsg_id","sendmsgId","subcollectionName","trim","collection","doc","ticketid","set","add","chatListItems","searchInput","searchResults","map","item","index","createElement","className","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","id","onClick","chatblock_process","firstname","handleKeyPress","event","unsubscribe","orderBy","onSnapshot","snapshot","messages","docs","_objectSpread","Profilename","log","_useState13","_useState14","setTicketid","_useState15","_useState16","chatuser_name","setChatuser_name","_useState17","_useState18","setSendmsgId","setActiveUser","duplicate_docid","toString","prevDate","_useState19","_useState20","setSearchInput","_useState21","_useState22","setSearchResults","handleSearch","query","results","filter","toLowerCase","includes","_useState23","_useState24","activeUser","type","placeholder","value","onChange","e","target","active","concat","alt","messageDate","toDate","formattedDate","toLocaleDateString","year","month","day","formattedTime","toLocaleTimeString","hour","minute","showDate","isSameUser","Fragment","onKeyDown"],"sources":["C:/Project/Front_end/src/new_chat/new_chatingroom.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./newChat.css\";\r\nimport userImg from \"./Vijay_YNM.jpg\";\r\nimport VinuImg from \"./Vinu.jpg\";\r\nimport Tlogo from \"./Vijay_logo.jpg\";\r\nimport Jaya from \"./jayaprakash.jpeg\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport classNames from \"classnames\"; \r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { useEffect, useState } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from \"axios\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport 'firebase/compat/firestore';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { Link, Outlet, useNavigate, useParams,useLocation } from \"react-router-dom\";\r\nfunction ChatingApp(){\r\n  let Profileid=localStorage.getItem(\"proid\",Profileid)\r\n\r\n  var ChatViewid=Profileid;\r\n  let tosend_userid='10';\r\n  \r\n  var Docu_ChatViewid;\r\n\r\n  const[message,setmessage]=useState([])\r\n  const [text, setText] = useState('');\r\n  const [chatBlocklist,setChatblocklist]=useState([])\r\n  const timestamp = firebase.firestore.Timestamp.now();\r\n  const [chatblock, setChatblock] = useState([]);\r\n  const [ticketChatList, setTicketChatList] = useState([]);\r\n  const [sendTo_userid, setsendTo_userid] = useState(tosend_userid);\r\n  useEffect(() => {\r\n    setsendTo_userid(tosend_userid)\r\n    axios.get(`http://localhost:5000/Chating_employeelist`)\r\n      .then((res) => {\r\n        const ticketChatList = res.data.data;\r\n        setTicketChatList(ticketChatList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, []); \r\n  \r\n  useEffect(() => {\r\n  if (ticketChatList.length > 0) {\r\n      setChatblock(ticketChatList);\r\n    }\r\n  }, [ticketChatList]);\r\n  const sendMessage = () => {\r\n  const db = firebase.firestore();\r\n  const collectionName = 'ChatApp';\r\n  const data = {\r\n    text,\r\n    createdAt: timestamp,\r\n    userid:sendTo_userid,\r\n    profileid:Profileid,\r\n    sendermsg_id:sendmsgId\r\n};\r\n  \r\n  const subcollectionName = 'SubChat'; \r\n    if (text.trim() !== '') {\r\n      db.collection(collectionName).doc(ticketid).set(data)\r\n      .then(() => {\r\n       db.collection(collectionName).doc(ticketid).collection(subcollectionName).add(data)\r\n          .then(() => {\r\n          \r\n          })\r\n          .catch(error => {\r\n          \r\n          });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error writing main document: \", error);\r\n      });\r\n      setText(''); \r\n  };\r\n  }\r\n\r\n\r\nconst chatListItems = searchInput\r\n  ? searchResults.map((item, index) => (\r\n    <div className=\"chatItem\" key={index}>\r\n    <div className=\"imgbx\">\r\n      <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\r\n    </div>\r\n    <div className=\"chatInfo\">\r\n      <p className=\"chatName\" onClick={()=>chatblock_process(item.id,item.firstname)}>{item.firstname}</p>\r\n    </div>\r\n  </div>\r\n  \r\n    )): chatblock.map((item, index) => (\r\n    <div className=\"chatItem\" key={index}>\r\n    <div className=\"imgbx\">\r\n      <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\r\n    </div>\r\n    <div className=\"chatInfo\">\r\n      <p className=\"chatName\" onClick={()=>chatblock_process(item.id,item.firstname)}>{item.firstname}</p>\r\n      </div>\r\n  </div>\r\n    ));\r\nconst handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\nuseEffect(() => {\r\n  const unsubscribe = firebase.firestore().collection('ChatApp').doc(Profileid).collection('SubChat')\r\n      .orderBy('createdAt')\r\n      .onSnapshot(snapshot => {\r\n        const messages = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setmessage(messages);\r\n      });\r\n  \r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n\r\nlet Profilename=localStorage.getItem(\"profileName\",Profilename);\r\nconsole.log(\"Current UserName\",Profilename)\r\nconst [ticketid, setTicketid] = useState(ChatViewid);\r\nconst [chatuser_name,setChatuser_name] = useState(Profilename);\r\nconst [sendmsgId,setSendmsgId ] = useState(Profileid);\r\n\r\nconst chatblock_process=(id,firstname)=>{\r\n  Docu_ChatViewid=id\r\n  ChatViewid=id;\r\n  setSendmsgId(id)\r\n  console.log(\"ChatViewId\",firstname)\r\n  setChatuser_name(firstname)\r\n  setActiveUser(id);\r\n  const duplicate_docid = ChatViewid.toString();\r\n  console.log(\"Duplicate Static docId\",typeof(duplicate_docid))\r\n  setTicketid(duplicate_docid)\r\n  const unsubscribe = firebase.firestore().collection('ChatApp').doc(duplicate_docid).collection('SubChat')\r\n        .orderBy('createdAt')\r\n        .onSnapshot(snapshot => {\r\n        const messages = snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));  \r\n        setmessage(messages);\r\n        });\r\n    \r\n      return () => unsubscribe();\r\n    \r\n    }\r\nlet prevDate = null;  \r\nconst [searchInput, setSearchInput] = useState('');\r\nconst [searchResults, setSearchResults] = useState([]);\r\nconst handleSearch = (query) => {\r\n\r\n  setSearchInput(query);\r\n\r\n  // Perform search logic (e.g., filter chatblock based on the query)\r\n  const results = chatblock.filter((item) =>\r\n    item.firstname.toLowerCase().includes(query.toLowerCase())\r\n  );\r\n  setSearchResults(results);\r\n  console.log(\"Search input query is \",results)\r\n};\r\n\r\nconst [activeUser, setActiveUser] = useState(null);\r\n\r\n  return(\r\n    <div className=\"chatroom-container\">\r\n          <div className=\"left-side\">\r\n          <div className=\"header\">\r\n         \r\n          <div className=\"backButton\">\r\n          <ArrowBackIcon className=\"backicon\" />\r\n          <div className=\"chat_heading\">\r\n            <p>Chat</p>\r\n            </div>\r\n        </div>\r\n            <div className=\"userImage\">\r\n              {/* <img src={userImg} className='profile_chatheader'/> */}\r\n            </div>\r\n\r\n          </div>\r\n\r\n      \r\n          <div className=\"search-chat\">\r\n            <div>\r\n              <input\r\n      type=\"text\"\r\n      placeholder=\"Search or start new chat\"\r\n      value={searchInput}\r\n      onChange={(e) => handleSearch(e.target.value)}\r\n    />\r\n              <SearchIcon className=\"Search_icon\"/>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n\r\n          <div className=\"chatList\">\r\n          {ticketChatList\r\n            .filter(item =>\r\n              item.firstname.toLowerCase().includes(searchInput.toLowerCase())\r\n            )\r\n            .map((item, index) => (\r\n                   <div\r\n      className={classNames(\"chatItem\", { active: item.id === activeUser })}\r\n      key={index}\r\n      onClick={() => chatblock_process(item.id, item.firstname)}\r\n    >\r\n                <div className=\"imgbx\">\r\n                  <img src={`http://localhost:5000/images/${item.id}`} className=\"cover\" alt={`Profile of ${item.firstname}`} />\r\n                </div>\r\n                <div className=\"chatInfo\">\r\n                  <p className=\"chatName\" >{item.firstname}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"right-side\">\r\n          <div className=\"chatHeader\">\r\n          <div className=\"userImage\">\r\n            <img src={\"http://localhost:5000/images/\"+ ticketid}  className=\"cover\" alt=\"Chat User\" />\r\n          </div>\r\n          <div className=\"userInfo\">\r\n            <p className=\"chatName\">{chatuser_name}</p>\r\n            <p className=\"status\">Online</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"chatMessages\">\r\n\r\n\r\n        <div className=\"chatMessages\">\r\n        {message.map((message, index) => {\r\n  const messageDate = message.createdAt.toDate();\r\n  const formattedDate = messageDate.toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  });\r\n  const formattedTime = messageDate.toLocaleTimeString('en-US', {\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n  });\r\n\r\n\r\n  const showDate = prevDate !== formattedDate;\r\n  prevDate = formattedDate;\r\n  \r\n  const isSameUser = message.profileid == Profileid || message.sendermsg_id == Profileid;\r\n\r\n  if (!isSameUser) {\r\n    return null; // Skip rendering if not the same user\r\n  }\r\n\r\n  return (\r\n    <React.Fragment key={index}>\r\n    {showDate && <div className=\"messageDate\">{formattedDate}</div>}\r\n    <div className={`message ${isSameUser ? 'sent' : 'received'}`} key={index}>\r\n      <p className=\"chat_msgstl\">{message.text}</p>\r\n      <div className=\"timeContainer\">\r\n        <span className=\"time\">{formattedTime}</span>\r\n      </div>\r\n    </div>\r\n  </React.Fragment>\r\n  );\r\n})}\r\n\r\n</div>\r\n  \r\n\r\n</div>\r\n\r\n        \r\n<div className=\"messageInput\">\r\n          <input type=\"text\"  value={text} onKeyDown={handleKeyPress} onChange={e => setText(e.target.value)} placeholder=\"Type a message...\" />\r\n          <SendIcon className=\"sendIcon\"  onClick={sendMessage} />\r\n        </div>\r\n\r\n \r\n \r\n          \r\n\r\n        \r\n  \r\n          </div>\r\n          \r\n      </div>\r\n  )\r\n}\r\nexport default ChatingApp;"],"mappings":"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"},"metadata":{},"sourceType":"module"}