{"ast":null,"code":"import _objectSpread from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Project\\\\Front_end\\\\src\\\\new_chat\\\\new_chatingroom.js\";\nimport React from \"react\";\nimport \"./newChat.css\";\nimport userImg from \"./Vijay_YNM.jpg\";\nimport VinuImg from \"./Vinu.jpg\";\nimport Tlogo from \"./Vijay_logo.jpg\";\nimport Jaya from \"./jayaprakash.jpeg\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport SendIcon from '@mui/icons-material/Send';\nimport classNames from \"classnames\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useEffect, useState } from 'react';\nimport firebase from 'firebase/compat/app';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport AddIcon from '@mui/icons-material/Add';\nimport 'firebase/compat/firestore';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { Link, Outlet, useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { v4 as uuidv4 } from 'uuid';\nimport defaultchatRoomimg from \"./default_chtappimg2.png\";\nimport Tigmalog from \"./TigmaVj.jpg\";\nimport DotButton from \"./DotButton \";\nimport { db, auth, storage } from \"../firebase\";\nimport { collection, query, where, onSnapshot, addDoc, Timestamp, orderBy, setDoc, doc, getDoc, updateDoc } from \"firebase/firestore\";\nfunction ChatingApp() {\n  var _this = this;\n  var Profileid = sessionStorage.getItem(\"proid\", Profileid);\n  var generatedID = uuidv4();\n  var ChatViewid = Profileid;\n  // let tosend_userid='10';\n\n  var Docu_ChatViewid;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setmessage = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    text = _useState4[0],\n    setText = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chatBlocklist = _useState6[0],\n    setChatblocklist = _useState6[1];\n  var timestamp = firebase.firestore.Timestamp.now();\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    chatblock = _useState8[0],\n    setChatblock = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    ticketChatList = _useState10[0],\n    setTicketChatList = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    sendTo_userid = _useState12[0],\n    setsendTo_userid = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    default_loading = _useState14[0],\n    setdefault_loading = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    now_activeuser = _useState16[0],\n    setNow_activeuser = _useState16[1];\n  useEffect(function () {\n    // setsendTo_userid(tosend_userid)\n    var activeStatus = 'Active';\n    var currentlyActive_user = sessionStorage.getItem('proid');\n    axios.get(\"http://localhost:5000/Chating_employeelist\").then(function (res) {\n      var ticketChatList = res.data.data;\n      console.log(\"Active status user:\", ticketChatList);\n      setTicketChatList(ticketChatList);\n    }).catch(function (error) {\n      console.error(\"Error fetching data:\", error);\n    });\n    // axios.put(`http://localhost:5000/chatActive_update/${Profileid}/${activeStatus}` )\n  }, []);\n  useEffect(function () {\n    if (ticketChatList.length > 0) {\n      setChatblock(ticketChatList);\n    }\n  }, [ticketChatList]);\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    existingConversations = _useState18[0],\n    setExistingConversations = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    newUserChatID = _useState20[0],\n    setNewUserChatID = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    isActive = _useState22[0],\n    setIsActive = _useState22[1];\n  var _useState23 = useState([]),\n    _useState24 = _slicedToArray(_useState23, 2),\n    users = _useState24[0],\n    setUsers = _useState24[1]; // const user1 = auth.currentUser.uid;\n  useEffect(function () {\n    var usersRef = collection(db, \"users\");\n    // create query object\n    var q = query(usersRef);\n    // execute query\n    var unsub = onSnapshot(q, function (querySnapshot) {\n      var users = [];\n      querySnapshot.forEach(function (doc) {\n        users.push(doc.data());\n      });\n      setUsers(users);\n    });\n    return function () {\n      return unsub();\n    };\n  }, []);\n  console.log(users);\n  var sendMessage = function sendMessage() {\n    var db = firebase.firestore();\n    var collectionName = 'chats';\n    var subcollectionName = 'SubChat';\n    var data = {\n      text: text,\n      createdAt: timestamp,\n      from_uid: Profileid,\n      to_uid: sendmsgId\n    };\n    if (text.trim() !== '') {\n      // Use newUserChatID after it's set in the condition\n      var mainDocRef = db.collection(collectionName).doc(newUserChatID);\n      mainDocRef.set(data).then(function () {\n        // Once the main document is successfully updated, add the message to the subcollection\n        mainDocRef.collection(subcollectionName).add(data).then(function () {\n          // Message sent successfully\n        }).catch(function (error) {\n          // Handle error\n        });\n      }).catch(function (error) {\n        console.error('Error writing main document: ', error);\n      });\n      setText('');\n\n      // To immediately update the message state, you can manually add the sent message to the message state.\n      setmessage(function (prevMessages) {\n        return [].concat(_toConsumableArray(prevMessages), [data]);\n      });\n    }\n  };\n  var chatListItems = searchInput ? searchResults.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatItem\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\" + item.id,\n      className: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      onClick: function onClick() {\n        return chatblock_process(item.id, item.firstname);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, item.firstname)));\n  }) : chatblock.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatItem\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\" + item.id,\n      className: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      onClick: function onClick() {\n        return chatblock_process(item.id, item.firstname);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, item.firstname)));\n  });\n  var handleKeyPress = function handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  var _useState25 = useState([]),\n    _useState26 = _slicedToArray(_useState25, 2),\n    selectedChatMessages = _useState26[0],\n    setSelectedChatMessages = _useState26[1];\n  useEffect(function () {\n    var unsubscribe = firebase.firestore().collection('chats').orderBy('createdAt').get().then(function (querySnapshot) {\n      var allChats = [];\n      querySnapshot.forEach(function (doc) {\n        allChats.push(_objectSpread({\n          id: doc.id\n        }, doc.data()));\n      });\n      setmessage(allChats);\n      setExistingConversations(allChats);\n    }).catch(function (error) {\n      console.error('Error getting documents: ', error);\n    });\n  }, []);\n  var Profilename = sessionStorage.getItem(\"profileName\", Profilename);\n  var _useState27 = useState(ChatViewid),\n    _useState28 = _slicedToArray(_useState27, 2),\n    ticketid = _useState28[0],\n    setTicketid = _useState28[1];\n  var _useState29 = useState(Profilename),\n    _useState30 = _slicedToArray(_useState29, 2),\n    chatuser_name = _useState30[0],\n    setChatuser_name = _useState30[1];\n  var _useState31 = useState(''),\n    _useState32 = _slicedToArray(_useState31, 2),\n    sendmsgId = _useState32[0],\n    setSendmsgId = _useState32[1];\n  var _useState33 = useState(),\n    _useState34 = _slicedToArray(_useState33, 2),\n    chat_active = _useState34[0],\n    setChatactive = _useState34[1];\n  var chatblock_process = function chatblock_process(item) {\n    console.log(\"select users\", item);\n\n    // Update state variables directly\n    setdefault_loading(true);\n    setChatuser_name(item.newfirstname);\n    // setActiveUser(id);\n    // setChatactive(chatActive)\n    // const convtStrId = id.toString();\n    // setSendmsgId(convtStrId);\n\n    // const existingChat = existingConversations.find(\n    //   (chat) =>\n    //     (chat.from_uid === Profileid && chat.to_uid === convtStrId) ||\n    //     (chat.from_uid === convtStrId && chat.to_uid === Profileid)\n    // );\n\n    // // Initialize newUserChatID with the existing chat ID or a new one\n    // const newUserChatID = existingChat ? existingChat.id : uuidv4();\n    // setNewUserChatID(newUserChatID);\n\n    // setsendTo_userid(convtStrId);\n\n    // const duplicate_docid = id.toString();\n    // setTicketid(duplicate_docid);\n\n    // // Fetch and display messages for the selected chat\n    // fetchMessagesForChat(newUserChatID);\n  };\n\n  var fetchMessagesForChat = function fetchMessagesForChat(chatID) {\n    var unsubscribe = firebase.firestore().collection('chats').doc(chatID).collection('SubChat').orderBy('createdAt').onSnapshot(function (snapshot) {\n      var messages = snapshot.docs.map(function (doc) {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n      setmessage(messages);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  };\n  var prevDate = null;\n  var _useState35 = useState(''),\n    _useState36 = _slicedToArray(_useState35, 2),\n    searchInput = _useState36[0],\n    setSearchInput = _useState36[1];\n  var _useState37 = useState([]),\n    _useState38 = _slicedToArray(_useState37, 2),\n    searchResults = _useState38[0],\n    setSearchResults = _useState38[1];\n  var handleSearch = function handleSearch(query) {\n    setSearchInput(query);\n\n    // Perform search logic (e.g., filter chatblock based on the query)\n    var results = chatblock.filter(function (item) {\n      return item.firstname.toLowerCase().includes(query.toLowerCase());\n    });\n    setSearchResults(results);\n  };\n  var _useState39 = useState(null),\n    _useState40 = _slicedToArray(_useState39, 2),\n    activeUser = _useState40[0],\n    setActiveUser = _useState40[1];\n  function formatDate(formattedDate) {}\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatroom-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"backButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    className: \"backicon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }, \"Chat\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search or start new chat\",\n    value: searchInput,\n    onChange: function onChange(e) {\n      return handleSearch(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SearchIcon, {\n    className: \"Search_icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, users\n  // .filter(item =>\n  //   item.firstname.toLowerCase().includes(searchInput.toLowerCase())\n  // )\n  .map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"chatItem\", {\n        active: item.id === activeUser\n      }),\n      key: index,\n      onClick: function onClick() {\n        return chatblock_process(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/10\",\n      className: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 19\n      }\n    }, item.newfirstname)), /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"activeDot\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }\n    }, item.isOnline === true ? /*#__PURE__*/React.createElement(DotButton, {\n      active: isActive,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 38\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n  }))), default_loading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://localhost:5000/images/\" + ticketid,\n    className: \"cover\",\n    alt: \"Chat User\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chatName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, chatuser_name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, \"Online\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMessages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }\n  }, message.map(function (message, index) {\n    var messageDate = message.createdAt.toDate();\n    var formattedDate = messageDate.toLocaleDateString('en-US', {\n      year: 'numeric',\n      day: '2-digit',\n      month: '2-digit'\n    });\n    var date1 = new Date(formattedDate);\n    var today = new Date();\n    var formatDate = function formatDate(date) {\n      var month = (date.getMonth() + 1).toString().padStart(2, '0');\n      var day = date.getDate().toString().padStart(2, '0');\n      var year = date.getFullYear();\n      return \"\".concat(month, \"/\").concat(day, \"/\").concat(year);\n    };\n    var getDayName = function getDayName(date) {\n      var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      return dayNames[date.getDay()];\n    };\n    // const formattedDate1 = formatDate(date1);\n    // const formattedDate2 = formatDate(today);\n    var comparisonResult;\n    var oneWeekAgo = new Date();\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n    if (date1 >= oneWeekAgo) {\n      var _today = new Date();\n      _today.setHours(0, 0, 0, 0);\n      if (date1.toDateString() === _today.toDateString()) {\n        comparisonResult = 'Today';\n      } else {\n        var dayName = getDayName(date1);\n        var _formattedDate = formatDate(date1);\n        comparisonResult = \"\".concat(dayName);\n      }\n    } else {\n      comparisonResult = \"\".concat(formattedDate);\n    }\n    console.log(\"Changed date format for demo printed\", comparisonResult);\n    var formattedTime = messageDate.toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n    var lowercaseTime = formattedTime.replace(/\\s/g, '').toLowerCase();\n    var showDate = prevDate !== formattedDate;\n    prevDate = formattedDate;\n    var isSentByCurrentUser = message.from_uid === Profileid && message.to_uid === sendTo_userid;\n    var isReceivedByCurrentUser = message.from_uid === sendTo_userid && message.to_uid === Profileid;\n\n    //  8===8 && 10===10\n    if (isSentByCurrentUser || isReceivedByCurrentUser) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 9\n        }\n      }, showDate && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"messageDate_show\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 24\n        }\n      }, comparisonResult), /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"message \".concat(isSentByCurrentUser ? 'sent' : 'received'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"chat_msgstl\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 2\n        }\n      }, message.text, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"chating_time\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 7\n        }\n      }, lowercaseTime))));\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onKeyDown: handleKeyPress,\n    onChange: function onChange(e) {\n      return setText(e.target.value);\n    },\n    placeholder: \"Type a message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SendIcon, {\n    className: \"sendIcon\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 11\n    }\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatRoom_loadingimg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: defaultchatRoomimg,\n    className: \"imgdeafult-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"company-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 5\n    }\n  }, \"Welcome to Tigma Technology Chat\")))));\n}\nexport default ChatingApp;","map":{"version":3,"names":["React","userImg","VinuImg","Tlogo","Jaya","SearchIcon","SendIcon","classNames","ArrowBackIcon","useEffect","useState","firebase","Button","axios","AddIcon","Scrollbars","Link","Outlet","useNavigate","useParams","useLocation","v4","uuidv4","defaultchatRoomimg","Tigmalog","DotButton","db","auth","storage","collection","query","where","onSnapshot","addDoc","Timestamp","orderBy","setDoc","doc","getDoc","updateDoc","ChatingApp","_this","Profileid","sessionStorage","getItem","generatedID","ChatViewid","Docu_ChatViewid","_useState","_useState2","_slicedToArray","message","setmessage","_useState3","_useState4","text","setText","_useState5","_useState6","chatBlocklist","setChatblocklist","timestamp","firestore","now","_useState7","_useState8","chatblock","setChatblock","_useState9","_useState10","ticketChatList","setTicketChatList","_useState11","_useState12","sendTo_userid","setsendTo_userid","_useState13","_useState14","default_loading","setdefault_loading","_useState15","_useState16","now_activeuser","setNow_activeuser","activeStatus","currentlyActive_user","get","then","res","data","console","log","catch","error","length","_useState17","_useState18","existingConversations","setExistingConversations","_useState19","_useState20","newUserChatID","setNewUserChatID","_useState21","_useState22","isActive","setIsActive","_useState23","_useState24","users","setUsers","usersRef","q","unsub","querySnapshot","forEach","push","sendMessage","collectionName","subcollectionName","createdAt","from_uid","to_uid","sendmsgId","trim","mainDocRef","set","add","prevMessages","concat","_toConsumableArray","chatListItems","searchInput","searchResults","map","item","index","createElement","className","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","id","onClick","chatblock_process","firstname","handleKeyPress","event","_useState25","_useState26","selectedChatMessages","setSelectedChatMessages","unsubscribe","allChats","_objectSpread","Profilename","_useState27","_useState28","ticketid","setTicketid","_useState29","_useState30","chatuser_name","setChatuser_name","_useState31","_useState32","setSendmsgId","_useState33","_useState34","chat_active","setChatactive","newfirstname","fetchMessagesForChat","chatID","snapshot","messages","docs","prevDate","_useState35","_useState36","setSearchInput","_useState37","_useState38","setSearchResults","handleSearch","results","filter","toLowerCase","includes","_useState39","_useState40","activeUser","setActiveUser","formatDate","formattedDate","type","placeholder","value","onChange","e","target","active","isOnline","Fragment","alt","messageDate","toDate","toLocaleDateString","year","day","month","date1","Date","today","date","getMonth","toString","padStart","getDate","getFullYear","getDayName","dayNames","getDay","comparisonResult","oneWeekAgo","setDate","setHours","toDateString","dayName","formattedTime","toLocaleTimeString","hour","minute","lowercaseTime","replace","showDate","isSentByCurrentUser","isReceivedByCurrentUser","onKeyDown","class"],"sources":["C:/Project/Front_end/src/new_chat/new_chatingroom.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./newChat.css\";\r\nimport userImg from \"./Vijay_YNM.jpg\";\r\nimport VinuImg from \"./Vinu.jpg\";\r\nimport Tlogo from \"./Vijay_logo.jpg\";\r\nimport Jaya from \"./jayaprakash.jpeg\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport classNames from \"classnames\"; \r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { useEffect, useState } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from \"axios\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport 'firebase/compat/firestore';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { Link, Outlet, useNavigate, useParams,useLocation } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport defaultchatRoomimg from \"./default_chtappimg2.png\";\r\nimport Tigmalog from \"./TigmaVj.jpg\";\r\nimport DotButton from \"./DotButton \";\r\nimport { db, auth, storage } from \"../firebase\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  onSnapshot,\r\n  addDoc,\r\n  Timestamp,\r\n  orderBy,\r\n  setDoc,\r\n  doc,\r\n  getDoc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\n\r\nfunction ChatingApp(){\r\n  let Profileid=sessionStorage.getItem(\"proid\",Profileid)\r\n  const generatedID = uuidv4();\r\n  var ChatViewid=Profileid;\r\n  // let tosend_userid='10';\r\n  \r\n  var Docu_ChatViewid;\r\n\r\n  const[message,setmessage]=useState([])\r\n  const [text, setText] = useState('');\r\n  const [chatBlocklist,setChatblocklist]=useState([])\r\n  const timestamp = firebase.firestore.Timestamp.now();\r\n  const [chatblock, setChatblock] = useState([]);\r\n  const [ticketChatList, setTicketChatList] = useState([]);\r\n  const [sendTo_userid, setsendTo_userid] = useState('');\r\n  const [default_loading, setdefault_loading] = useState(false);\r\n  const [now_activeuser,setNow_activeuser]=useState([]);\r\n\r\n  useEffect(() => {\r\n    // setsendTo_userid(tosend_userid)\r\n    let activeStatus='Active';\r\n    let currentlyActive_user=sessionStorage.getItem('proid')\r\n    axios.get(`http://localhost:5000/Chating_employeelist`)\r\n      .then((res) => {\r\n        const ticketChatList = res.data.data;\r\n        console.log(\"Active status user:\", ticketChatList);\r\n\r\n\r\n        setTicketChatList(ticketChatList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n      // axios.put(`http://localhost:5000/chatActive_update/${Profileid}/${activeStatus}` )\r\n    }, []); \r\n  \r\n  useEffect(() => {\r\n  if (ticketChatList.length > 0) {\r\n      setChatblock(ticketChatList);\r\n    }\r\n  }, [ticketChatList]);\r\n\r\n  const [existingConversations, setExistingConversations] = useState([]);\r\n  const [newUserChatID, setNewUserChatID] = useState(null);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  // const user1 = auth.currentUser.uid;\r\n\r\n  useEffect(() => {\r\n    const usersRef = collection(db, \"users\");\r\n    // create query object\r\n    const q = query(usersRef);\r\n    // execute query\r\n    const unsub = onSnapshot(q, (querySnapshot) => {\r\n      let users = [];\r\n      querySnapshot.forEach((doc) => {\r\n        users.push(doc.data());\r\n      });\r\n      setUsers(users);\r\n    });\r\n    return () => unsub();\r\n  }, []);\r\n  console.log(users)\r\n  const sendMessage = () => {\r\n    const db = firebase.firestore();\r\n    const collectionName = 'chats';\r\n    const subcollectionName = 'SubChat';\r\n    const data = {\r\n      text,\r\n      createdAt: timestamp,\r\n      from_uid: Profileid,\r\n      to_uid: sendmsgId,\r\n    };\r\n  \r\n    if (text.trim() !== '') {\r\n      // Use newUserChatID after it's set in the condition\r\n      const mainDocRef = db.collection(collectionName).doc(newUserChatID);\r\n  \r\n      mainDocRef\r\n        .set(data)\r\n        .then(() => {\r\n          // Once the main document is successfully updated, add the message to the subcollection\r\n          mainDocRef\r\n            .collection(subcollectionName)\r\n            .add(data)\r\n            .then(() => {\r\n              // Message sent successfully\r\n            })\r\n            .catch((error) => {\r\n              // Handle error\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error writing main document: ', error);\r\n        });\r\n  \r\n      setText('');\r\n  \r\n      // To immediately update the message state, you can manually add the sent message to the message state.\r\n      setmessage((prevMessages) => [...prevMessages, data]);\r\n    }\r\n  };\r\n  \r\n\r\n\r\nconst chatListItems = searchInput\r\n  ? searchResults.map((item, index) => (\r\n    <div className=\"chatItem\" key={index}>\r\n    <div className=\"imgbx\">\r\n      <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\r\n    </div>\r\n    <div className=\"chatInfo\">\r\n      <p className=\"chatName\" onClick={()=>chatblock_process(item.id,item.firstname)}>{item.firstname}</p>\r\n    </div>\r\n  </div>\r\n  \r\n    )): chatblock.map((item, index) => (\r\n    <div className=\"chatItem\" key={index}>\r\n    <div className=\"imgbx\">\r\n      <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\r\n    </div>\r\n    <div className=\"chatInfo\">\r\n      <p className=\"chatName\" onClick={()=>chatblock_process(item.id,item.firstname)}>{item.firstname}</p>\r\n      </div>\r\n  </div>\r\n    ));\r\nconst handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\nconst [selectedChatMessages, setSelectedChatMessages] = useState([]);\r\n\r\nuseEffect(() => {\r\n  const unsubscribe =firebase.firestore().collection('chats')\r\n  .orderBy('createdAt')\r\n  .get()\r\n  .then((querySnapshot) => {\r\n    const allChats = [];\r\n    querySnapshot.forEach((doc) => {\r\n      allChats.push({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      });\r\n    });\r\n    setmessage(allChats);\r\n    setExistingConversations(allChats)\r\n    \r\n  })\r\n  .catch((error) => {\r\n    console.error('Error getting documents: ', error);\r\n  });\r\n  \r\n  }, []);\r\n\r\n\r\nlet Profilename=sessionStorage.getItem(\"profileName\",Profilename);\r\n\r\nconst [ticketid, setTicketid] = useState(ChatViewid);\r\nconst [chatuser_name,setChatuser_name] = useState(Profilename);\r\nconst [sendmsgId,setSendmsgId ] = useState('');\r\nconst [chat_active,setChatactive]=useState()\r\nconst chatblock_process = (item) => {\r\n  console.log(\"select users\",item)\r\n\r\n  // Update state variables directly\r\n  setdefault_loading(true)\r\n  setChatuser_name(item.newfirstname);\r\n  // setActiveUser(id);\r\n  // setChatactive(chatActive)\r\n  // const convtStrId = id.toString();\r\n  // setSendmsgId(convtStrId);\r\n\r\n  // const existingChat = existingConversations.find(\r\n  //   (chat) =>\r\n  //     (chat.from_uid === Profileid && chat.to_uid === convtStrId) ||\r\n  //     (chat.from_uid === convtStrId && chat.to_uid === Profileid)\r\n  // );\r\n\r\n  // // Initialize newUserChatID with the existing chat ID or a new one\r\n  // const newUserChatID = existingChat ? existingChat.id : uuidv4();\r\n  // setNewUserChatID(newUserChatID);\r\n\r\n  // setsendTo_userid(convtStrId);\r\n\r\n  // const duplicate_docid = id.toString();\r\n  // setTicketid(duplicate_docid);\r\n\r\n  // // Fetch and display messages for the selected chat\r\n  // fetchMessagesForChat(newUserChatID);\r\n};\r\n\r\nconst fetchMessagesForChat = (chatID) => {\r\n  const unsubscribe = firebase.firestore().collection('chats').doc(chatID).collection('SubChat')\r\n  .orderBy('createdAt')\r\n  .onSnapshot(snapshot => {\r\n    const messages = snapshot.docs.map(doc => ({\r\n      id: doc.id,\r\n      ...doc.data(),\r\n    }));\r\n    setmessage(messages);\r\n  });\r\n\r\nreturn () => unsubscribe();\r\n};\r\n\r\nlet prevDate = null;  \r\nconst [searchInput, setSearchInput] = useState('');\r\nconst [searchResults, setSearchResults] = useState([]);\r\nconst handleSearch = (query) => {\r\n  setSearchInput(query);\r\n\r\n  // Perform search logic (e.g., filter chatblock based on the query)\r\n  const results = chatblock.filter((item) =>\r\n    item.firstname.toLowerCase().includes(query.toLowerCase())\r\n  );\r\n  setSearchResults(results);\r\n};\r\n\r\nconst [activeUser, setActiveUser] = useState(null);\r\n\r\nfunction formatDate(formattedDate) {\r\n\r\n\r\n\r\n}\r\n  return(\r\n    <div className=\"chatroom-container\">\r\n          <div className=\"left-side\">\r\n          <div className=\"header\">\r\n         \r\n          <div className=\"backButton\">\r\n          <ArrowBackIcon className=\"backicon\" />\r\n          <div className=\"chat_heading\">\r\n            <p>Chat</p>\r\n            </div>\r\n        </div>\r\n           \r\n\r\n          </div>\r\n\r\n      \r\n          <div className=\"search-chat\">\r\n            <div>\r\n              <input\r\n      type=\"text\"\r\n      placeholder=\"Search or start new chat\"\r\n      value={searchInput}\r\n      onChange={(e) => handleSearch(e.target.value)}\r\n    />\r\n              <SearchIcon className=\"Search_icon\"/>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n\r\n        <div className=\"chatList\">\r\n          {users\r\n            // .filter(item =>\r\n            //   item.firstname.toLowerCase().includes(searchInput.toLowerCase())\r\n            // )\r\n            .map((item, index) => (\r\n                   <div\r\n      className={classNames(\"chatItem\", { active: item.id === activeUser })}\r\n      key={index}\r\n      onClick={() => chatblock_process(item)}\r\n    >\r\n                <div className=\"imgbx\">\r\n                  <img src={`http://localhost:5000/images/10`} className=\"cover\"  />\r\n                </div>\r\n                <div className=\"chatInfo\">\r\n                  <p className=\"chatName\" >{item.newfirstname}</p>\r\n                  {/* <p className=\"lastMsg_side\" >Hi</p>s */}\r\n\r\n                  {/* <DotButton active={isActive} /> */}\r\n\r\n                </div>\r\n                <div key={index} className=\"activeDot\">\r\n          {item.isOnline === true ? (<DotButton active={isActive} />):(<></>)}\r\n        </div>\r\n         \r\n                \r\n\r\n              </div>\r\n            ))}\r\n            \r\n        </div>\r\n\r\n          </div>\r\n         {default_loading ?(<>\r\n\r\n          <div className=\"right-side\">\r\n          <div className=\"chatHeader\">\r\n          <div className=\"userImage\">\r\n            <img src={\"http://localhost:5000/images/\"+ ticketid}  className=\"cover\" alt=\"Chat User\" />\r\n          </div>\r\n          <div className=\"userInfo\">\r\n            <p className=\"chatName\">{chatuser_name}</p>\r\n            <p className=\"status\">Online</p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"chatMessages\">\r\n  {message.map((message, index) => {\r\n    const messageDate = message.createdAt.toDate();\r\n    const formattedDate = messageDate.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n \r\n    });\r\n\r\n    const date1 = new Date(formattedDate);\r\n    const today = new Date();\r\n    const formatDate = (date) => {\r\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = date.getDate().toString().padStart(2, '0');\r\n      const year = date.getFullYear();\r\n      return `${month}/${day}/${year}`;\r\n    };\r\n    const getDayName = (date) => {\r\n      const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n      return dayNames[date.getDay()];\r\n    };\r\n    // const formattedDate1 = formatDate(date1);\r\n    // const formattedDate2 = formatDate(today);\r\n    let comparisonResult;\r\n\r\n    const oneWeekAgo = new Date();\r\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n    if (date1 >= oneWeekAgo) {\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n\r\n      if (date1.toDateString() === today.toDateString()) {\r\n        comparisonResult = 'Today';\r\n      } else {\r\n        const dayName = getDayName(date1);\r\n        const formattedDate = formatDate(date1);\r\n        comparisonResult = `${dayName}`;\r\n      }\r\n    } else {\r\n      comparisonResult = `${formattedDate}`;\r\n    }\r\n\r\n  \r\n    console.log(\"Changed date format for demo printed\", comparisonResult);\r\n\r\n    \r\n    \r\n    \r\n    const formattedTime = messageDate.toLocaleTimeString('en-US', {\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n    });\r\n    const lowercaseTime = formattedTime.replace(/\\s/g, '').toLowerCase();\r\n    const showDate = prevDate !== formattedDate;\r\n    prevDate = formattedDate;\r\n\r\n    \r\n\r\n    const isSentByCurrentUser = message.from_uid === Profileid && message.to_uid === sendTo_userid;\r\n    const isReceivedByCurrentUser = message.from_uid === sendTo_userid && message.to_uid === Profileid;\r\n \r\n\r\n\r\n                                                 //  8===8 && 10===10\r\n    if (isSentByCurrentUser || isReceivedByCurrentUser) {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          {showDate && <p className=\"messageDate_show\">{comparisonResult}</p>}\r\n          <div\r\n            key={index}\r\n            className={`message ${isSentByCurrentUser ? 'sent' : 'received'}`}\r\n          >\r\n <p className=\"chat_msgstl\">\r\n      {message.text}\r\n      <span className=\"chating_time\">{lowercaseTime}</span>\r\n    </p>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  })}\r\n</div>\r\n\r\n\r\n\r\n        \r\n<div className=\"messageInput\">\r\n          <input type=\"text\"  value={text} onKeyDown={handleKeyPress} onChange={e => setText(e.target.value)} placeholder=\"Type a message...\" />\r\n          <SendIcon className=\"sendIcon\"  onClick={sendMessage} />\r\n</div>\r\n         \r\n</div> \r\n         \r\n         </>):(<>\r\n         \r\n          <div className=\"chatRoom_loadingimg\">\r\n  <div>\r\n  <img src={defaultchatRoomimg} className=\"imgdeafult-chat\"/>\r\n </div>\r\n {/* <div>\r\n  <img src={Tigmalog} className=\"imgdeafult-logo\"/>\r\n </div> */}\r\n  <div class=\"company-info\">\r\n    <h2>Welcome to Tigma Technology Chat</h2>\r\n</div>\r\n</div>\r\n         \r\n         </>)}\r\n         \r\n\r\n</div>\r\n  )\r\n}\r\nexport default ChatingApp;\r\n  "],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,aAAa,MAAM,+BAA+B;AACzD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAO,2BAA2B;AAClC,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,IAAI,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAACC,WAAW,QAAQ,kBAAkB;AACnF,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,OAAOC,kBAAkB,MAAM,0BAA0B;AACzD,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,SAAS,MAAM,cAAc;AACpC,SAASC,EAAE,EAAEC,IAAI,EAAEC,OAAO,QAAQ,aAAa;AAC/C,SACEC,UAAU,EACVC,KAAK,EACLC,KAAK,EACLC,UAAU,EACVC,MAAM,EACNC,SAAS,EACTC,OAAO,EACPC,MAAM,EACNC,GAAG,EACHC,MAAM,EACNC,SAAS,QACJ,oBAAoB;AAE3B,SAASC,UAAUA,CAAA,EAAE;EAAA,IAAAC,KAAA;EACnB,IAAIC,SAAS,GAACC,cAAc,CAACC,OAAO,CAAC,OAAO,EAACF,SAAS,CAAC;EACvD,IAAMG,WAAW,GAAGvB,MAAM,CAAC,CAAC;EAC5B,IAAIwB,UAAU,GAACJ,SAAS;EACxB;;EAEA,IAAIK,eAAe;EAAC,IAAAC,SAAA,GAEMtC,QAAQ,CAAC,EAAE,CAAC;IAAAuC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhCG,OAAO,GAAAF,UAAA;IAACG,UAAU,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACA3C,QAAQ,CAAC,EAAE,CAAC;IAAA4C,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACmB/C,QAAQ,CAAC,EAAE,CAAC;IAAAgD,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA5CE,aAAa,GAAAD,UAAA;IAACE,gBAAgB,GAAAF,UAAA;EACrC,IAAMG,SAAS,GAAGlD,QAAQ,CAACmD,SAAS,CAAC5B,SAAS,CAAC6B,GAAG,CAAC,CAAC;EAAC,IAAAC,UAAA,GACnBtD,QAAQ,CAAC,EAAE,CAAC;IAAAuD,UAAA,GAAAf,cAAA,CAAAc,UAAA;IAAvCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACc1D,QAAQ,CAAC,EAAE,CAAC;IAAA2D,WAAA,GAAAnB,cAAA,CAAAkB,UAAA;IAAjDE,cAAc,GAAAD,WAAA;IAAEE,iBAAiB,GAAAF,WAAA;EAAA,IAAAG,WAAA,GACE9D,QAAQ,CAAC,EAAE,CAAC;IAAA+D,WAAA,GAAAvB,cAAA,CAAAsB,WAAA;IAA/CE,aAAa,GAAAD,WAAA;IAAEE,gBAAgB,GAAAF,WAAA;EAAA,IAAAG,WAAA,GACQlE,QAAQ,CAAC,KAAK,CAAC;IAAAmE,WAAA,GAAA3B,cAAA,CAAA0B,WAAA;IAAtDE,eAAe,GAAAD,WAAA;IAAEE,kBAAkB,GAAAF,WAAA;EAAA,IAAAG,WAAA,GACDtE,QAAQ,CAAC,EAAE,CAAC;IAAAuE,WAAA,GAAA/B,cAAA,CAAA8B,WAAA;IAA9CE,cAAc,GAAAD,WAAA;IAACE,iBAAiB,GAAAF,WAAA;EAEvCxE,SAAS,CAAC,YAAM;IACd;IACA,IAAI2E,YAAY,GAAC,QAAQ;IACzB,IAAIC,oBAAoB,GAAC1C,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IACxD/B,KAAK,CAACyE,GAAG,6CAA6C,CAAC,CACpDC,IAAI,CAAC,UAACC,GAAG,EAAK;MACb,IAAMlB,cAAc,GAAGkB,GAAG,CAACC,IAAI,CAACA,IAAI;MACpCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAErB,cAAc,CAAC;MAGlDC,iBAAiB,CAACD,cAAc,CAAC;IACnC,CAAC,CAAC,CACDsB,KAAK,CAAC,UAACC,KAAK,EAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAERpF,SAAS,CAAC,YAAM;IAChB,IAAI6D,cAAc,CAACwB,MAAM,GAAG,CAAC,EAAE;MAC3B3B,YAAY,CAACG,cAAc,CAAC;IAC9B;EACF,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAAC,IAAAyB,WAAA,GAEqCrF,QAAQ,CAAC,EAAE,CAAC;IAAAsF,WAAA,GAAA9C,cAAA,CAAA6C,WAAA;IAA/DE,qBAAqB,GAAAD,WAAA;IAAEE,wBAAwB,GAAAF,WAAA;EAAA,IAAAG,WAAA,GACZzF,QAAQ,CAAC,IAAI,CAAC;IAAA0F,WAAA,GAAAlD,cAAA,CAAAiD,WAAA;IAAjDE,aAAa,GAAAD,WAAA;IAAEE,gBAAgB,GAAAF,WAAA;EAAA,IAAAG,WAAA,GACN7F,QAAQ,CAAC,KAAK,CAAC;IAAA8F,WAAA,GAAAtD,cAAA,CAAAqD,WAAA;IAAxCE,QAAQ,GAAAD,WAAA;IAAEE,WAAW,GAAAF,WAAA;EAAA,IAAAG,WAAA,GACFjG,QAAQ,CAAC,EAAE,CAAC;IAAAkG,WAAA,GAAA1D,cAAA,CAAAyD,WAAA;IAA/BE,KAAK,GAAAD,WAAA;IAAEE,QAAQ,GAAAF,WAAA,KACtB;EAEAnG,SAAS,CAAC,YAAM;IACd,IAAMsG,QAAQ,GAAGlF,UAAU,CAACH,EAAE,EAAE,OAAO,CAAC;IACxC;IACA,IAAMsF,CAAC,GAAGlF,KAAK,CAACiF,QAAQ,CAAC;IACzB;IACA,IAAME,KAAK,GAAGjF,UAAU,CAACgF,CAAC,EAAE,UAACE,aAAa,EAAK;MAC7C,IAAIL,KAAK,GAAG,EAAE;MACdK,aAAa,CAACC,OAAO,CAAC,UAAC9E,GAAG,EAAK;QAC7BwE,KAAK,CAACO,IAAI,CAAC/E,GAAG,CAACoD,IAAI,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC;MACFqB,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC;IACF,OAAO;MAAA,OAAMI,KAAK,CAAC,CAAC;IAAA;EACtB,CAAC,EAAE,EAAE,CAAC;EACNvB,OAAO,CAACC,GAAG,CAACkB,KAAK,CAAC;EAClB,IAAMQ,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAM3F,EAAE,GAAGf,QAAQ,CAACmD,SAAS,CAAC,CAAC;IAC/B,IAAMwD,cAAc,GAAG,OAAO;IAC9B,IAAMC,iBAAiB,GAAG,SAAS;IACnC,IAAM9B,IAAI,GAAG;MACXlC,IAAI,EAAJA,IAAI;MACJiE,SAAS,EAAE3D,SAAS;MACpB4D,QAAQ,EAAE/E,SAAS;MACnBgF,MAAM,EAAEC;IACV,CAAC;IAED,IAAIpE,IAAI,CAACqE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtB;MACA,IAAMC,UAAU,GAAGnG,EAAE,CAACG,UAAU,CAACyF,cAAc,CAAC,CAACjF,GAAG,CAACgE,aAAa,CAAC;MAEnEwB,UAAU,CACPC,GAAG,CAACrC,IAAI,CAAC,CACTF,IAAI,CAAC,YAAM;QACV;QACAsC,UAAU,CACPhG,UAAU,CAAC0F,iBAAiB,CAAC,CAC7BQ,GAAG,CAACtC,IAAI,CAAC,CACTF,IAAI,CAAC,YAAM;UACV;QAAA,CACD,CAAC,CACDK,KAAK,CAAC,UAACC,KAAK,EAAK;UAChB;QAAA,CACD,CAAC;MACN,CAAC,CAAC,CACDD,KAAK,CAAC,UAACC,KAAK,EAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;MAEJrC,OAAO,CAAC,EAAE,CAAC;;MAEX;MACAJ,UAAU,CAAC,UAAC4E,YAAY;QAAA,UAAAC,MAAA,CAAAC,kBAAA,CAASF,YAAY,IAAEvC,IAAI;MAAA,CAAC,CAAC;IACvD;EACF,CAAC;EAIH,IAAM0C,aAAa,GAAGC,WAAW,GAC7BC,aAAa,CAACC,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;IAAA,oBAC9BxI,KAAA,CAAAyI,aAAA;MAAKC,SAAS,EAAC,UAAU;MAACC,GAAG,EAAEH,KAAM;MAAAI,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrCjJ,KAAA,CAAAyI,aAAA;MAAKC,SAAS,EAAC,OAAO;MAAAE,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACpBjJ,KAAA,CAAAyI,aAAA;MAAKS,GAAG,EAAE,+BAA+B,GAAEX,IAAI,CAACY,EAAG;MAAET,SAAS,EAAC,OAAO;MAAAE,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAG,CACtE,CAAC,eACNjJ,KAAA,CAAAyI,aAAA;MAAKC,SAAS,EAAC,UAAU;MAAAE,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvBjJ,KAAA,CAAAyI,aAAA;MAAGC,SAAS,EAAC,UAAU;MAACU,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAIC,iBAAiB,CAACd,IAAI,CAACY,EAAE,EAACZ,IAAI,CAACe,SAAS,CAAC;MAAA,CAAC;MAAAV,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEV,IAAI,CAACe,SAAa,CAChG,CACF,CAAC;EAAA,CAEH,CAAC,GAAEpF,SAAS,CAACoE,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;IAAA,oBAC9BxI,KAAA,CAAAyI,aAAA;MAAKC,SAAS,EAAC,UAAU;MAACC,GAAG,EAAEH,KAAM;MAAAI,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrCjJ,KAAA,CAAAyI,aAAA;MAAKC,SAAS,EAAC,OAAO;MAAAE,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACpBjJ,KAAA,CAAAyI,aAAA;MAAKS,GAAG,EAAE,+BAA+B,GAAEX,IAAI,CAACY,EAAG;MAAET,SAAS,EAAC,OAAO;MAAAE,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAG,CACtE,CAAC,eACNjJ,KAAA,CAAAyI,aAAA;MAAKC,SAAS,EAAC,UAAU;MAAAE,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvBjJ,KAAA,CAAAyI,aAAA;MAAGC,SAAS,EAAC,UAAU;MAACU,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAIC,iBAAiB,CAACd,IAAI,CAACY,EAAE,EAACZ,IAAI,CAACe,SAAS,CAAC;MAAA,CAAC;MAAAV,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEV,IAAI,CAACe,SAAa,CAC9F,CACJ,CAAC;EAAA,CACH,CAAC;EACN,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAK,EAAK;IAC9B,IAAIA,KAAK,CAACb,GAAG,KAAK,OAAO,EAAE;MACzBtB,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAAC,IAAAoC,WAAA,GACoD/I,QAAQ,CAAC,EAAE,CAAC;IAAAgJ,WAAA,GAAAxG,cAAA,CAAAuG,WAAA;IAA7DE,oBAAoB,GAAAD,WAAA;IAAEE,uBAAuB,GAAAF,WAAA;EAEpDjJ,SAAS,CAAC,YAAM;IACd,IAAMoJ,WAAW,GAAElJ,QAAQ,CAACmD,SAAS,CAAC,CAAC,CAACjC,UAAU,CAAC,OAAO,CAAC,CAC1DM,OAAO,CAAC,WAAW,CAAC,CACpBmD,GAAG,CAAC,CAAC,CACLC,IAAI,CAAC,UAAC2B,aAAa,EAAK;MACvB,IAAM4C,QAAQ,GAAG,EAAE;MACnB5C,aAAa,CAACC,OAAO,CAAC,UAAC9E,GAAG,EAAK;QAC7ByH,QAAQ,CAAC1C,IAAI,CAAA2C,aAAA;UACXZ,EAAE,EAAE9G,GAAG,CAAC8G;QAAE,GACP9G,GAAG,CAACoD,IAAI,CAAC,CAAC,CACd,CAAC;MACJ,CAAC,CAAC;MACFrC,UAAU,CAAC0G,QAAQ,CAAC;MACpB5D,wBAAwB,CAAC4D,QAAQ,CAAC;IAEpC,CAAC,CAAC,CACDlE,KAAK,CAAC,UAACC,KAAK,EAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EAEF,CAAC,EAAE,EAAE,CAAC;EAGR,IAAImE,WAAW,GAACrH,cAAc,CAACC,OAAO,CAAC,aAAa,EAACoH,WAAW,CAAC;EAAC,IAAAC,WAAA,GAElCvJ,QAAQ,CAACoC,UAAU,CAAC;IAAAoH,WAAA,GAAAhH,cAAA,CAAA+G,WAAA;IAA7CE,QAAQ,GAAAD,WAAA;IAAEE,WAAW,GAAAF,WAAA;EAAA,IAAAG,WAAA,GACa3J,QAAQ,CAACsJ,WAAW,CAAC;IAAAM,WAAA,GAAApH,cAAA,CAAAmH,WAAA;IAAvDE,aAAa,GAAAD,WAAA;IAACE,gBAAgB,GAAAF,WAAA;EAAA,IAAAG,WAAA,GACH/J,QAAQ,CAAC,EAAE,CAAC;IAAAgK,WAAA,GAAAxH,cAAA,CAAAuH,WAAA;IAAvC9C,SAAS,GAAA+C,WAAA;IAACC,YAAY,GAAAD,WAAA;EAAA,IAAAE,WAAA,GACKlK,QAAQ,CAAC,CAAC;IAAAmK,WAAA,GAAA3H,cAAA,CAAA0H,WAAA;IAArCE,WAAW,GAAAD,WAAA;IAACE,aAAa,GAAAF,WAAA;EAChC,IAAMxB,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAId,IAAI,EAAK;IAClC7C,OAAO,CAACC,GAAG,CAAC,cAAc,EAAC4C,IAAI,CAAC;;IAEhC;IACAxD,kBAAkB,CAAC,IAAI,CAAC;IACxByF,gBAAgB,CAACjC,IAAI,CAACyC,YAAY,CAAC;IACnC;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;;IAEA;IACA;;IAEA;IACA;EACF,CAAC;;EAED,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,MAAM,EAAK;IACvC,IAAMrB,WAAW,GAAGlJ,QAAQ,CAACmD,SAAS,CAAC,CAAC,CAACjC,UAAU,CAAC,OAAO,CAAC,CAACQ,GAAG,CAAC6I,MAAM,CAAC,CAACrJ,UAAU,CAAC,SAAS,CAAC,CAC7FM,OAAO,CAAC,WAAW,CAAC,CACpBH,UAAU,CAAC,UAAAmJ,QAAQ,EAAI;MACtB,IAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAI,CAAC/C,GAAG,CAAC,UAAAjG,GAAG;QAAA,OAAA0H,aAAA;UACpCZ,EAAE,EAAE9G,GAAG,CAAC8G;QAAE,GACP9G,GAAG,CAACoD,IAAI,CAAC,CAAC;MAAA,CACb,CAAC;MACHrC,UAAU,CAACgI,QAAQ,CAAC;IACtB,CAAC,CAAC;IAEJ,OAAO;MAAA,OAAMvB,WAAW,CAAC,CAAC;IAAA;EAC1B,CAAC;EAED,IAAIyB,QAAQ,GAAG,IAAI;EAAC,IAAAC,WAAA,GACkB7K,QAAQ,CAAC,EAAE,CAAC;IAAA8K,WAAA,GAAAtI,cAAA,CAAAqI,WAAA;IAA3CnD,WAAW,GAAAoD,WAAA;IAAEC,cAAc,GAAAD,WAAA;EAAA,IAAAE,WAAA,GACQhL,QAAQ,CAAC,EAAE,CAAC;IAAAiL,WAAA,GAAAzI,cAAA,CAAAwI,WAAA;IAA/CrD,aAAa,GAAAsD,WAAA;IAAEC,gBAAgB,GAAAD,WAAA;EACtC,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAI/J,KAAK,EAAK;IAC9B2J,cAAc,CAAC3J,KAAK,CAAC;;IAErB;IACA,IAAMgK,OAAO,GAAG5H,SAAS,CAAC6H,MAAM,CAAC,UAACxD,IAAI;MAAA,OACpCA,IAAI,CAACe,SAAS,CAAC0C,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACnK,KAAK,CAACkK,WAAW,CAAC,CAAC,CAAC;IAAA,CAC5D,CAAC;IACDJ,gBAAgB,CAACE,OAAO,CAAC;EAC3B,CAAC;EAAC,IAAAI,WAAA,GAEkCxL,QAAQ,CAAC,IAAI,CAAC;IAAAyL,WAAA,GAAAjJ,cAAA,CAAAgJ,WAAA;IAA3CE,UAAU,GAAAD,WAAA;IAAEE,aAAa,GAAAF,WAAA;EAEhC,SAASG,UAAUA,CAACC,aAAa,EAAE,CAInC;EACE,oBACEvM,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BjJ,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BjJ,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,QAAQ;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEvBjJ,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BjJ,KAAA,CAAAyI,aAAA,CAACjI,aAAa;IAACkI,SAAS,EAAC,UAAU;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACtCjJ,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BjJ,KAAA,CAAAyI,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,MAAO,CACL,CACJ,CAGE,CAAC,eAGNjJ,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BjJ,KAAA,CAAAyI,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEjJ,KAAA,CAAAyI,aAAA;IACR+D,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,0BAA0B;IACtCC,KAAK,EAAEtE,WAAY;IACnBuE,QAAQ,EAAE,SAAAA,SAACC,CAAC;MAAA,OAAKf,YAAY,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;IAAA,CAAC;IAAA9D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC/C,CAAC,eACQjJ,KAAA,CAAAyI,aAAA,CAACpI,UAAU;IAACqI,SAAS,EAAC,aAAa;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CACjC,CACF,CAAC,eAIRjJ,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,UAAU;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtBpC;EACC;EACA;EACA;EAAA,CACCyB,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;IAAA,oBACVxI,KAAA,CAAAyI,aAAA;MACbC,SAAS,EAAEnI,UAAU,CAAC,UAAU,EAAE;QAAEuM,MAAM,EAAEvE,IAAI,CAACY,EAAE,KAAKiD;MAAW,CAAC,CAAE;MACtEzD,GAAG,EAAEH,KAAM;MACXY,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,iBAAiB,CAACd,IAAI,CAAC;MAAA,CAAC;MAAAK,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAE7BjJ,KAAA,CAAAyI,aAAA;MAAKC,SAAS,EAAC,OAAO;MAAAE,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACpBjJ,KAAA,CAAAyI,aAAA;MAAKS,GAAG,mCAAoC;MAACR,SAAS,EAAC,OAAO;MAAAE,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAG,CAC9D,CAAC,eACNjJ,KAAA,CAAAyI,aAAA;MAAKC,SAAS,EAAC,UAAU;MAAAE,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvBjJ,KAAA,CAAAyI,aAAA;MAAGC,SAAS,EAAC,UAAU;MAAAE,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAGV,IAAI,CAACyC,YAAgB,CAK5C,CAAC,eACNhL,KAAA,CAAAyI,aAAA;MAAKE,GAAG,EAAEH,KAAM;MAACE,SAAS,EAAC,WAAW;MAAAE,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC3CV,IAAI,CAACwE,QAAQ,KAAK,IAAI,gBAAI/M,KAAA,CAAAyI,aAAA,CAAChH,SAAS;MAACqL,MAAM,EAAErG,QAAS;MAAAmC,MAAA,EAAAnG,KAAA;MAAAoG,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,gBAAGjJ,KAAA,CAAAyI,aAAA,CAAAzI,KAAA,CAAAgN,QAAA,MAAI,CAC9D,CAIM,CAAC;EAAA,CACP,CAEA,CAEE,CAAC,EACNlI,eAAe,gBAAG9E,KAAA,CAAAyI,aAAA,CAAAzI,KAAA,CAAAgN,QAAA,qBAElBhN,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BjJ,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BjJ,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBjJ,KAAA,CAAAyI,aAAA;IAAKS,GAAG,EAAE,+BAA+B,GAAEiB,QAAS;IAAEzB,SAAS,EAAC,OAAO;IAACuE,GAAG,EAAC,WAAW;IAAArE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACtF,CAAC,eACNjJ,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,UAAU;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvBjJ,KAAA,CAAAyI,aAAA;IAAGC,SAAS,EAAC,UAAU;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEsB,aAAiB,CAAC,eAC3CvK,KAAA,CAAAyI,aAAA;IAAGC,SAAS,EAAC,QAAQ;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAS,CAC5B,CACF,CAAC,eAGNjJ,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClC9F,OAAO,CAACmF,GAAG,CAAC,UAACnF,OAAO,EAAEqF,KAAK,EAAK;IAC/B,IAAM0E,WAAW,GAAG/J,OAAO,CAACqE,SAAS,CAAC2F,MAAM,CAAC,CAAC;IAC9C,IAAMZ,aAAa,GAAGW,WAAW,CAACE,kBAAkB,CAAC,OAAO,EAAE;MAC5DC,IAAI,EAAE,SAAS;MACfC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE;IAET,CAAC,CAAC;IAEF,IAAMC,KAAK,GAAG,IAAIC,IAAI,CAAClB,aAAa,CAAC;IACrC,IAAMmB,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;IACxB,IAAMnB,UAAU,GAAG,SAAbA,UAAUA,CAAIqB,IAAI,EAAK;MAC3B,IAAMJ,KAAK,GAAG,CAACI,IAAI,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC/D,IAAMR,GAAG,GAAGK,IAAI,CAACI,OAAO,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MACtD,IAAMT,IAAI,GAAGM,IAAI,CAACK,WAAW,CAAC,CAAC;MAC/B,UAAA/F,MAAA,CAAUsF,KAAK,OAAAtF,MAAA,CAAIqF,GAAG,OAAArF,MAAA,CAAIoF,IAAI;IAChC,CAAC;IACD,IAAMY,UAAU,GAAG,SAAbA,UAAUA,CAAIN,IAAI,EAAK;MAC3B,IAAMO,QAAQ,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;MAC/F,OAAOA,QAAQ,CAACP,IAAI,CAACQ,MAAM,CAAC,CAAC,CAAC;IAChC,CAAC;IACD;IACA;IACA,IAAIC,gBAAgB;IAEpB,IAAMC,UAAU,GAAG,IAAIZ,IAAI,CAAC,CAAC;IAC7BY,UAAU,CAACC,OAAO,CAACD,UAAU,CAACN,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5C,IAAIP,KAAK,IAAIa,UAAU,EAAE;MACvB,IAAMX,MAAK,GAAG,IAAID,IAAI,CAAC,CAAC;MACxBC,MAAK,CAACa,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAE1B,IAAIf,KAAK,CAACgB,YAAY,CAAC,CAAC,KAAKd,MAAK,CAACc,YAAY,CAAC,CAAC,EAAE;QACjDJ,gBAAgB,GAAG,OAAO;MAC5B,CAAC,MAAM;QACL,IAAMK,OAAO,GAAGR,UAAU,CAACT,KAAK,CAAC;QACjC,IAAMjB,cAAa,GAAGD,UAAU,CAACkB,KAAK,CAAC;QACvCY,gBAAgB,MAAAnG,MAAA,CAAMwG,OAAO,CAAE;MACjC;IACF,CAAC,MAAM;MACLL,gBAAgB,MAAAnG,MAAA,CAAMsE,aAAa,CAAE;IACvC;IAGA7G,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEyI,gBAAgB,CAAC;IAKrE,IAAMM,aAAa,GAAGxB,WAAW,CAACyB,kBAAkB,CAAC,OAAO,EAAE;MAC5DC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAMC,aAAa,GAAGJ,aAAa,CAACK,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC/C,WAAW,CAAC,CAAC;IACpE,IAAMgD,QAAQ,GAAG1D,QAAQ,KAAKiB,aAAa;IAC3CjB,QAAQ,GAAGiB,aAAa;IAIxB,IAAM0C,mBAAmB,GAAG9L,OAAO,CAACsE,QAAQ,KAAK/E,SAAS,IAAIS,OAAO,CAACuE,MAAM,KAAKhD,aAAa;IAC9F,IAAMwK,uBAAuB,GAAG/L,OAAO,CAACsE,QAAQ,KAAK/C,aAAa,IAAIvB,OAAO,CAACuE,MAAM,KAAKhF,SAAS;;IAIrD;IAC7C,IAAIuM,mBAAmB,IAAIC,uBAAuB,EAAE;MAClD,oBACElP,KAAA,CAAAyI,aAAA,CAACzI,KAAK,CAACgN,QAAQ;QAACrE,GAAG,EAAEH,KAAM;QAAAI,MAAA,EAAAnG,KAAA;QAAAoG,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACxB+F,QAAQ,iBAAIhP,KAAA,CAAAyI,aAAA;QAAGC,SAAS,EAAC,kBAAkB;QAAAE,MAAA,EAAAnG,KAAA;QAAAoG,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAEmF,gBAAoB,CAAC,eACnEpO,KAAA,CAAAyI,aAAA;QACEE,GAAG,EAAEH,KAAM;QACXE,SAAS,aAAAT,MAAA,CAAagH,mBAAmB,GAAG,MAAM,GAAG,UAAU,CAAG;QAAArG,MAAA,EAAAnG,KAAA;QAAAoG,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAE7EjJ,KAAA,CAAAyI,aAAA;QAAGC,SAAS,EAAC,aAAa;QAAAE,MAAA,EAAAnG,KAAA;QAAAoG,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACpB9F,OAAO,CAACI,IAAI,eACbvD,KAAA,CAAAyI,aAAA;QAAMC,SAAS,EAAC,cAAc;QAAAE,MAAA,EAAAnG,KAAA;QAAAoG,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAE6F,aAAoB,CACnD,CACQ,CACS,CAAC;IAErB;EACF,CAAC,CACE,CAAC,eAKN9O,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnBjJ,KAAA,CAAAyI,aAAA;IAAO+D,IAAI,EAAC,MAAM;IAAEE,KAAK,EAAEnJ,IAAK;IAAC4L,SAAS,EAAE5F,cAAe;IAACoD,QAAQ,EAAE,SAAAA,SAAAC,CAAC;MAAA,OAAIpJ,OAAO,CAACoJ,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;IAAA,CAAC;IAACD,WAAW,EAAC,mBAAmB;IAAA7D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACtIjJ,KAAA,CAAAyI,aAAA,CAACnI,QAAQ;IAACoI,SAAS,EAAC,UAAU;IAAEU,OAAO,EAAE/B,WAAY;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC5D,CAEA,CAEM,CAAC,gBAAGjJ,KAAA,CAAAyI,aAAA,CAAAzI,KAAA,CAAAgN,QAAA,qBAELhN,KAAA,CAAAyI,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5CjJ,KAAA,CAAAyI,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACAjJ,KAAA,CAAAyI,aAAA;IAAKS,GAAG,EAAE3H,kBAAmB;IAACmH,SAAS,EAAC,iBAAiB;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CACtD,CAAC,eAILjJ,KAAA,CAAAyI,aAAA;IAAK2G,KAAK,EAAC,cAAc;IAAAxG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvBjJ,KAAA,CAAAyI,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,kCAAoC,CACvC,CACA,CAEM,CAGN,CAAC;AAEN;AACA,eAAezG,UAAU"},"metadata":{},"sourceType":"module"}