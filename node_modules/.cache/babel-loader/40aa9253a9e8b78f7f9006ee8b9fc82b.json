{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _ = require(\"lodash\");\nvar RELATIONSHIP_SCHEMA_PREFIX = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/\";\n\n/**\n * A relationship collection.\n * @ignore\n */\nvar Relationships = /*#__PURE__*/function () {\n  /**\n   * Creates a new instance of _Relationships.\n   * @param {{}} node - The node.\n   */\n  function Relationships(node) {\n    _classCallCheck(this, Relationships);\n    this._init(node);\n    this._getStartingId();\n  }\n\n  /**\n   * Add a new relationship.\n   * @param {string} type - The type of relationship.\n   * @param {string} target - The target of the relationship.\n   * @param {string} [targetMode] - The target mode of the relationship.\n   * @returns {{}} The new relationship.\n   */\n  _createClass(Relationships, [{\n    key: \"add\",\n    value: function add(type, target, targetMode) {\n      var node = {\n        name: \"Relationship\",\n        attributes: {\n          Id: \"rId\".concat(this._nextId++),\n          Type: \"\".concat(RELATIONSHIP_SCHEMA_PREFIX).concat(type),\n          Target: target\n        }\n      };\n      if (targetMode) {\n        node.attributes.TargetMode = targetMode;\n      }\n      this._node.children.push(node);\n      return node;\n    }\n    /**\n     * Find a relationship by ID.\n     * @param {string} id - The relationship ID.\n     * @returns {{}|undefined} The matching relationship or undefined if not found.\n     */\n  }, {\n    key: \"findById\",\n    value: function findById(id) {\n      return _.find(this._node.children, function (node) {\n        return node.attributes.Id === id;\n      });\n    }\n    /**\n     * Find a relationship by type.\n     * @param {string} type - The type to search for.\n     * @returns {{}|undefined} The matching relationship or undefined if not found.\n     */\n  }, {\n    key: \"findByType\",\n    value: function findByType(type) {\n      return _.find(this._node.children, function (node) {\n        return node.attributes.Type === \"\".concat(RELATIONSHIP_SCHEMA_PREFIX).concat(type);\n      });\n    }\n    /**\n     * Convert the collection to an XML object.\n     * @returns {{}|undefined} The XML or undefined if empty.\n     */\n  }, {\n    key: \"toXml\",\n    value: function toXml() {\n      if (!this._node.children.length) return;\n      return this._node;\n    }\n    /**\n     * Get the starting relationship ID to use for new relationships.\n     * @private\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_getStartingId\",\n    value: function _getStartingId() {\n      var _this = this;\n      this._nextId = 1;\n      this._node.children.forEach(function (node) {\n        var id = parseInt(node.attributes.Id.substr(3));\n        if (id >= _this._nextId) _this._nextId = id + 1;\n      });\n    }\n    /**\n     * Initialize the node.\n     * @param {{}} [node] - The relationships node.\n     * @private\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_init\",\n    value: function _init(node) {\n      if (!node) node = {\n        name: \"Relationships\",\n        attributes: {\n          xmlns: \"http://schemas.openxmlformats.org/package/2006/relationships\"\n        },\n        children: []\n      };\n      this._node = node;\n    }\n  }]);\n  return Relationships;\n}();\nmodule.exports = Relationships;\n\n/*\nxl/_rels/workbook.xml.rels\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n    <Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\"/>\n    <Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\" Target=\"theme/theme1.xml\"/>\n    <Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet1.xml\"/>\n    <Relationship Id=\"rId5\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/calcChain\" Target=\"calcChain.xml\"/>\n    <Relationship Id=\"rId4\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\"/>\n</Relationships>\n*/","map":null,"metadata":{},"sourceType":"script"}