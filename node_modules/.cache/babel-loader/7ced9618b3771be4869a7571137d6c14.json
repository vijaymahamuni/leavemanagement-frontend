{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { composeFunctions, useClassNames } from '../utils';\nimport { setMonth, setYear } from '../utils/dateUtils';\nimport { useCalendarContext } from './CalendarContext';\nvar MonthDropdownItem = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    className = props.className,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'calendar-month-dropdown-cell' : _props$classPrefix,\n    active = props.active,\n    disabled = props.disabled,\n    _props$month = props.month,\n    month = _props$month === void 0 ? 0 : _props$month,\n    year = props.year,\n    rest = _objectWithoutPropertiesLoose(props, [\"as\", \"className\", \"classPrefix\", \"active\", \"disabled\", \"month\", \"year\"]);\n  var _useCalendarContext = useCalendarContext(),\n    date = _useCalendarContext.date,\n    onSelect = _useCalendarContext.onChangeMonth;\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      return;\n    }\n    if (year && month && date) {\n      var nextMonth = composeFunctions(function (d) {\n        return setYear(d, year);\n      }, function (d) {\n        return setMonth(d, month - 1);\n      })(date);\n      onSelect === null || onSelect === void 0 ? void 0 : onSelect(nextMonth, event);\n    }\n  }, [date, disabled, month, onSelect, year]);\n  var _useClassNames = useClassNames(classPrefix),\n    prefix = _useClassNames.prefix,\n    merge = _useClassNames.merge,\n    withClassPrefix = _useClassNames.withClassPrefix;\n  var classes = merge(className, withClassPrefix({\n    active: active\n  }), {\n    disabled: disabled\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes,\n    onClick: handleClick,\n    key: month,\n    tabIndex: -1\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix('content')\n  }, month));\n});\nMonthDropdownItem.displayName = 'MonthDropdownItem';\nMonthDropdownItem.propTypes = {\n  month: PropTypes.number,\n  year: PropTypes.number,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool\n};\nexport default MonthDropdownItem;","map":null,"metadata":{},"sourceType":"module"}