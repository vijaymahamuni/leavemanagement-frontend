{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Project\\\\Front_end\\\\src\\\\new_chat\\\\new_chatingroom.js\";\nimport React from \"react\";\nimport \"./newChat.css\";\nimport userImg from \"./Vijay_YNM.jpg\";\nimport VinuImg from \"./Vinu.jpg\";\nimport Tlogo from \"./Vijay_logo.jpg\";\nimport Jaya from \"./jayaprakash.jpeg\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport SendIcon from '@mui/icons-material/Send';\nimport classNames from \"classnames\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useEffect, useState } from 'react';\nimport firebase from 'firebase/compat/app';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport AddIcon from '@mui/icons-material/Add';\nimport 'firebase/compat/firestore';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { Link, Outlet, useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { v4 as uuidv4 } from 'uuid';\nfunction ChatingApp() {\n  var _this = this;\n  var Profileid = localStorage.getItem(\"proid\", Profileid);\n  var generatedID = uuidv4();\n  var ChatViewid = Profileid;\n  // let tosend_userid='10';\n\n  var Docu_ChatViewid;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setmessage = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    text = _useState4[0],\n    setText = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chatBlocklist = _useState6[0],\n    setChatblocklist = _useState6[1];\n  var timestamp = firebase.firestore.Timestamp.now();\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    chatblock = _useState8[0],\n    setChatblock = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    ticketChatList = _useState10[0],\n    setTicketChatList = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    sendTo_userid = _useState12[0],\n    setsendTo_userid = _useState12[1];\n  useEffect(function () {\n    // setsendTo_userid(tosend_userid)\n    axios.get(\"http://localhost:5000/Chating_employeelist\").then(function (res) {\n      var ticketChatList = res.data.data;\n      setTicketChatList(ticketChatList);\n    }).catch(function (error) {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  useEffect(function () {\n    if (ticketChatList.length > 0) {\n      setChatblock(ticketChatList);\n    }\n  }, [ticketChatList]);\n  // useEffect(() => {\n  //   if (newUserChatID) {\n  //     sendMessage();\n  //   }\n  // }, [newUserChatID]);\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    existingConversations = _useState14[0],\n    setExistingConversations = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    newUserChatID = _useState16[0],\n    setNewUserChatID = _useState16[1];\n  var sendMessage = function sendMessage() {\n    var db = firebase.firestore();\n    var collectionName = 'chats';\n    var subcollectionName = 'SubChat';\n    var data = {\n      text: text,\n      createdAt: timestamp,\n      from_uid: Profileid,\n      to_uid: sendmsgId\n    };\n    if (text.trim() !== '') {\n      // Use newUserChatID after it's set in the condition\n      db.collection(collectionName).doc(newUserChatID) // Use generatedID if newUserChatID is not set\n      .set(data).then(function () {\n        db.collection(collectionName).doc(newUserChatID) // Use generatedID if newUserChatID is not set\n        .collection(subcollectionName).add(data).then(function () {\n          // Message sent successfully\n        }).catch(function (error) {\n          // Handle error\n        });\n      }).catch(function (error) {\n        console.error('Error writing main document: ', error);\n      });\n      setText('');\n    }\n  };\n  var chatListItems = searchInput ? searchResults.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatItem\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\" + item.id,\n      className: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      onClick: function onClick() {\n        return chatblock_process(item.id, item.firstname);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, item.firstname)));\n  }) : chatblock.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatItem\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\" + item.id,\n      className: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      onClick: function onClick() {\n        return chatblock_process(item.id, item.firstname);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, item.firstname)));\n  });\n  var handleKeyPress = function handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  useEffect(function () {\n    var unsubscribe = firebase.firestore().collection('chats').doc('3ff2c5bb-f9b2-4834-baf3-d3d2fcbfa965').collection('SubChat').orderBy('createdAt').onSnapshot(function (snapshot) {\n      var messages = snapshot.docs.map(function (doc) {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n      setmessage(messages);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  var Profilename = localStorage.getItem(\"profileName\", Profilename);\n  var _useState17 = useState(ChatViewid),\n    _useState18 = _slicedToArray(_useState17, 2),\n    ticketid = _useState18[0],\n    setTicketid = _useState18[1];\n  var _useState19 = useState(Profilename),\n    _useState20 = _slicedToArray(_useState19, 2),\n    chatuser_name = _useState20[0],\n    setChatuser_name = _useState20[1];\n  var _useState21 = useState(Profileid),\n    _useState22 = _slicedToArray(_useState21, 2),\n    sendmsgId = _useState22[0],\n    setSendmsgId = _useState22[1];\n  var chatblock_process = function chatblock_process(id, firstname) {\n    Docu_ChatViewid = id;\n    ChatViewid = id;\n    setChatuser_name(firstname);\n    setActiveUser(id);\n    var convtStrId = id.toString();\n    setsendTo_userid(convtStrId);\n    setSendmsgId(convtStrId);\n    var duplicate_docid = ChatViewid.toString();\n    setTicketid(duplicate_docid);\n    // const unsubscribe = firebase.firestore().collection('chats').doc('3ff2c5bb-f9b2-4834-baf3-d3d2fcbfa965').collection('SubChat')\n    //     .orderBy('createdAt')\n    //     .onSnapshot(snapshot => {\n    //     const messages = snapshot.docs.map(doc => ({\n    //           id: doc.id,\n    //           ...doc.data(),\n    //         }));  \n    //       setmessage(messages);\n    //       });\n\n    //     return () => unsubscribe();\n    // const existingChat = existingConversations.find((chat) => chat.from_uid === Profileid && chat.id === newUserChatID);\n    // const existingChat = existingConversations.find((chat) =>  chat.from_uid === Profileid && chat.to_uid === sendmsgId);\n    var existingChat = existingConversations.find(function (chat) {\n      return chat.from_uid === Profileid && chat.to_uid === sendmsgId || chat.from_uid === sendmsgId && chat.to_uid === Profileid;\n    });\n    console.log(\"chat_fromid\", chat.from_uid), console.log(\"chatToui\", chat.to_uid);\n    if (existingChat) {\n      var existingChatID = existingChat.id;\n      setNewUserChatID(existingChatID);\n      console.log('Existing chat found. Chat ID:', existingChatID);\n    } else {\n      // Generate a new chat ID for the new user\n      var _generatedID = uuidv4();\n      setNewUserChatID(_generatedID);\n\n      // Store this new conversation in your state\n      setExistingConversations(function (prevConversations) {\n        return [].concat(_toConsumableArray(prevConversations), [{\n          Profileid: Profileid,\n          sendmsgId: sendmsgId,\n          chatID: _generatedID\n        }]);\n      });\n      console.log('Existing chat not found, generated new chat. Chat ID:', _generatedID);\n    }\n    var unsubscribe = firebase.firestore().collection('chats').orderBy('createdAt').get().then(function (querySnapshot) {\n      var allChats = [];\n      querySnapshot.forEach(function (doc) {\n        allChats.push(_objectSpread({\n          id: doc.id\n        }, doc.data()));\n      });\n      console.log(allChats);\n      setExistingConversations(allChats);\n      setmessage(allChats);\n    }).catch(function (error) {\n      console.error('Error getting documents: ', error);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  };\n  var prevDate = null;\n  var _useState23 = useState(''),\n    _useState24 = _slicedToArray(_useState23, 2),\n    searchInput = _useState24[0],\n    setSearchInput = _useState24[1];\n  var _useState25 = useState([]),\n    _useState26 = _slicedToArray(_useState25, 2),\n    searchResults = _useState26[0],\n    setSearchResults = _useState26[1];\n  var handleSearch = function handleSearch(query) {\n    setSearchInput(query);\n\n    // Perform search logic (e.g., filter chatblock based on the query)\n    var results = chatblock.filter(function (item) {\n      return item.firstname.toLowerCase().includes(query.toLowerCase());\n    });\n    setSearchResults(results);\n  };\n  var _useState27 = useState(null),\n    _useState28 = _slicedToArray(_useState27, 2),\n    activeUser = _useState28[0],\n    setActiveUser = _useState28[1];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatroom-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"backButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    className: \"backicon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, \"Chat\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search or start new chat\",\n    value: searchInput,\n    onChange: function onChange(e) {\n      return handleSearch(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SearchIcon, {\n    className: \"Search_icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, ticketChatList.filter(function (item) {\n    return item.firstname.toLowerCase().includes(searchInput.toLowerCase());\n  }).map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"chatItem\", {\n        active: item.id === activeUser\n      }),\n      key: index,\n      onClick: function onClick() {\n        return chatblock_process(item.id, item.firstname);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\".concat(item.id),\n      className: \"cover\",\n      alt: \"Profile of \".concat(item.firstname),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 19\n      }\n    }, item.firstname)));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://localhost:5000/images/\" + ticketid,\n    className: \"cover\",\n    alt: \"Chat User\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chatName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, chatuser_name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, \"Online\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMessages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMessages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, message.map(function (message, index) {\n    var messageDate = message.createdAt.toDate();\n    var formattedDate = messageDate.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n    var formattedTime = messageDate.toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n    var showDate = prevDate !== formattedDate;\n    prevDate = formattedDate;\n    var isSentByCurrentUser = message.from_uid === Profileid && message.to_uid === sendTo_userid;\n    var isReceivedByCurrentUser = message.from_uid === sendTo_userid && message.to_uid === Profileid;\n\n    //  8===8 && 10===10\n    if (isSentByCurrentUser || isReceivedByCurrentUser) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 9\n        }\n      }, showDate && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"messageDate\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 24\n        }\n      }, formattedDate), /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"message \".concat(isSentByCurrentUser ? 'sent' : 'received'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"chat_msgstl\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }\n      }, message.text)));\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onKeyDown: handleKeyPress,\n    onChange: function onChange(e) {\n      return setText(e.target.value);\n    },\n    placeholder: \"Type a message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SendIcon, {\n    className: \"sendIcon\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }))));\n}\nexport default ChatingApp;","map":{"version":3,"names":["React","userImg","VinuImg","Tlogo","Jaya","SearchIcon","SendIcon","classNames","ArrowBackIcon","useEffect","useState","firebase","Button","axios","AddIcon","Scrollbars","Link","Outlet","useNavigate","useParams","useLocation","v4","uuidv4","ChatingApp","_this","Profileid","localStorage","getItem","generatedID","ChatViewid","Docu_ChatViewid","_useState","_useState2","_slicedToArray","message","setmessage","_useState3","_useState4","text","setText","_useState5","_useState6","chatBlocklist","setChatblocklist","timestamp","firestore","Timestamp","now","_useState7","_useState8","chatblock","setChatblock","_useState9","_useState10","ticketChatList","setTicketChatList","_useState11","_useState12","sendTo_userid","setsendTo_userid","get","then","res","data","catch","error","console","length","_useState13","_useState14","existingConversations","setExistingConversations","_useState15","_useState16","newUserChatID","setNewUserChatID","sendMessage","db","collectionName","subcollectionName","createdAt","from_uid","to_uid","sendmsgId","trim","collection","doc","set","add","chatListItems","searchInput","searchResults","map","item","index","createElement","className","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","id","onClick","chatblock_process","firstname","handleKeyPress","event","unsubscribe","orderBy","onSnapshot","snapshot","messages","docs","_objectSpread","Profilename","_useState17","_useState18","ticketid","setTicketid","_useState19","_useState20","chatuser_name","setChatuser_name","_useState21","_useState22","setSendmsgId","setActiveUser","convtStrId","toString","duplicate_docid","existingChat","find","chat","log","existingChatID","prevConversations","concat","_toConsumableArray","chatID","querySnapshot","allChats","forEach","push","prevDate","_useState23","_useState24","setSearchInput","_useState25","_useState26","setSearchResults","handleSearch","query","results","filter","toLowerCase","includes","_useState27","_useState28","activeUser","type","placeholder","value","onChange","e","target","active","alt","messageDate","toDate","formattedDate","toLocaleDateString","year","month","day","formattedTime","toLocaleTimeString","hour","minute","showDate","isSentByCurrentUser","isReceivedByCurrentUser","Fragment","onKeyDown"],"sources":["C:/Project/Front_end/src/new_chat/new_chatingroom.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./newChat.css\";\r\nimport userImg from \"./Vijay_YNM.jpg\";\r\nimport VinuImg from \"./Vinu.jpg\";\r\nimport Tlogo from \"./Vijay_logo.jpg\";\r\nimport Jaya from \"./jayaprakash.jpeg\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport classNames from \"classnames\"; \r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { useEffect, useState } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from \"axios\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport 'firebase/compat/firestore';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { Link, Outlet, useNavigate, useParams,useLocation } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nfunction ChatingApp(){\r\n  let Profileid=localStorage.getItem(\"proid\",Profileid)\r\n  const generatedID = uuidv4();\r\n  var ChatViewid=Profileid;\r\n  // let tosend_userid='10';\r\n  \r\n  var Docu_ChatViewid;\r\n\r\n  const[message,setmessage]=useState([])\r\n  const [text, setText] = useState('');\r\n  const [chatBlocklist,setChatblocklist]=useState([])\r\n  const timestamp = firebase.firestore.Timestamp.now();\r\n  const [chatblock, setChatblock] = useState([]);\r\n  const [ticketChatList, setTicketChatList] = useState([]);\r\n  const [sendTo_userid, setsendTo_userid] = useState('');\r\n  useEffect(() => {\r\n    // setsendTo_userid(tosend_userid)\r\n    axios.get(`http://localhost:5000/Chating_employeelist`)\r\n      .then((res) => {\r\n        const ticketChatList = res.data.data;\r\n        setTicketChatList(ticketChatList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, []); \r\n  \r\n  useEffect(() => {\r\n  if (ticketChatList.length > 0) {\r\n      setChatblock(ticketChatList);\r\n    }\r\n  }, [ticketChatList]);\r\n  // useEffect(() => {\r\n  //   if (newUserChatID) {\r\n  //     sendMessage();\r\n  //   }\r\n  // }, [newUserChatID]);\r\n  const [existingConversations, setExistingConversations] = useState([]);\r\n  const [newUserChatID, setNewUserChatID] = useState(null);\r\n  const sendMessage = () => {\r\n    const db = firebase.firestore();\r\n    const collectionName = 'chats';\r\n    const subcollectionName = 'SubChat';\r\n    const data = {\r\n      text,\r\n      createdAt: timestamp,\r\n      from_uid: Profileid,\r\n      to_uid: sendmsgId,\r\n    };\r\n  \r\n\r\n\r\n\r\n  \r\n    if (text.trim() !== '') {\r\n      // Use newUserChatID after it's set in the condition\r\n      db.collection(collectionName)\r\n        .doc(newUserChatID) // Use generatedID if newUserChatID is not set\r\n        .set(data)\r\n        .then(() => {\r\n          db.collection(collectionName)\r\n            .doc(newUserChatID) // Use generatedID if newUserChatID is not set\r\n            .collection(subcollectionName)\r\n            .add(data)\r\n            .then(() => {\r\n              // Message sent successfully\r\n            })\r\n            .catch((error) => {\r\n              // Handle error\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error writing main document: ', error);\r\n        });\r\n      setText('');\r\n    }\r\n  };\r\n  \r\n\r\n\r\nconst chatListItems = searchInput\r\n  ? searchResults.map((item, index) => (\r\n    <div className=\"chatItem\" key={index}>\r\n    <div className=\"imgbx\">\r\n      <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\r\n    </div>\r\n    <div className=\"chatInfo\">\r\n      <p className=\"chatName\" onClick={()=>chatblock_process(item.id,item.firstname)}>{item.firstname}</p>\r\n    </div>\r\n  </div>\r\n  \r\n    )): chatblock.map((item, index) => (\r\n    <div className=\"chatItem\" key={index}>\r\n    <div className=\"imgbx\">\r\n      <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\r\n    </div>\r\n    <div className=\"chatInfo\">\r\n      <p className=\"chatName\" onClick={()=>chatblock_process(item.id,item.firstname)}>{item.firstname}</p>\r\n      </div>\r\n  </div>\r\n    ));\r\nconst handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\nuseEffect(() => {\r\n  const unsubscribe = firebase.firestore().collection('chats').doc('3ff2c5bb-f9b2-4834-baf3-d3d2fcbfa965').collection('SubChat')\r\n      .orderBy('createdAt')\r\n      .onSnapshot(snapshot => {\r\n        const messages = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setmessage(messages);\r\n      });\r\n  \r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n\r\nlet Profilename=localStorage.getItem(\"profileName\",Profilename);\r\n\r\nconst [ticketid, setTicketid] = useState(ChatViewid);\r\nconst [chatuser_name,setChatuser_name] = useState(Profilename);\r\nconst [sendmsgId,setSendmsgId ] = useState(Profileid);\r\n\r\nconst chatblock_process=(id,firstname)=>{\r\n  Docu_ChatViewid=id\r\n  ChatViewid=id;\r\n  \r\n  setChatuser_name(firstname)\r\n  setActiveUser(id);\r\n  const convtStrId=id.toString();\r\n  setsendTo_userid(convtStrId)\r\n  setSendmsgId(convtStrId)\r\n  const duplicate_docid = ChatViewid.toString();\r\n  setTicketid(duplicate_docid)\r\n  // const unsubscribe = firebase.firestore().collection('chats').doc('3ff2c5bb-f9b2-4834-baf3-d3d2fcbfa965').collection('SubChat')\r\n  //     .orderBy('createdAt')\r\n  //     .onSnapshot(snapshot => {\r\n  //     const messages = snapshot.docs.map(doc => ({\r\n  //           id: doc.id,\r\n  //           ...doc.data(),\r\n  //         }));  \r\n  //       setmessage(messages);\r\n  //       });\r\n    \r\n  //     return () => unsubscribe();\r\n  // const existingChat = existingConversations.find((chat) => chat.from_uid === Profileid && chat.id === newUserChatID);\r\n  // const existingChat = existingConversations.find((chat) =>  chat.from_uid === Profileid && chat.to_uid === sendmsgId);\r\n  const existingChat = existingConversations.find((chat) => (\r\n\r\n    (chat.from_uid === Profileid && chat.to_uid === sendmsgId) || (chat.from_uid === sendmsgId && chat.to_uid === Profileid)\r\n  ));\r\n  console.log(\"chat_fromid\",chat.from_uid),\r\n  console.log(\"chatToui\",chat.to_uid)\r\n\r\n  \r\n  if (existingChat) {\r\n    \r\n\r\n    const existingChatID = existingChat.id;\r\n    setNewUserChatID(existingChatID);\r\n    console.log('Existing chat found. Chat ID:', existingChatID);\r\n  } else {\r\n    // Generate a new chat ID for the new user\r\n    const generatedID = uuidv4();\r\n    setNewUserChatID(generatedID);\r\n\r\n    // Store this new conversation in your state\r\n    setExistingConversations((prevConversations) => [\r\n      ...prevConversations,\r\n      { Profileid,sendmsgId, chatID: generatedID },\r\n    ]);\r\n    console.log('Existing chat not found, generated new chat. Chat ID:', generatedID);\r\n  }\r\n  \r\n  const unsubscribe =firebase.firestore().collection('chats')\r\n      .orderBy('createdAt')\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const allChats = [];\r\n        querySnapshot.forEach((doc) => {\r\n          allChats.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        console.log(allChats);\r\n        setExistingConversations(allChats)\r\n        setmessage(allChats);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error getting documents: ', error);\r\n      });\r\n    \r\n        \r\n          return () => unsubscribe();\r\n    \r\n    }\r\nlet prevDate = null;  \r\nconst [searchInput, setSearchInput] = useState('');\r\nconst [searchResults, setSearchResults] = useState([]);\r\nconst handleSearch = (query) => {\r\n  setSearchInput(query);\r\n\r\n  // Perform search logic (e.g., filter chatblock based on the query)\r\n  const results = chatblock.filter((item) =>\r\n    item.firstname.toLowerCase().includes(query.toLowerCase())\r\n  );\r\n  setSearchResults(results);\r\n};\r\n\r\nconst [activeUser, setActiveUser] = useState(null);\r\n\r\n  return(\r\n    <div className=\"chatroom-container\">\r\n          <div className=\"left-side\">\r\n          <div className=\"header\">\r\n         \r\n          <div className=\"backButton\">\r\n          <ArrowBackIcon className=\"backicon\" />\r\n          <div className=\"chat_heading\">\r\n            <p>Chat</p>\r\n            </div>\r\n        </div>\r\n            <div className=\"userImage\">\r\n              {/* <img src={userImg} className='profile_chatheader'/> */}\r\n            </div>\r\n\r\n          </div>\r\n\r\n      \r\n          <div className=\"search-chat\">\r\n            <div>\r\n              <input\r\n      type=\"text\"\r\n      placeholder=\"Search or start new chat\"\r\n      value={searchInput}\r\n      onChange={(e) => handleSearch(e.target.value)}\r\n    />\r\n              <SearchIcon className=\"Search_icon\"/>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n\r\n          <div className=\"chatList\">\r\n          {ticketChatList\r\n            .filter(item =>\r\n              item.firstname.toLowerCase().includes(searchInput.toLowerCase())\r\n            )\r\n            .map((item, index) => (\r\n                   <div\r\n      className={classNames(\"chatItem\", { active: item.id === activeUser })}\r\n      key={index}\r\n      onClick={() => chatblock_process(item.id, item.firstname)}\r\n    >\r\n                <div className=\"imgbx\">\r\n                  <img src={`http://localhost:5000/images/${item.id}`} className=\"cover\" alt={`Profile of ${item.firstname}`} />\r\n                </div>\r\n                <div className=\"chatInfo\">\r\n                  <p className=\"chatName\" >{item.firstname}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"right-side\">\r\n          <div className=\"chatHeader\">\r\n          <div className=\"userImage\">\r\n            <img src={\"http://localhost:5000/images/\"+ ticketid}  className=\"cover\" alt=\"Chat User\" />\r\n          </div>\r\n          <div className=\"userInfo\">\r\n            <p className=\"chatName\">{chatuser_name}</p>\r\n            <p className=\"status\">Online</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"chatMessages\">\r\n\r\n\r\n        <div className=\"chatMessages\">\r\n  {message.map((message, index) => {\r\n    const messageDate = message.createdAt.toDate();\r\n    const formattedDate = messageDate.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n    });\r\n    const formattedTime = messageDate.toLocaleTimeString('en-US', {\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n    });\r\n\r\n    const showDate = prevDate !== formattedDate;\r\n    prevDate = formattedDate;\r\n\r\n    \r\n\r\n    const isSentByCurrentUser = message.from_uid === Profileid && message.to_uid === sendTo_userid;\r\n    const isReceivedByCurrentUser = message.from_uid === sendTo_userid && message.to_uid === Profileid;\r\n \r\n\r\n\r\n     //  8===8 && 10===10\r\n    if (isSentByCurrentUser || isReceivedByCurrentUser) {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          {showDate && <div className=\"messageDate\">{formattedDate}</div>}\r\n          <div\r\n            key={index}\r\n            className={`message ${isSentByCurrentUser ? 'sent' : 'received'}`}\r\n          >\r\n            <p className=\"chat_msgstl\">{message.text}</p>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  })}\r\n</div>\r\n\r\n</div>\r\n\r\n        \r\n<div className=\"messageInput\">\r\n          <input type=\"text\"  value={text} onKeyDown={handleKeyPress} onChange={e => setText(e.target.value)} placeholder=\"Type a message...\" />\r\n          <SendIcon className=\"sendIcon\"  onClick={sendMessage} />\r\n</div>\r\n</div>\r\n</div>\r\n  )\r\n}\r\nexport default ChatingApp;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}