{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from '../utils';\nimport Checkbox from '../Checkbox';\nvar DropdownMenuCheckItem = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$active = props.active,\n    active = _props$active === void 0 ? false : _props$active,\n    _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$checkboxAs = props.checkboxAs,\n    CheckboxItem = _props$checkboxAs === void 0 ? Checkbox : _props$checkboxAs,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'check-item' : _props$classPrefix,\n    _props$checkable = props.checkable,\n    checkable = _props$checkable === void 0 ? true : _props$checkable,\n    disabled = props.disabled,\n    value = props.value,\n    focus = props.focus,\n    children = props.children,\n    className = props.className,\n    indeterminate = props.indeterminate,\n    onKeyDown = props.onKeyDown,\n    onSelect = props.onSelect,\n    onCheck = props.onCheck,\n    onSelectItem = props.onSelectItem,\n    rest = _objectWithoutPropertiesLoose(props, [\"active\", \"as\", \"checkboxAs\", \"classPrefix\", \"checkable\", \"disabled\", \"value\", \"focus\", \"children\", \"className\", \"indeterminate\", \"onKeyDown\", \"onSelect\", \"onCheck\", \"onSelectItem\"]);\n  var handleChange = useCallback(function (value, checked, event) {\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(value, event, checked);\n  }, [onSelect]);\n  var handleCheck = useCallback(function (event) {\n    if (!disabled) {\n      onCheck === null || onCheck === void 0 ? void 0 : onCheck(value, event, !active);\n    }\n  }, [value, disabled, onCheck, active]);\n  var handleSelectItem = useCallback(function (event) {\n    if (!disabled) {\n      onSelectItem === null || onSelectItem === void 0 ? void 0 : onSelectItem(value, event, !active);\n    }\n  }, [value, disabled, onSelectItem, active]);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix;\n  var checkboxItemClasses = withClassPrefix({\n    focus: focus\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"option\",\n    \"aria-selected\": active,\n    \"aria-disabled\": disabled,\n    \"data-key\": value\n  }, rest, {\n    ref: ref,\n    className: className,\n    tabIndex: -1\n  }), /*#__PURE__*/React.createElement(CheckboxItem, {\n    value: value,\n    role: \"checkbox\",\n    disabled: disabled,\n    checked: active,\n    checkable: checkable,\n    indeterminate: indeterminate,\n    className: checkboxItemClasses,\n    onKeyDown: disabled ? null : onKeyDown,\n    onChange: handleChange,\n    onClick: handleSelectItem,\n    onCheckboxClick: handleCheck\n  }, children));\n});\nDropdownMenuCheckItem.displayName = 'DropdownMenuCheckItem';\nDropdownMenuCheckItem.propTypes = {\n  classPrefix: PropTypes.string,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  checkable: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  value: PropTypes.any,\n  onSelect: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelectItem: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  focus: PropTypes.bool,\n  title: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  as: PropTypes.elementType,\n  checkboxAs: PropTypes.elementType\n};\nexport default DropdownMenuCheckItem;","map":null,"metadata":{},"sourceType":"module"}