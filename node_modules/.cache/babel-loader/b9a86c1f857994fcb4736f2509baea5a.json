{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from '../utils';\nvar DropdownMenuItem = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    active = props.active,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'dropdown-menu-item' : _props$classPrefix,\n    children = props.children,\n    className = props.className,\n    disabled = props.disabled,\n    focus = props.focus,\n    value = props.value,\n    onKeyDown = props.onKeyDown,\n    onSelect = props.onSelect,\n    renderItem = props.renderItem,\n    rest = _objectWithoutPropertiesLoose(props, [\"as\", \"active\", \"classPrefix\", \"children\", \"className\", \"disabled\", \"focus\", \"value\", \"onKeyDown\", \"onSelect\", \"renderItem\"]);\n  var handleClick = useCallback(function (event) {\n    event.preventDefault();\n    if (!disabled) {\n      onSelect === null || onSelect === void 0 ? void 0 : onSelect(value, event);\n    }\n  }, [onSelect, disabled, value]);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix;\n  var classes = withClassPrefix({\n    active: active,\n    focus: focus,\n    disabled: disabled\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"option\",\n    \"aria-selected\": active,\n    \"aria-disabled\": disabled,\n    \"data-key\": value\n  }, rest, {\n    ref: ref,\n    className: className,\n    tabIndex: -1,\n    onKeyDown: disabled ? null : onKeyDown,\n    onClick: handleClick\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes\n  }, renderItem ? renderItem(value) : children));\n});\nDropdownMenuItem.displayName = 'DropdownMenuItem';\nDropdownMenuItem.propTypes = {\n  classPrefix: PropTypes.string,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  value: PropTypes.any,\n  onSelect: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  focus: PropTypes.bool,\n  title: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  as: PropTypes.elementType\n};\nexport default DropdownMenuItem;","map":null,"metadata":{},"sourceType":"module"}