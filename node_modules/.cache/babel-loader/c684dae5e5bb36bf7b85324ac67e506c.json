{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { PLACEMENT } from '../utils';\nimport { animationPropTypes } from '../Animation/utils';\nexport var pickerPropTypes = _extends({}, animationPropTypes, {\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  locale: PropTypes.any,\n  appearance: PropTypes.oneOf(['default', 'subtle']),\n  block: PropTypes.bool,\n  containerPadding: PropTypes.number,\n  container: PropTypes.oneOfType([PropTypes.any, PropTypes.func]),\n  disabled: PropTypes.bool,\n  // PropTypes.elementType conflictin with React.ElementType\n  // toggleAs: PropTypes.elementType,\n  menuClassName: PropTypes.string,\n  menuStyle: PropTypes.object,\n  placeholder: PropTypes.node,\n  placement: PropTypes.oneOf(PLACEMENT),\n  /**\n   * Prevent floating element overflow\n   */\n  preventOverflow: PropTypes.bool,\n  open: PropTypes.bool,\n  defaultOpen: PropTypes.bool,\n  cleanable: PropTypes.bool,\n  renderExtraFooter: PropTypes.func,\n  renderValue: PropTypes.func,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  onClean: PropTypes.func,\n  listProps: PropTypes.any\n});\nexport var listPickerPropTypes = _extends({}, pickerPropTypes, {\n  data: PropTypes.array.isRequired,\n  valueKey: PropTypes.string,\n  labelKey: PropTypes.string,\n  childrenKey: PropTypes.string,\n  disabledItemValues: PropTypes.array,\n  value: PropTypes.any,\n  defaultValue: PropTypes.any,\n  onChange: PropTypes.func\n});","map":null,"metadata":{},"sourceType":"module"}