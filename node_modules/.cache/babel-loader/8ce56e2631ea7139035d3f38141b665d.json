{"ast":null,"code":"import _objectSpread from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Project\\\\Front_end\\\\src\\\\new_chat\\\\new_chatingroom.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nimport React from \"react\";\nimport \"./newChat.css\";\nimport userImg from \"./Vijay_YNM.jpg\";\nimport VinuImg from \"./Vinu.jpg\";\nimport Tlogo from \"./Vijay_logo.jpg\";\nimport Jaya from \"./jayaprakash.jpeg\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport SendIcon from '@mui/icons-material/Send';\nimport classNames from \"classnames\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useEffect, useState } from 'react';\nimport firebase from 'firebase/compat/app';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport AddIcon from '@mui/icons-material/Add';\nimport 'firebase/compat/firestore';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { Link, Outlet, useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { v4 as uuidv4 } from 'uuid';\nimport defaultchatRoomimg from \"./default_chtappimg2.png\";\nimport Tigmalog from \"./TigmaVj.jpg\";\nimport DotButton from \"./DotButton \";\nimport { db, auth, storage } from \"../firebase\";\nimport { collection, query, where, onSnapshot, addDoc, Timestamp, orderBy, setDoc, doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport Attachment from \"./svg/Attachment\";\nfunction ChatingApp() {\n  var _this = this;\n  var Profileid = sessionStorage.getItem(\"proid\", Profileid);\n  var generatedID = uuidv4();\n  var ChatViewid = Profileid;\n  // let tosend_userid='10';\n\n  var Docu_ChatViewid;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setmessage = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    text = _useState4[0],\n    setText = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chatBlocklist = _useState6[0],\n    setChatblocklist = _useState6[1];\n  var timestamp = firebase.firestore.Timestamp.now();\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    chatblock = _useState8[0],\n    setChatblock = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    ticketChatList = _useState10[0],\n    setTicketChatList = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    sendTo_userid = _useState12[0],\n    setsendTo_userid = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    default_loading = _useState14[0],\n    setdefault_loading = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    now_activeuser = _useState16[0],\n    setNow_activeuser = _useState16[1];\n  useEffect(function () {\n    // setsendTo_userid(tosend_userid)\n    var activeStatus = 'Active';\n    var currentlyActive_user = sessionStorage.getItem('proid');\n    axios.get(\"http://localhost:5000/Chating_employeelist\").then(function (res) {\n      var ticketChatList = res.data.data;\n      console.log(\"Active status user:\", ticketChatList);\n      setTicketChatList(ticketChatList);\n    }).catch(function (error) {\n      console.error(\"Error fetching data:\", error);\n    });\n    // axios.put(`http://localhost:5000/chatActive_update/${Profileid}/${activeStatus}` )\n  }, []);\n  useEffect(function () {\n    if (ticketChatList.length > 0) {\n      setChatblock(ticketChatList);\n    }\n  }, [ticketChatList]);\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    existingConversations = _useState18[0],\n    setExistingConversations = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    newUserChatID = _useState20[0],\n    setNewUserChatID = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    isActive = _useState22[0],\n    setIsActive = _useState22[1];\n  var _useState23 = useState([]),\n    _useState24 = _slicedToArray(_useState23, 2),\n    users = _useState24[0],\n    setUsers = _useState24[1]; // const user1 = auth.currentUser.uid;\n  useEffect(function () {\n    var usersRef = collection(db, \"users\");\n    // create query object\n    var q = query(usersRef);\n    // execute query\n    var unsub = onSnapshot(q, function (querySnapshot) {\n      var users = [];\n      querySnapshot.forEach(function (doc) {\n        users.push(doc.data());\n      });\n      setUsers(users);\n    });\n    return function () {\n      return unsub();\n    };\n  }, []);\n  console.log(users);\n  var sendMessage = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var user2, user1, id;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            user2 = chat.uid;\n            user1 = auth.currentUser.uid;\n            id = user1 > user2 ? \"\".concat(user1 + user2) : \"\".concat(user2 + user1);\n            _context.next = 5;\n            return addDoc(collection(db, \"messages\", id, \"chat\"), {\n              text: text,\n              from: user1,\n              to: user2,\n              createdAt: Timestamp.fromDate(new Date())\n            });\n          case 5:\n            // const db = firebase.firestore();\n            // const collectionName = 'chats';\n            // const subcollectionName = 'SubChat';\n            // const data = {\n            //   text,\n            //   createdAt: timestamp,\n            //   from_uid: Profileid,\n            //   to_uid: sendmsgId,\n            // };\n\n            // if (text.trim() !== '') {\n            //   // Use newUserChatID after it's set in the condition\n            //   const mainDocRef = db.collection(collectionName).doc(newUserChatID);\n\n            //   mainDocRef\n            //     .set(data)\n            //     .then(() => {\n            //       // Once the main document is successfully updated, add the message to the subcollection\n            //       mainDocRef\n            //         .collection(subcollectionName)\n            //         .add(data)\n            //         .then(() => {\n            //           // Message sent successfully\n            //         })\n            //         .catch((error) => {\n            //           // Handle error\n            //         });\n            //     })\n            //     .catch((error) => {\n            //       console.error('Error writing main document: ', error);\n            //     });\n\n            setText('');\n\n            //   // To immediately update the message state, you can manually add the sent message to the message state.\n            //   setmessage((prevMessages) => [...prevMessages, data]);\n            // }\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function sendMessage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var chatListItems = searchInput ? searchResults.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatItem\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\" + item.id,\n      className: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      onClick: function onClick() {\n        return selectUserchat(item.id, item.firstname);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }, item.firstname)));\n  }) : chatblock.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatItem\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/\" + item.id,\n      className: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      onClick: function onClick() {\n        return selectUserchat(item.id, item.firstname);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }, item.firstname)));\n  });\n  var handleKeyPress = function handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  var _useState25 = useState([]),\n    _useState26 = _slicedToArray(_useState25, 2),\n    selectedChatMessages = _useState26[0],\n    setSelectedChatMessages = _useState26[1];\n  useEffect(function () {\n    var unsubscribe = firebase.firestore().collection('chats').orderBy('createdAt').get().then(function (querySnapshot) {\n      var allChats = [];\n      querySnapshot.forEach(function (doc) {\n        allChats.push(_objectSpread({\n          id: doc.id\n        }, doc.data()));\n      });\n      setmessage(allChats);\n      setExistingConversations(allChats);\n    }).catch(function (error) {\n      console.error('Error getting documents: ', error);\n    });\n  }, []);\n  var Profilename = sessionStorage.getItem(\"profileName\", Profilename);\n  var _useState27 = useState(ChatViewid),\n    _useState28 = _slicedToArray(_useState27, 2),\n    ticketid = _useState28[0],\n    setTicketid = _useState28[1];\n  var _useState29 = useState(Profilename),\n    _useState30 = _slicedToArray(_useState29, 2),\n    chatuser_name = _useState30[0],\n    setChatuser_name = _useState30[1];\n  var _useState31 = useState(''),\n    _useState32 = _slicedToArray(_useState31, 2),\n    sendmsgId = _useState32[0],\n    setSendmsgId = _useState32[1];\n  var _useState33 = useState(),\n    _useState34 = _slicedToArray(_useState33, 2),\n    chat_active = _useState34[0],\n    setChatactive = _useState34[1];\n  var _useState35 = useState(''),\n    _useState36 = _slicedToArray(_useState35, 2),\n    chat = _useState36[0],\n    setChat = _useState36[1];\n  var selectUserchat = function selectUserchat(item) {\n    console.log(\"select users\", item);\n    setChat(item);\n    // Update state variables directly\n    setdefault_loading(true);\n    setChatuser_name(item.newfirstname);\n    // setActiveUser(id);\n    // setChatactive(chatActive)\n    // const convtStrId = id.toString();\n    // setSendmsgId(convtStrId);\n\n    // const existingChat = existingConversations.find(\n    //   (chat) =>\n    //     (chat.from_uid === Profileid && chat.to_uid === convtStrId) ||\n    //     (chat.from_uid === convtStrId && chat.to_uid === Profileid)\n    // );\n\n    // // Initialize newUserChatID with the existing chat ID or a new one\n    // const newUserChatID = existingChat ? existingChat.id : uuidv4();\n    // setNewUserChatID(newUserChatID);\n\n    // setsendTo_userid(convtStrId);\n\n    // const duplicate_docid = id.toString();\n    // setTicketid(duplicate_docid);\n\n    // // Fetch and display messages for the selected chat\n    // fetchMessagesForChat(newUserChatID);\n  };\n\n  var fetchMessagesForChat = function fetchMessagesForChat(chatID) {\n    var unsubscribe = firebase.firestore().collection('chats').doc(chatID).collection('SubChat').orderBy('createdAt').onSnapshot(function (snapshot) {\n      var messages = snapshot.docs.map(function (doc) {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n      setmessage(messages);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  };\n  var prevDate = null;\n  var _useState37 = useState(''),\n    _useState38 = _slicedToArray(_useState37, 2),\n    searchInput = _useState38[0],\n    setSearchInput = _useState38[1];\n  var _useState39 = useState([]),\n    _useState40 = _slicedToArray(_useState39, 2),\n    searchResults = _useState40[0],\n    setSearchResults = _useState40[1];\n  var handleSearch = function handleSearch(query) {\n    setSearchInput(query);\n\n    // Perform search logic (e.g., filter chatblock based on the query)\n    var results = chatblock.filter(function (item) {\n      return item.firstname.toLowerCase().includes(query.toLowerCase());\n    });\n    setSearchResults(results);\n  };\n  var _useState41 = useState(null),\n    _useState42 = _slicedToArray(_useState41, 2),\n    activeUser = _useState42[0],\n    setActiveUser = _useState42[1];\n  function formatDate(formattedDate) {}\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatroom-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"backButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    className: \"backicon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, \"Chat\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search or start new chat\",\n    value: searchInput,\n    onChange: function onChange(e) {\n      return handleSearch(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SearchIcon, {\n    className: \"Search_icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, users\n  // .filter(item =>\n  //   item.firstname.toLowerCase().includes(searchInput.toLowerCase())\n  // )\n  .map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"chatItem\", {\n        active: item.id === activeUser\n      }),\n      key: index,\n      onClick: function onClick() {\n        return selectUserchat(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgbx\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:5000/images/10\",\n      className: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chatName\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 19\n      }\n    }, item.newfirstname)), /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"activeDot\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }, item.isOnline === true ? /*#__PURE__*/React.createElement(DotButton, {\n      active: isActive,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 38\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n  }))), default_loading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://localhost:5000/images/10\",\n    className: \"cover\",\n    alt: \"Chat User\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chatName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }\n  }, chatuser_name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, \"Online\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMessages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }\n  }, message.map(function (message, index) {\n    var messageDate = message.createdAt.toDate();\n    var formattedDate = messageDate.toLocaleDateString('en-US', {\n      year: 'numeric',\n      day: '2-digit',\n      month: '2-digit'\n    });\n    var date1 = new Date(formattedDate);\n    var today = new Date();\n    var formatDate = function formatDate(date) {\n      var month = (date.getMonth() + 1).toString().padStart(2, '0');\n      var day = date.getDate().toString().padStart(2, '0');\n      var year = date.getFullYear();\n      return \"\".concat(month, \"/\").concat(day, \"/\").concat(year);\n    };\n    var getDayName = function getDayName(date) {\n      var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      return dayNames[date.getDay()];\n    };\n    // const formattedDate1 = formatDate(date1);\n    // const formattedDate2 = formatDate(today);\n    var comparisonResult;\n    var oneWeekAgo = new Date();\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n    if (date1 >= oneWeekAgo) {\n      var _today = new Date();\n      _today.setHours(0, 0, 0, 0);\n      if (date1.toDateString() === _today.toDateString()) {\n        comparisonResult = 'Today';\n      } else {\n        var dayName = getDayName(date1);\n        var _formattedDate = formatDate(date1);\n        comparisonResult = \"\".concat(dayName);\n      }\n    } else {\n      comparisonResult = \"\".concat(formattedDate);\n    }\n    console.log(\"Changed date format for demo printed\", comparisonResult);\n    var formattedTime = messageDate.toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n    var lowercaseTime = formattedTime.replace(/\\s/g, '').toLowerCase();\n    var showDate = prevDate !== formattedDate;\n    prevDate = formattedDate;\n    var isSentByCurrentUser = message.from_uid === Profileid && message.to_uid === sendTo_userid;\n    var isReceivedByCurrentUser = message.from_uid === sendTo_userid && message.to_uid === Profileid;\n\n    //  8===8 && 10===10\n    if (isSentByCurrentUser || isReceivedByCurrentUser) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 9\n        }\n      }, showDate && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"messageDate_show\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 24\n        }\n      }, comparisonResult), /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"message \".concat(isSentByCurrentUser ? 'sent' : 'received'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"chat_msgstl\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 2\n        }\n      }, message.text, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"chating_time\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 7\n        }\n      }, lowercaseTime))));\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onKeyDown: handleKeyPress,\n    onChange: function onChange(e) {\n      return setText(e.target.value);\n    },\n    placeholder: \"Type a message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SendIcon, {\n    className: \"sendIcon\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 11\n    }\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatRoom_loadingimg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: defaultchatRoomimg,\n    className: \"imgdeafult-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"company-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 5\n    }\n  }, \"Welcome to Tigma Technology Chat\")))));\n}\nexport default ChatingApp;","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","React","userImg","VinuImg","Tlogo","Jaya","SearchIcon","SendIcon","classNames","ArrowBackIcon","useEffect","useState","firebase","Button","axios","AddIcon","Scrollbars","Link","Outlet","useNavigate","useParams","useLocation","v4","uuidv4","defaultchatRoomimg","Tigmalog","DotButton","db","auth","storage","collection","query","where","onSnapshot","addDoc","Timestamp","orderBy","setDoc","doc","getDoc","updateDoc","Attachment","ChatingApp","_this","Profileid","sessionStorage","getItem","generatedID","ChatViewid","Docu_ChatViewid","_useState","_useState2","_slicedToArray","message","setmessage","_useState3","_useState4","text","setText","_useState5","_useState6","chatBlocklist","setChatblocklist","timestamp","firestore","now","_useState7","_useState8","chatblock","setChatblock","_useState9","_useState10","ticketChatList","setTicketChatList","_useState11","_useState12","sendTo_userid","setsendTo_userid","_useState13","_useState14","default_loading","setdefault_loading","_useState15","_useState16","now_activeuser","setNow_activeuser","activeStatus","currentlyActive_user","get","res","data","console","log","error","_useState17","_useState18","existingConversations","setExistingConversations","_useState19","_useState20","newUserChatID","setNewUserChatID","_useState21","_useState22","isActive","setIsActive","_useState23","_useState24","users","setUsers","usersRef","q","unsub","querySnapshot","sendMessage","_ref","_asyncToGenerator","_callee","user2","user1","id","_callee$","_context","chat","uid","currentUser","concat","from","to","createdAt","fromDate","Date","apply","arguments","chatListItems","searchInput","searchResults","map","item","index","createElement","className","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","onClick","selectUserchat","firstname","handleKeyPress","event","_useState25","_useState26","selectedChatMessages","setSelectedChatMessages","unsubscribe","allChats","_objectSpread","Profilename","_useState27","_useState28","ticketid","setTicketid","_useState29","_useState30","chatuser_name","setChatuser_name","_useState31","_useState32","sendmsgId","setSendmsgId","_useState33","_useState34","chat_active","setChatactive","_useState35","_useState36","setChat","newfirstname","fetchMessagesForChat","chatID","snapshot","messages","docs","prevDate","_useState37","_useState38","setSearchInput","_useState39","_useState40","setSearchResults","handleSearch","results","filter","toLowerCase","includes","_useState41","_useState42","activeUser","setActiveUser","formatDate","formattedDate","placeholder","onChange","target","active","isOnline","Fragment","alt","messageDate","toDate","toLocaleDateString","year","day","month","date1","today","date","getMonth","toString","padStart","getDate","getFullYear","getDayName","dayNames","getDay","comparisonResult","oneWeekAgo","setDate","setHours","toDateString","dayName","formattedTime","toLocaleTimeString","hour","minute","lowercaseTime","replace","showDate","isSentByCurrentUser","from_uid","to_uid","isReceivedByCurrentUser","onKeyDown","class"],"sources":["C:/Project/Front_end/src/new_chat/new_chatingroom.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./newChat.css\";\r\nimport userImg from \"./Vijay_YNM.jpg\";\r\nimport VinuImg from \"./Vinu.jpg\";\r\nimport Tlogo from \"./Vijay_logo.jpg\";\r\nimport Jaya from \"./jayaprakash.jpeg\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport classNames from \"classnames\"; \r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { useEffect, useState } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from \"axios\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport 'firebase/compat/firestore';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { Link, Outlet, useNavigate, useParams,useLocation } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport defaultchatRoomimg from \"./default_chtappimg2.png\";\r\nimport Tigmalog from \"./TigmaVj.jpg\";\r\nimport DotButton from \"./DotButton \";\r\nimport { db, auth, storage } from \"../firebase\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  onSnapshot,\r\n  addDoc,\r\n  Timestamp,\r\n  orderBy,\r\n  setDoc,\r\n  doc,\r\n  getDoc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport Attachment from \"./svg/Attachment\";\r\n\r\nfunction ChatingApp(){\r\n  let Profileid=sessionStorage.getItem(\"proid\",Profileid)\r\n  const generatedID = uuidv4();\r\n  var ChatViewid=Profileid;\r\n  // let tosend_userid='10';\r\n  \r\n  var Docu_ChatViewid;\r\n\r\n  const[message,setmessage]=useState([])\r\n  const [text, setText] = useState('');\r\n  const [chatBlocklist,setChatblocklist]=useState([])\r\n  const timestamp = firebase.firestore.Timestamp.now();\r\n  const [chatblock, setChatblock] = useState([]);\r\n  const [ticketChatList, setTicketChatList] = useState([]);\r\n  const [sendTo_userid, setsendTo_userid] = useState('');\r\n  const [default_loading, setdefault_loading] = useState(false);\r\n  const [now_activeuser,setNow_activeuser]=useState([]);\r\n\r\n  useEffect(() => {\r\n    // setsendTo_userid(tosend_userid)\r\n    let activeStatus='Active';\r\n    let currentlyActive_user=sessionStorage.getItem('proid')\r\n    axios.get(`http://localhost:5000/Chating_employeelist`)\r\n      .then((res) => {\r\n        const ticketChatList = res.data.data;\r\n        console.log(\"Active status user:\", ticketChatList);\r\n\r\n\r\n        setTicketChatList(ticketChatList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n      // axios.put(`http://localhost:5000/chatActive_update/${Profileid}/${activeStatus}` )\r\n    }, []); \r\n  \r\n  useEffect(() => {\r\n  if (ticketChatList.length > 0) {\r\n      setChatblock(ticketChatList);\r\n    }\r\n  }, [ticketChatList]);\r\n\r\n  const [existingConversations, setExistingConversations] = useState([]);\r\n  const [newUserChatID, setNewUserChatID] = useState(null);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  // const user1 = auth.currentUser.uid;\r\n\r\n  useEffect(() => {\r\n    const usersRef = collection(db, \"users\");\r\n    // create query object\r\n    const q = query(usersRef);\r\n    // execute query\r\n    const unsub = onSnapshot(q, (querySnapshot) => {\r\n      let users = [];\r\n      querySnapshot.forEach((doc) => {\r\n        users.push(doc.data());\r\n      });\r\n      setUsers(users);\r\n    });\r\n    return () => unsub();\r\n  }, []);\r\n  console.log(users)\r\n  const sendMessage = async() => {\r\n\r\n    const user2 = chat.uid;\r\n    const user1 = auth.currentUser.uid;\r\n\r\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\r\n    await addDoc(collection(db, \"messages\", id, \"chat\"), {\r\n      text,\r\n      from: user1,\r\n      to: user2,\r\n      createdAt: Timestamp.fromDate(new Date()),\r\n    });\r\n\r\n    // const db = firebase.firestore();\r\n    // const collectionName = 'chats';\r\n    // const subcollectionName = 'SubChat';\r\n    // const data = {\r\n    //   text,\r\n    //   createdAt: timestamp,\r\n    //   from_uid: Profileid,\r\n    //   to_uid: sendmsgId,\r\n    // };\r\n  \r\n    // if (text.trim() !== '') {\r\n    //   // Use newUserChatID after it's set in the condition\r\n    //   const mainDocRef = db.collection(collectionName).doc(newUserChatID);\r\n  \r\n    //   mainDocRef\r\n    //     .set(data)\r\n    //     .then(() => {\r\n    //       // Once the main document is successfully updated, add the message to the subcollection\r\n    //       mainDocRef\r\n    //         .collection(subcollectionName)\r\n    //         .add(data)\r\n    //         .then(() => {\r\n    //           // Message sent successfully\r\n    //         })\r\n    //         .catch((error) => {\r\n    //           // Handle error\r\n    //         });\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.error('Error writing main document: ', error);\r\n    //     });\r\n  \r\n      setText('');\r\n  \r\n    //   // To immediately update the message state, you can manually add the sent message to the message state.\r\n    //   setmessage((prevMessages) => [...prevMessages, data]);\r\n    // }\r\n  };\r\n  \r\n\r\n\r\nconst chatListItems = searchInput\r\n  ? searchResults.map((item, index) => (\r\n    <div className=\"chatItem\" key={index}>\r\n    <div className=\"imgbx\">\r\n      <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\r\n    </div>\r\n    <div className=\"chatInfo\">\r\n      <p className=\"chatName\" onClick={()=>selectUserchat(item.id,item.firstname)}>{item.firstname}</p>\r\n    </div>\r\n  </div>\r\n  \r\n    )): chatblock.map((item, index) => (\r\n    <div className=\"chatItem\" key={index}>\r\n    <div className=\"imgbx\">\r\n      <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\r\n    </div>\r\n    <div className=\"chatInfo\">\r\n      <p className=\"chatName\" onClick={()=>selectUserchat(item.id,item.firstname)}>{item.firstname}</p>\r\n      </div>\r\n  </div>\r\n    ));\r\nconst handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\nconst [selectedChatMessages, setSelectedChatMessages] = useState([]);\r\n\r\nuseEffect(() => {\r\n  const unsubscribe =firebase.firestore().collection('chats')\r\n  .orderBy('createdAt')\r\n  .get()\r\n  .then((querySnapshot) => {\r\n    const allChats = [];\r\n    querySnapshot.forEach((doc) => {\r\n      allChats.push({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      });\r\n    });\r\n    setmessage(allChats);\r\n    setExistingConversations(allChats)\r\n    \r\n  })\r\n  .catch((error) => {\r\n    console.error('Error getting documents: ', error);\r\n  });\r\n  \r\n  }, []);\r\n\r\n\r\nlet Profilename=sessionStorage.getItem(\"profileName\",Profilename);\r\n\r\nconst [ticketid, setTicketid] = useState(ChatViewid);\r\nconst [chatuser_name,setChatuser_name] = useState(Profilename);\r\nconst [sendmsgId,setSendmsgId ] = useState('');\r\nconst [chat_active,setChatactive]=useState();\r\nconst [chat,setChat]=useState('')\r\nconst selectUserchat = (item) => {\r\n  console.log(\"select users\",item)\r\n  setChat(item)\r\n  // Update state variables directly\r\n  setdefault_loading(true)\r\n  \r\n  setChatuser_name(item.newfirstname);\r\n  // setActiveUser(id);\r\n  // setChatactive(chatActive)\r\n  // const convtStrId = id.toString();\r\n  // setSendmsgId(convtStrId);\r\n\r\n  // const existingChat = existingConversations.find(\r\n  //   (chat) =>\r\n  //     (chat.from_uid === Profileid && chat.to_uid === convtStrId) ||\r\n  //     (chat.from_uid === convtStrId && chat.to_uid === Profileid)\r\n  // );\r\n\r\n  // // Initialize newUserChatID with the existing chat ID or a new one\r\n  // const newUserChatID = existingChat ? existingChat.id : uuidv4();\r\n  // setNewUserChatID(newUserChatID);\r\n\r\n  // setsendTo_userid(convtStrId);\r\n\r\n  // const duplicate_docid = id.toString();\r\n  // setTicketid(duplicate_docid);\r\n\r\n  // // Fetch and display messages for the selected chat\r\n  // fetchMessagesForChat(newUserChatID);\r\n};\r\n\r\nconst fetchMessagesForChat = (chatID) => {\r\n  const unsubscribe = firebase.firestore().collection('chats').doc(chatID).collection('SubChat')\r\n  .orderBy('createdAt')\r\n  .onSnapshot(snapshot => {\r\n    const messages = snapshot.docs.map(doc => ({\r\n      id: doc.id,\r\n      ...doc.data(),\r\n    }));\r\n    setmessage(messages);\r\n  });\r\n\r\nreturn () => unsubscribe();\r\n};\r\n\r\nlet prevDate = null;  \r\nconst [searchInput, setSearchInput] = useState('');\r\nconst [searchResults, setSearchResults] = useState([]);\r\nconst handleSearch = (query) => {\r\n  setSearchInput(query);\r\n\r\n  // Perform search logic (e.g., filter chatblock based on the query)\r\n  const results = chatblock.filter((item) =>\r\n    item.firstname.toLowerCase().includes(query.toLowerCase())\r\n  );\r\n  setSearchResults(results);\r\n};\r\n\r\nconst [activeUser, setActiveUser] = useState(null);\r\n\r\nfunction formatDate(formattedDate) {\r\n\r\n\r\n\r\n}\r\n  return(\r\n    <div className=\"chatroom-container\">\r\n          <div className=\"left-side\">\r\n          <div className=\"header\">\r\n         \r\n          <div className=\"backButton\">\r\n          <ArrowBackIcon className=\"backicon\" />\r\n          <div className=\"chat_heading\">\r\n            <p>Chat</p>\r\n            </div>\r\n        </div>\r\n           \r\n\r\n          </div>\r\n\r\n      \r\n          <div className=\"search-chat\">\r\n            <div>\r\n              <input\r\n      type=\"text\"\r\n      placeholder=\"Search or start new chat\"\r\n      value={searchInput}\r\n      onChange={(e) => handleSearch(e.target.value)}\r\n    />\r\n              <SearchIcon className=\"Search_icon\"/>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n\r\n        <div className=\"chatList\">\r\n          {users\r\n            // .filter(item =>\r\n            //   item.firstname.toLowerCase().includes(searchInput.toLowerCase())\r\n            // )\r\n            .map((item, index) => (\r\n                   <div\r\n      className={classNames(\"chatItem\", { active: item.id === activeUser })}\r\n      key={index}\r\n      onClick={() => selectUserchat(item)}\r\n    >\r\n                <div className=\"imgbx\">\r\n                  <img src={`http://localhost:5000/images/10`} className=\"cover\"  />\r\n                </div>\r\n                <div className=\"chatInfo\">\r\n                  <p className=\"chatName\" >{item.newfirstname}</p>\r\n                  {/* <p className=\"lastMsg_side\" >Hi</p>s */}\r\n\r\n                  {/* <DotButton active={isActive} /> */}\r\n\r\n                </div>\r\n                <div key={index} className=\"activeDot\">\r\n          {item.isOnline === true ? (<DotButton active={isActive} />):(<></>)}\r\n        </div>\r\n         \r\n                \r\n\r\n              </div>\r\n            ))}\r\n            \r\n        </div>\r\n\r\n          </div>\r\n         {default_loading ?(<>\r\n\r\n          <div className=\"right-side\">\r\n          <div className=\"chatHeader\">\r\n          <div className=\"userImage\">\r\n            <img src={\"http://localhost:5000/images/10\"}  className=\"cover\" alt=\"Chat User\" />\r\n          </div>\r\n          <div className=\"userInfo\">\r\n            <p className=\"chatName\">{chatuser_name}</p>\r\n            <p className=\"status\">Online</p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"chatMessages\">\r\n  {message.map((message, index) => {\r\n    const messageDate = message.createdAt.toDate();\r\n    const formattedDate = messageDate.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n \r\n    });\r\n\r\n    const date1 = new Date(formattedDate);\r\n    const today = new Date();\r\n    const formatDate = (date) => {\r\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = date.getDate().toString().padStart(2, '0');\r\n      const year = date.getFullYear();\r\n      return `${month}/${day}/${year}`;\r\n    };\r\n    const getDayName = (date) => {\r\n      const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n      return dayNames[date.getDay()];\r\n    };\r\n    // const formattedDate1 = formatDate(date1);\r\n    // const formattedDate2 = formatDate(today);\r\n    let comparisonResult;\r\n\r\n    const oneWeekAgo = new Date();\r\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n    if (date1 >= oneWeekAgo) {\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n\r\n      if (date1.toDateString() === today.toDateString()) {\r\n        comparisonResult = 'Today';\r\n      } else {\r\n        const dayName = getDayName(date1);\r\n        const formattedDate = formatDate(date1);\r\n        comparisonResult = `${dayName}`;\r\n      }\r\n    } else {\r\n      comparisonResult = `${formattedDate}`;\r\n    }\r\n\r\n  \r\n    console.log(\"Changed date format for demo printed\", comparisonResult);\r\n\r\n    \r\n    \r\n    \r\n    const formattedTime = messageDate.toLocaleTimeString('en-US', {\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n    });\r\n    const lowercaseTime = formattedTime.replace(/\\s/g, '').toLowerCase();\r\n    const showDate = prevDate !== formattedDate;\r\n    prevDate = formattedDate;\r\n\r\n    \r\n\r\n    const isSentByCurrentUser = message.from_uid === Profileid && message.to_uid === sendTo_userid;\r\n    const isReceivedByCurrentUser = message.from_uid === sendTo_userid && message.to_uid === Profileid;\r\n \r\n\r\n\r\n                                                 //  8===8 && 10===10\r\n    if (isSentByCurrentUser || isReceivedByCurrentUser) {\r\n      return (\r\n        <React.Fragment key={index}>\r\n          {showDate && <p className=\"messageDate_show\">{comparisonResult}</p>}\r\n          <div\r\n            key={index}\r\n            className={`message ${isSentByCurrentUser ? 'sent' : 'received'}`}\r\n          >\r\n <p className=\"chat_msgstl\">\r\n      {message.text}\r\n      <span className=\"chating_time\">{lowercaseTime}</span>\r\n    </p>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  })}\r\n</div>\r\n\r\n\r\n\r\n        \r\n<div className=\"messageInput\">\r\n          <input type=\"text\"  value={text} onKeyDown={handleKeyPress} onChange={e => setText(e.target.value)} placeholder=\"Type a message...\" />\r\n          <SendIcon className=\"sendIcon\"  onClick={sendMessage} />\r\n</div>\r\n         \r\n</div> \r\n         \r\n         </>):(<>\r\n         \r\n          <div className=\"chatRoom_loadingimg\">\r\n  <div>\r\n  <img src={defaultchatRoomimg} className=\"imgdeafult-chat\"/>\r\n </div>\r\n {/* <div>\r\n  <img src={Tigmalog} className=\"imgdeafult-logo\"/>\r\n </div> */}\r\n  <div class=\"company-info\">\r\n    <h2>Welcome to Tigma Technology Chat</h2>\r\n</div>\r\n</div>\r\n         \r\n         </>)}\r\n         \r\n\r\n</div>\r\n  )\r\n}\r\nexport default ChatingApp;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}