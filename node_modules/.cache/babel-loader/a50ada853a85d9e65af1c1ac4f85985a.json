{"ast":null,"code":"import _objectSpread from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Project\\\\Front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Project\\\\Front_end\\\\src\\\\new_chat\\\\new_chatingroom.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nimport React from \"react\";\nimport \"./newChat.css\";\nimport userImg from \"./Vijay_YNM.jpg\";\nimport VinuImg from \"./Vinu.jpg\";\nimport Tlogo from \"./Vijay_logo.jpg\";\nimport Jaya from \"./jayaprakash.jpeg\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport SendIcon from '@mui/icons-material/Send';\nimport classNames from \"classnames\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useEffect, useState } from 'react';\nimport firebase from 'firebase/compat/app';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport AddIcon from '@mui/icons-material/Add';\nimport 'firebase/compat/firestore';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { Link, Outlet, useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { v4 as uuidv4 } from 'uuid';\nimport defaultchatRoomimg from \"./default_chtappimg2.png\";\nimport Tigmalog from \"./TigmaVj.jpg\";\nimport DotButton from \"./DotButton \";\nimport { db, auth, storage } from \"../firebase\";\nimport Message from \"./Message\";\nimport { collection, query, where, onSnapshot, addDoc, Timestamp, orderBy, setDoc, doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport Attachment from \"./Attachment\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { Upload } from \"@mui/icons-material\";\nimport User from \"./User\";\nimport MessageForm from \"./MessageForm\";\nfunction ChatingApp() {\n  var _this = this;\n  var Profileid = sessionStorage.getItem(\"proid\", Profileid);\n  var generatedID = uuidv4();\n  var ChatViewid = Profileid;\n  // let tosend_userid='10';\n\n  var Docu_ChatViewid;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setmessage = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    text = _useState4[0],\n    setText = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chatBlocklist = _useState6[0],\n    setChatblocklist = _useState6[1];\n  var timestamp = firebase.firestore.Timestamp.now();\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    chatblock = _useState8[0],\n    setChatblock = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    ticketChatList = _useState10[0],\n    setTicketChatList = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    sendTo_userid = _useState12[0],\n    setsendTo_userid = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    default_loading = _useState14[0],\n    setdefault_loading = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    now_activeuser = _useState16[0],\n    setNow_activeuser = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    msgs = _useState18[0],\n    setMsgs = _useState18[1];\n  useEffect(function () {\n    // setsendTo_userid(tosend_userid)\n    var activeStatus = 'Active';\n    var currentlyActive_user = sessionStorage.getItem('proid');\n    axios.get(\"http://localhost:5000/Chating_employeelist\").then(function (res) {\n      var ticketChatList = res.data.data;\n      setTicketChatList(ticketChatList);\n    }).catch(function (error) {\n      console.error(\"Error fetching data:\", error);\n    });\n    // axios.put(`http://localhost:5000/chatActive_update/${Profileid}/${activeStatus}` )\n  }, []);\n  useEffect(function () {\n    if (ticketChatList.length > 0) {\n      setChatblock(ticketChatList);\n    }\n  }, [ticketChatList]);\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    existingConversations = _useState20[0],\n    setExistingConversations = _useState20[1];\n  var _useState21 = useState(null),\n    _useState22 = _slicedToArray(_useState21, 2),\n    newUserChatID = _useState22[0],\n    setNewUserChatID = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    isActive = _useState24[0],\n    setIsActive = _useState24[1];\n  var _useState25 = useState([]),\n    _useState26 = _slicedToArray(_useState25, 2),\n    users = _useState26[0],\n    setUsers = _useState26[1]; // const user1 = auth.currentUser.uid;\n  useEffect(function () {\n    var usersRef = collection(db, \"users\");\n    // const q = query(usersRef);\n    var q = query(usersRef, where(\"uid\", \"==\", auth.currentUser.uid));\n\n    // execute query\n    var unsub = onSnapshot(q, function (querySnapshot) {\n      var users = [];\n      querySnapshot.forEach(function (doc) {\n        users.push(doc.data());\n      });\n      setUsers(users);\n      console.log(\"users list printed is\", users);\n    });\n    return function () {\n      return unsub();\n    };\n  }, []);\n  var sendMessage = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      var user2, user1, id, url, imgRef, snap, dlUrl;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            user2 = chat.uid;\n            user1 = auth.currentUser.uid;\n            id = user1 > user2 ? \"\".concat(user1 + user2) : \"\".concat(user2 + user1); // ----Images Upload ChatMessages----\n            if (!img) {\n              _context.next = 13;\n              break;\n            }\n            imgRef = ref(storage, \"images/\".concat(img.name));\n            _context.next = 8;\n            return uploadBytes(imgRef, img);\n          case 8:\n            snap = _context.sent;\n            _context.next = 11;\n            return getDownloadURL(ref(storage, snap.ref.fullPath));\n          case 11:\n            dlUrl = _context.sent;\n            url = dlUrl;\n          case 13:\n            _context.next = 15;\n            return addDoc(collection(db, \"messages\", id, \"chat\"), {\n              text: text,\n              from: user1,\n              to: user2,\n              createdAt: Timestamp.fromDate(new Date()),\n              media: url || \"\"\n            });\n          case 15:\n            _context.next = 17;\n            return setDoc(doc(db, \"lastMsg\", id), {\n              text: text,\n              from: user1,\n              to: user2,\n              createdAt: Timestamp.fromDate(new Date()),\n              media: url || \"\",\n              unread: true\n            });\n          case 17:\n            setText('');\n            setImg('');\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function sendMessage(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  // const chatListItems = searchInput\n  //   ? searchResults.map((item, index) => (\n  //     <div className=\"chatItem\" key={index}>\n  //     <div className=\"imgbx\">\n  //       <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\n  //     </div>\n  //     <div className=\"chatInfo\">\n  //       <p className=\"chatName\" onClick={()=>selectUserchat(item.id,item.firstname)}>{item.firstname}</p>\n  //     </div>\n  //   </div>\n\n  //     )): chatblock.map((item, index) => (\n  //     <div className=\"chatItem\" key={index}>\n  //     <div className=\"imgbx\">\n  //       <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\n  //     </div>\n  //     <div className=\"chatInfo\">\n  //       <p className=\"chatName\" onClick={()=>selectUserchat(item.id,item.firstname)}>{item.firstname}</p>\n  //       </div>\n  //   </div>\n  //     ));\n  var handleKeyPress = function handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  var _useState27 = useState([]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    selectedChatMessages = _useState28[0],\n    setSelectedChatMessages = _useState28[1];\n  var _useState29 = useState(\"\"),\n    _useState30 = _slicedToArray(_useState29, 2),\n    img = _useState30[0],\n    setImg = _useState30[1];\n  useEffect(function () {\n    var unsubscribe = firebase.firestore().collection('chats').orderBy('createdAt').get().then(function (querySnapshot) {\n      var allChats = [];\n      querySnapshot.forEach(function (doc) {\n        allChats.push(_objectSpread({\n          id: doc.id\n        }, doc.data()));\n      });\n      setmessage(allChats);\n      setExistingConversations(allChats);\n    }).catch(function (error) {\n      console.error('Error getting documents: ', error);\n    });\n  }, []);\n  var Profilename = sessionStorage.getItem(\"profileName\", Profilename);\n  var _useState31 = useState(ChatViewid),\n    _useState32 = _slicedToArray(_useState31, 2),\n    ticketid = _useState32[0],\n    setTicketid = _useState32[1];\n  var _useState33 = useState(Profilename),\n    _useState34 = _slicedToArray(_useState33, 2),\n    chatuser_name = _useState34[0],\n    setChatuser_name = _useState34[1];\n  var _useState35 = useState(''),\n    _useState36 = _slicedToArray(_useState35, 2),\n    sendmsgId = _useState36[0],\n    setSendmsgId = _useState36[1];\n  var _useState37 = useState(),\n    _useState38 = _slicedToArray(_useState37, 2),\n    chat_active = _useState38[0],\n    setChatactive = _useState38[1];\n  var _useState39 = useState(''),\n    _useState40 = _slicedToArray(_useState39, 2),\n    chat = _useState40[0],\n    setChat = _useState40[1];\n  var _useState41 = useState(),\n    _useState42 = _slicedToArray(_useState41, 2),\n    curtactUser = _useState42[0],\n    setCurtactUser = _useState42[1];\n  var user1 = auth.currentUser ? auth.currentUser.uid : null;\n  // useEffect(() => {\n  //   const usersRef = collection(db, \"users\");\n  //   // create query object\n  //   const q = query(usersRef, where(\"uid\", \"not-in\", [user1]));\n  //   // execute query\n  //   const unsub = onSnapshot(q, (querySnapshot) => {\n  //     let users = [];\n  //     querySnapshot.forEach((doc) => {\n  //       users.push(doc.data());\n  //     });\n  //     setUsers(users);\n  //   });\n  //   return () => unsub();\n  // }, []);\n\n  var selectUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(user) {\n      var user2, id, msgsRef, q, docSnap;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            setChat(user);\n            setdefault_loading(true);\n            setChatuser_name(user.newfirstname);\n            user2 = user.uid;\n            setCurtactUser(user1);\n            id = user1 > user2 ? \"\".concat(user1 + user2) : \"\".concat(user2 + user1);\n            msgsRef = collection(db, \"messages\", id, \"chat\");\n            q = query(msgsRef, orderBy(\"createdAt\", \"asc\"));\n            onSnapshot(q, function (querySnapshot) {\n              var msgs = [];\n              querySnapshot.forEach(function (doc) {\n                msgs.push(doc.data());\n              });\n              setMsgs(msgs);\n            });\n            _context2.next = 11;\n            return getDoc(doc(db, \"lastMsg\", id));\n          case 11:\n            docSnap = _context2.sent;\n            if (!(docSnap.data() && docSnap.data().from !== user1)) {\n              _context2.next = 15;\n              break;\n            }\n            _context2.next = 15;\n            return updateDoc(doc(db, \"lastMsg\", id), {\n              unread: false\n            });\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function selectUser(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var prevDate = null;\n  var _useState43 = useState(''),\n    _useState44 = _slicedToArray(_useState43, 2),\n    searchInput = _useState44[0],\n    setSearchInput = _useState44[1];\n  var _useState45 = useState([]),\n    _useState46 = _slicedToArray(_useState45, 2),\n    searchResults = _useState46[0],\n    setSearchResults = _useState46[1];\n  var handleSearch = function handleSearch(query) {\n    setSearchInput(query);\n\n    // Perform search logic (e.g., filter chatblock based on the query)\n    var results = chatblock.filter(function (item) {\n      return item.firstname.toLowerCase().includes(query.toLowerCase());\n    });\n    setSearchResults(results);\n  };\n  var _useState47 = useState(null),\n    _useState48 = _slicedToArray(_useState47, 2),\n    activeUser = _useState48[0],\n    setActiveUser = _useState48[1];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"users_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leftside_heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, \"Chat\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-chat1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search or start new chat\",\n    value: searchInput,\n    onChange: function onChange(e) {\n      return handleSearch(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }\n  })), users.map(function (user) {\n    return /*#__PURE__*/React.createElement(User, {\n      key: user.uid,\n      user: user,\n      selectUser: selectUser,\n      chat: chat,\n      user1: user1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 23\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 5\n    }\n  }, chat ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages_user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: chat.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }, chat.newfirstname), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, chat.isOnline ? 'Online' : 'Offline')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 12\n    }\n  }, msgs.length ? msgs.map(function (msg, i) {\n    return /*#__PURE__*/React.createElement(Message, {\n      key: i,\n      msg: msg,\n      user1: user1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }\n    });\n  }) : null), /*#__PURE__*/React.createElement(MessageForm, {\n    sendMessage: sendMessage,\n    text: text,\n    setText: setText,\n    setImg: setImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"no_conv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }\n  }, \"Select a user to start conversation\")));\n}\nexport default ChatingApp;","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","React","userImg","VinuImg","Tlogo","Jaya","SearchIcon","SendIcon","classNames","ArrowBackIcon","useEffect","useState","firebase","Button","axios","AddIcon","Scrollbars","Link","Outlet","useNavigate","useParams","useLocation","v4","uuidv4","defaultchatRoomimg","Tigmalog","DotButton","db","auth","storage","Message","collection","query","where","onSnapshot","addDoc","Timestamp","orderBy","setDoc","doc","getDoc","updateDoc","Attachment","ref","getDownloadURL","uploadBytes","Upload","User","MessageForm","ChatingApp","_this","Profileid","sessionStorage","getItem","generatedID","ChatViewid","Docu_ChatViewid","_useState","_useState2","_slicedToArray","message","setmessage","_useState3","_useState4","text","setText","_useState5","_useState6","chatBlocklist","setChatblocklist","timestamp","firestore","now","_useState7","_useState8","chatblock","setChatblock","_useState9","_useState10","ticketChatList","setTicketChatList","_useState11","_useState12","sendTo_userid","setsendTo_userid","_useState13","_useState14","default_loading","setdefault_loading","_useState15","_useState16","now_activeuser","setNow_activeuser","_useState17","_useState18","msgs","setMsgs","activeStatus","currentlyActive_user","get","res","data","error","console","_useState19","_useState20","existingConversations","setExistingConversations","_useState21","_useState22","newUserChatID","setNewUserChatID","_useState23","_useState24","isActive","setIsActive","_useState25","_useState26","users","setUsers","usersRef","q","currentUser","uid","unsub","querySnapshot","log","sendMessage","_ref","_asyncToGenerator","_callee","user2","user1","id","url","imgRef","snap","dlUrl","_callee$","_context","preventDefault","chat","concat","img","fullPath","from","to","createdAt","fromDate","Date","media","unread","setImg","_x","apply","arguments","handleKeyPress","event","key","_useState27","_useState28","selectedChatMessages","setSelectedChatMessages","_useState29","_useState30","unsubscribe","allChats","_objectSpread","Profilename","_useState31","_useState32","ticketid","setTicketid","_useState33","_useState34","chatuser_name","setChatuser_name","_useState35","_useState36","sendmsgId","setSendmsgId","_useState37","_useState38","chat_active","setChatactive","_useState39","_useState40","setChat","_useState41","_useState42","curtactUser","setCurtactUser","selectUser","_ref2","_callee2","user","msgsRef","docSnap","_callee2$","_context2","newfirstname","_x2","prevDate","_useState43","_useState44","searchInput","setSearchInput","_useState45","_useState46","searchResults","setSearchResults","handleSearch","results","filter","item","firstname","toLowerCase","includes","_useState47","_useState48","activeUser","setActiveUser","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","target","map","Fragment","src","imageUrl","isOnline","msg"],"sources":["C:/Project/Front_end/src/new_chat/new_chatingroom.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./newChat.css\";\r\nimport userImg from \"./Vijay_YNM.jpg\";\r\nimport VinuImg from \"./Vinu.jpg\";\r\nimport Tlogo from \"./Vijay_logo.jpg\";\r\nimport Jaya from \"./jayaprakash.jpeg\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport classNames from \"classnames\"; \r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { useEffect, useState } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from \"axios\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport 'firebase/compat/firestore';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { Link, Outlet, useNavigate, useParams,useLocation } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport defaultchatRoomimg from \"./default_chtappimg2.png\";\r\nimport Tigmalog from \"./TigmaVj.jpg\";\r\nimport DotButton from \"./DotButton \";\r\nimport { db, auth, storage } from \"../firebase\";\r\nimport Message from \"./Message\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  onSnapshot,\r\n  addDoc,\r\n  Timestamp,\r\n  orderBy,\r\n  setDoc,\r\n  doc,\r\n  getDoc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport Attachment from \"./Attachment\";\r\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\r\nimport { Upload } from \"@mui/icons-material\";\r\nimport User from \"./User\"; \r\nimport MessageForm from \"./MessageForm\";\r\nfunction ChatingApp(){\r\n  let Profileid=sessionStorage.getItem(\"proid\",Profileid)\r\n  const generatedID = uuidv4();\r\n  var ChatViewid=Profileid;\r\n  // let tosend_userid='10';\r\n  \r\n  var Docu_ChatViewid;\r\n\r\n  const[message,setmessage]=useState([])\r\n  const [text, setText] = useState('');\r\n  const [chatBlocklist,setChatblocklist]=useState([])\r\n  const timestamp = firebase.firestore.Timestamp.now();\r\n  const [chatblock, setChatblock] = useState([]);\r\n  const [ticketChatList, setTicketChatList] = useState([]);\r\n  const [sendTo_userid, setsendTo_userid] = useState('');\r\n  const [default_loading, setdefault_loading] = useState(false);\r\n  const [now_activeuser,setNow_activeuser]=useState([]);\r\n  const [msgs, setMsgs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // setsendTo_userid(tosend_userid)\r\n    let activeStatus='Active';\r\n    let currentlyActive_user=sessionStorage.getItem('proid')\r\n    axios.get(`http://localhost:5000/Chating_employeelist`)\r\n      .then((res) => {\r\n        const ticketChatList = res.data.data;\r\n\r\n\r\n        setTicketChatList(ticketChatList);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n      // axios.put(`http://localhost:5000/chatActive_update/${Profileid}/${activeStatus}` )\r\n    }, []); \r\n  \r\n  useEffect(() => {\r\n  if (ticketChatList.length > 0) {\r\n      setChatblock(ticketChatList);\r\n    }\r\n  }, [ticketChatList]);\r\n\r\n  const [existingConversations, setExistingConversations] = useState([]);\r\n  const [newUserChatID, setNewUserChatID] = useState(null);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  // const user1 = auth.currentUser.uid;\r\n\r\n  useEffect(() => {\r\n    const usersRef = collection(db, \"users\");\r\n    // const q = query(usersRef);\r\n    const q = query(usersRef, where(\"uid\", \"==\",  auth.currentUser.uid));\r\n\r\n    // execute query\r\n    const unsub = onSnapshot(q, (querySnapshot) => {\r\n      let users = [];\r\n      querySnapshot.forEach((doc) => {\r\n        users.push(doc.data());\r\n      });\r\n      setUsers(users);\r\n      console.log(\"users list printed is\",users)\r\n\r\n    });\r\n    return () => unsub();\r\n  }, []);\r\n  const sendMessage = async(e) => {\r\n    e.preventDefault();\r\n    const user2 = chat.uid;\r\n    const user1 = auth.currentUser.uid;\r\n\r\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\r\n\r\n    // ----Images Upload ChatMessages----\r\n\r\n\r\n    let url;\r\n    if (img) {\r\n      const imgRef = ref(\r\n        storage,\r\n        `images/${img.name}`\r\n      );\r\n      const snap = await uploadBytes(imgRef, img);\r\n      const dlUrl = await getDownloadURL(ref(storage, snap.ref.fullPath));\r\n      url = dlUrl;\r\n    }\r\n\r\n\r\n    // if(img){\r\n    //   const imageRef = ref(storage, `images/${auth.currentUser.uid}/${img.name}`);\r\n    //   const metadata = {\r\n    //     contentType: 'image/jpeg', \r\n    //   };\r\n  \r\n    //   await uploadBytes(imageRef, img, metadata);\r\n  \r\n    //   // Get the download URL of the uploaded image\r\n    //   const imageUrl = await getDownloadURL(imageRef);\r\n    //   console.log(imageUrl)\r\n    //   url = imageUrl;\r\n\r\n    // }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    await addDoc(collection(db, \"messages\", id, \"chat\"), {\r\n      text,\r\n      from: user1,\r\n      to: user2,\r\n      createdAt: Timestamp.fromDate(new Date()),\r\n      media: url || \"\",\r\n    });\r\n    await setDoc(doc(db, \"lastMsg\", id), {\r\n      text,\r\n      from: user1,\r\n      to: user2,\r\n      createdAt: Timestamp.fromDate(new Date()),\r\n      media: url || \"\",\r\n      unread: true,\r\n    });\r\n   setText('');\r\n   setImg('');\r\n  \r\n  \r\n  };\r\n  \r\n\r\n\r\n// const chatListItems = searchInput\r\n//   ? searchResults.map((item, index) => (\r\n//     <div className=\"chatItem\" key={index}>\r\n//     <div className=\"imgbx\">\r\n//       <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\r\n//     </div>\r\n//     <div className=\"chatInfo\">\r\n//       <p className=\"chatName\" onClick={()=>selectUserchat(item.id,item.firstname)}>{item.firstname}</p>\r\n//     </div>\r\n//   </div>\r\n  \r\n//     )): chatblock.map((item, index) => (\r\n//     <div className=\"chatItem\" key={index}>\r\n//     <div className=\"imgbx\">\r\n//       <img src={\"http://localhost:5000/images/\"+ item.id}  className=\"cover\"  />\r\n//     </div>\r\n//     <div className=\"chatInfo\">\r\n//       <p className=\"chatName\" onClick={()=>selectUserchat(item.id,item.firstname)}>{item.firstname}</p>\r\n//       </div>\r\n//   </div>\r\n//     ));\r\nconst handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\nconst [selectedChatMessages, setSelectedChatMessages] = useState([]);\r\nconst [img,setImg]=useState(\"\");\r\nuseEffect(() => {\r\n\r\n  const unsubscribe =firebase.firestore().collection('chats')\r\n  .orderBy('createdAt')\r\n  .get()\r\n  .then((querySnapshot) => {\r\n    const allChats = [];\r\n    querySnapshot.forEach((doc) => {\r\n      allChats.push({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      });\r\n    });\r\n    setmessage(allChats);\r\n    setExistingConversations(allChats)\r\n    \r\n  })\r\n  .catch((error) => {\r\n    console.error('Error getting documents: ', error);\r\n  });\r\n  \r\n  }, []);\r\n\r\n\r\nlet Profilename=sessionStorage.getItem(\"profileName\",Profilename);\r\n\r\nconst [ticketid, setTicketid] = useState(ChatViewid);\r\nconst [chatuser_name,setChatuser_name] = useState(Profilename);\r\nconst [sendmsgId,setSendmsgId ] = useState('');\r\nconst [chat_active,setChatactive]=useState();\r\nconst [chat,setChat]=useState('');\r\nconst [curtactUser,setCurtactUser]=useState();\r\n\r\nconst user1 = auth.currentUser ? auth.currentUser.uid : null;\r\n// useEffect(() => {\r\n//   const usersRef = collection(db, \"users\");\r\n//   // create query object\r\n//   const q = query(usersRef, where(\"uid\", \"not-in\", [user1]));\r\n//   // execute query\r\n//   const unsub = onSnapshot(q, (querySnapshot) => {\r\n//     let users = [];\r\n//     querySnapshot.forEach((doc) => {\r\n//       users.push(doc.data());\r\n//     });\r\n//     setUsers(users);\r\n//   });\r\n//   return () => unsub();\r\n// }, []);\r\n\r\nconst selectUser = async(user) => {\r\n  setChat(user)\r\n  setdefault_loading(true)\r\n  setChatuser_name(user.newfirstname);\r\n  const user2 = user.uid;\r\n  setCurtactUser(user1)\r\n  const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\r\n  const msgsRef = collection(db, \"messages\", id, \"chat\");\r\n  const q = query(msgsRef, orderBy(\"createdAt\", \"asc\"));\r\n  onSnapshot(q, (querySnapshot) => {\r\n      let msgs = [];\r\n      querySnapshot.forEach((doc) => {\r\n        msgs.push(doc.data());\r\n      });\r\n      setMsgs(msgs);\r\n    });\r\n\r\n    const docSnap = await getDoc(doc(db, \"lastMsg\", id));\r\n    if (docSnap.data() && docSnap.data().from !== user1) {\r\n      // update last message doc, set unread to false\r\n      await updateDoc(doc(db, \"lastMsg\", id), { unread: false });\r\n    }\r\n};\r\n\r\nlet prevDate = null;  \r\nconst [searchInput, setSearchInput] = useState('');\r\nconst [searchResults, setSearchResults] = useState([]);\r\nconst handleSearch = (query) => {\r\n  setSearchInput(query);\r\n\r\n  // Perform search logic (e.g., filter chatblock based on the query)\r\n  const results = chatblock.filter((item) =>\r\n    item.firstname.toLowerCase().includes(query.toLowerCase())\r\n  );\r\n  setSearchResults(results);\r\n};\r\n\r\nconst [activeUser, setActiveUser] = useState(null);\r\n\r\n\r\n  return(\r\n    <div className=\"home_container\">\r\n    <div className=\"users_container\">\r\n    <div className=\"leftside_heading\">\r\n      <p>Chat</p>\r\n\r\n      </div>\r\n      <div className=\"search-chat1\">\r\n      <input\r\n      type=\"text\"\r\n      placeholder=\"Search or start new chat\"\r\n      value={searchInput}\r\n      onChange={(e) => handleSearch(e.target.value)}\r\n    />\r\n              {/* <SearchIcon className=\"Search_icon\"/> */}\r\n            \r\n          </div>\r\n    {users.map(user =><User \r\n    key={user.uid}\r\n    user={user} \r\n    selectUser={selectUser} \r\n    chat={chat}\r\n    user1={user1}\r\n\r\n\r\n    /> )}\r\n\r\n    </div>\r\n    <div className=\"messages_container\">\r\n      {chat ? (\r\n        <>\r\n         <div className=\"messages_user\">\r\n            <img src={chat.imageUrl} />\r\n            <p>{chat.newfirstname}</p>\r\n            <small>{chat.isOnline ?'Online':'Offline'}</small>\r\n\r\n        \r\n          </div>\r\n\r\n           <div className=\"messages\">\r\n              {msgs.length\r\n                ? msgs.map((msg, i) => (\r\n                    <Message key={i} msg={msg} user1={user1} />\r\n                  ))\r\n                : null}\r\n            </div>\r\n            <MessageForm\r\n              sendMessage={sendMessage}\r\n              text={text}\r\n              setText={setText}\r\n              setImg={setImg}\r\n            />\r\n        \r\n        \r\n        </>\r\n       \r\n         \r\n\r\n      ) : (\r\n        <h3 className=\"no_conv\">Select a user to start conversation</h3>\r\n      )}\r\n    </div>\r\n  </div>\r\n  )}\r\n\r\n\r\nexport default ChatingApp;  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    "],"mappings":"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"},"metadata":{},"sourceType":"module"}